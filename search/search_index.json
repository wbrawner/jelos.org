{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-the-jelos-wiki","title":"Welcome to the JELOS Wiki","text":"<p>Just Enough Linux Operating System (JELOS) is an immutable Linux distribution for handheld gaming devices focused on retro gaming emulation.  It is developed by a small community of enthusiasts and our goal is to produce an operating system that has the features and capabilities we need and to have fun as we develop it.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Integrated cross-device local and remote network play.</li> <li>In-game touch support on supported devices.</li> <li>Fine grain control for battery life or performance.</li> <li>Includes support for playing Music and Video.</li> <li>Bluetooth audio and controller support.</li> <li>Support for HDMI audio and video out, and USB audio.</li> <li>Device to device and device to cloud sync with Syncthing and rclone.</li> <li>VPN support with Wireguard, Tailscale, and ZeroTier.</li> <li>Includes built-in support for scraping and retroachievements.</li> </ul>"},{"location":"#preview","title":"Preview","text":""},{"location":"#community","title":"Community","text":"<p>The JELOS community utilizes Discord for discussion, if you would like to join us please use this link: \u00a0 Discord</p>"},{"location":"#licenses","title":"Licenses","text":"<p>JELOS is a Linux distribution that is made up of many open-source components.  Components are provided under their respective licenses.  This distribution includes components licensed for non-commercial use only.</p>"},{"location":"#jelos-branding","title":"JELOS Branding","text":"<p>JELOS branding and images are licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.</p> <p>You are free to:</p> <ul> <li>Share: copy and redistribute the material in any medium or format</li> <li>Adapt: remix, transform, and build upon the material</li> </ul> <p>Under the following terms:</p> <ul> <li>Attribution: You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.</li> <li>NonCommercial: You may not use the material for commercial purposes.</li> <li>ShareAlike: If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original.</li> </ul>"},{"location":"#jelos-software","title":"JELOS Software","text":"<p>Copyright 2023 JELOS (https://github.com/JustEnoughLinuxOS)</p> <p>Original software and scripts developed by the JELOS team are licensed under the terms of the GNU GPL Version 2.  The full license can be found in this project's licenses folder.</p>"},{"location":"#bundled-works","title":"Bundled Works","text":"<p>All other software is provided under each component's respective license.  These licenses can be found in the software sources or in this project's licenses folder.  Modifications to bundled software and scripts by the JELOS team are licensed under the terms of the software being modified.</p>"},{"location":"#credits","title":"Credits","text":"<p>Like any Linux distribution, this project is not the work of one person.  It is the work of many persons all over the world who have developed the open source bits without which this project could not exist.  Special thanks to CoreELEC, LibreELEC, and to developers and contributors across the open source community.</p>"},{"location":"donations/","title":"Donations","text":"<p>Thank you for your interest in donating to JELOS! We don't accept financial contributions. If you would like to volunteer or contribute in some way to our project, please read our Code of Conduct and Contributing to JELOS guides.  You are also encouraged to join us on Discord to learn and collaborate with us.</p>"},{"location":"donations/#why-dont-you-accept-donations","title":"Why Don't You Accept Donations?","text":"<ul> <li>As an Open Source project our operational expenses are fairly low, so to us a donation of your time is much more valuable </li> <li>Open Source development is not considered charitable activity in some parts of the world, including the United States.  Accepting donations can create unnecessary complexity for the project, and for the person donating.</li> </ul>"},{"location":"donations/#build-infrastructure","title":"Build Infrastructure","text":"<p>Our GitHub runners are the nodes we use to build and push releases to GitHub. Trillian is our primary development host, Deepthought is our primary release builder.  Node specs can be found in the table below:</p> Name CPU Cores/Threads RAM Disk Usage deepthought Ryzen 7 5800H 8c/16t 32GB 2TB NVMe SSD GitHub Runner trillian Ryzen 7 5800H 8c/16t 32GB 2TB NVMe SSD Local Dev"},{"location":"donations/#project-and-web-hosting","title":"Project and Web Hosting","text":"<p>GitHub serves our release packages, as well as our WIKI.  Our domain, jelos.org is hosted with GitHub pages and powered by MkDocs + Material.  Currently, JELOS does not take advantage of any functionality that requires a paid GitHub plan.</p> Project URL Comment JELOS github.com/JustEnoughLinuxOS/distribution Project site, Stable Release Repository. Documentation jelos.org JELOS Wiki"},{"location":"faqs/","title":"Frequently Asked Questions","text":""},{"location":"faqs/#about-jelos","title":"About JELOS","text":""},{"location":"faqs/#does-jelos-offer-any-formal-support","title":"Does JELOS offer any formal support?","text":"<p>No. JELOS is something that we develop for fun, it is provided as-is.  There are a variety of avenues to seek community help, but this is a tinkerer's distribution so you will need to get your hands dirty to solve any issues.</p>"},{"location":"faqs/#do-you-plan-to-add-additional-ports-software-or-emulators","title":"Do you plan to add additional ports, software, or emulators?","text":"<p>We are a community developed distribution, and we believe that it is the responsibility of the person who wants a new feature to develop and contribute that feature. If you would like to add something to JELOS, pull requests are welcomed.  Please review our code of conduct, our contributing guidelines, and our build guide before submitting your first pull request.</p>"},{"location":"faqs/#do-you-support-x-device-will-you-add-support-for-x-device","title":"Do you support X device?  Will you add support for X device?","text":"<p>You can find the list of currently supported devices here: Devices</p> <p>If the device you are interested in isn't in that list then no one has contributed the work to add support for it yet.  Why? To add support for a device we (1) need to be interested in adding support for it \ud83d\ude0a and (2) need to have direct access to the device.</p> <p>That said, anyone who is interested can submit updates to JELOS to add support for a device they care about! If you are interested in adding support for a new device please start here: Contribute</p>"},{"location":"faqs/#licensing-jelos-for-redistribution","title":"Licensing JELOS for redistribution","text":"<p>JELOS utilizes a non-commercial CC BY-NC-SA 4.0 copyleft license on our branding which is intended to prevent abuse of our work.  Device Makers and others who would like to bundle on devices may not do so without our express permission.</p>"},{"location":"faqs/#selling-jelos","title":"Selling JELOS","text":"<p>The JELOS brand is licensed for non-commercial use only.  It is not allowed to be sold or included as an up charge in any form what-so-ever.  Period.  This is not negotiable.</p>"},{"location":"faqs/#what-if-you-stop-working-on-jelos","title":"What if you stop working on JELOS?","text":"<p>We don't expect that to happen, however JELOS is an Open Source project hosted here on GitHub which means the source code is readily available for anyone in the world to pick up and continue where we left off.  Our license model(GPLv2) license when no other license applies.) allows for this to happen by providing and encouraging redistribution (freedom 2) and the right to distribute a modified version (freedom 3).  JELOS only prohibits commercial use through our branding which is licensed by the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.</p>"},{"location":"faqs/#using-jelos","title":"Using JELOS","text":""},{"location":"faqs/#which-emulators-and-game-engines-are-supported-by-jelos","title":"Which emulators and game engines are supported by JELOS?","text":"<p>Emulators and game engines are configured on a per device basis and are automatically documented at build time.  Documentation can be found at the following URL: Per Device Documentation</p>"},{"location":"faqs/#how-do-i-log-in-over-ssh-or-samba","title":"How do I log in over SSH or Samba?","text":"<p>External services (SSH and Samba) are disabled by default in release builds, and can be enabled in the Network Settings menu.  When enabled, the SSH/Samba username is \"root\".  The root password is regenerated by default after each reboot, and can be found in the System Settings menu.  You can optionally provide your own root password if you wish.</p> <p>If logging in to Samba fails on Windows with the message, \"The user name or password is incorrect\", see these links for a solution (Windows 10 Pro, Windows 10 Home).</p> <p>Please also see the Networking and Adding Games to JELOS pages for additional details.</p>"},{"location":"faqs/#sound-suddenly-stopped-working-on-my-device","title":"Sound suddenly stopped working on my device!","text":"<p>Log in over ssh, and run the following steps. <pre><code>systemctl stop pipewire-pulse pipewire-pulse.socket pipewire pipewire.socket wireplumber\nrm -rf /storage/.local/state /storage/.config/pulse\nreboot\n</code></pre></p>"},{"location":"faqs/#emustation-displays-duplicate-game-titles-how-can-i-disable-a-file-extension-to-remove-the-duplicates-eg-display-only-cue-and-dont-display-bin-files-for-playstation","title":"EmuStation displays duplicate game titles. How can I disable a file extension to remove the duplicates? (e.g. display only <code>.cue</code> and don't display <code>.bin</code> files for PlayStation)","text":"<ul> <li>Within EmuStation, select the relevant game system (e.g. PlayStation)</li> <li>Press <code>Select</code> to View Options</li> <li>In View Options section, choose View Customisation</li> <li>Under File Extensions, deselect any file extensions that are not required (e.g. deselect <code>.bin</code> for PlayStation when also using <code>.cue</code> files)</li> </ul>"},{"location":"faqs/#how-do-i-edit-es_systemscfg-for-example-to-modify-the-list-of-systems-in-emustation-add-a-custom-core-or-script-or-change-the-order-that-systems-are-displayed","title":"How do I edit <code>es_systems.cfg</code> (for example, to modify the list of systems in EmuStation, add a custom core or script, or change the order that systems are displayed)?","text":"<ul> <li>Delete the ~/.config/emulationstation/es_systems.cfg symlink.</li> <li>Copy the custom version of <code>es_systems.cfg</code> to <code>~/.config/emulationstation</code>.</li> <li>Stop the UI service: <code>systemctl stop ${UI_SERVICE}</code></li> <li>Restart the UI service to use the custom version: <code>systemctl start ${UI_SERVICE}</code></li> </ul> <p>Note: System updates will overwrite it, custom settings will be preserved as last_es_systems.cfg.</p>"},{"location":"faqs/#where-do-i-put-bios-files-and-files-and-retroarch-system-files","title":"Where do I put bios files and files and Retroarch system files","text":"<ul> <li>Bios files go in <code>/storage/roms/bios</code></li> <li>Please see the corresponding system documentation in the wiki for required files for each system.</li> </ul>"},{"location":"faqs/#where-do-i-put-music-files-to-enable-background-music-within-emulationstation-while-browsing-my-game-library","title":"Where do I put music files to enable background music within emulationstation (while browsing my game library)?","text":"<ul> <li>Music files should be added to <code>/storage/roms/BGM</code></li> </ul>"},{"location":"faqs/#my-game-has-slowdown-and-stuttering-issues-what-can-i-do-to-improve-performance","title":"My game has slowdown and stuttering issues. What can I do to improve performance?","text":"<p>First make sure you don't have a TDP configured that is too low for your emulator to function correctly.  Next, try adjusting settings within the emulator, either retroarch core or standalone emulator configuration menu.</p>"},{"location":"faqs/#where-are-log-files-stored","title":"Where are log files stored?","text":"<p>Log files can be found in <code>/var/log/</code></p> <p>Various logs are generated, including</p> <ul> <li>EmuStation logs <code>es_log.txt</code> (cumulative log of all ES activity), <code>es_launch_stdout.log</code> (last emulator launched from ES) and <code>es_launch_stderr.log</code> (blank if there wasn't an error for the last emulator launch)</li> <li>Execution log <code>exec.log</code> (generic execution log that indicates what was last executed, including the command to launch the emulator) e.g. for gzdoom launch of heretic.doom <code>runemu.sh: Executing /usr/bin/bash start_gzdoom.sh /storage/roms/doom/heretic.doom</code></li> <li>Boot log <code>boot.log</code> (Output from autostart during system startup)</li> <li>Emulator-specific log (for non-retroarch emulators) e.g. <code>gzdoom.log</code> is the log specific to gzdoom to indicate whether there is any issue within the emulator when launching heretic.doom, noted above</li> <li>Retroarch logs are turned off by default, but can be enabled within Retroarch (<code>Tools &gt; Retroarch</code>: <code>Settings &gt; Logging &gt; Log to a File</code>), are stored in <code>/var/log/retroarch</code> and are quite detailed, so should provide sufficient detail to identify missing roms within a game's romset, configuration issues and other errors that prevent games from working</li> </ul> <p>Note: Retroarch uses a shared config file, so logging can be enabled within 64bit or 32bit and it will be enabled for all Retroarch cores</p>"},{"location":"faqs/#i-have-a-device-with-a-single-microsd-and-i-cant-see-the-games-partition-in-windows-or-macos","title":"I have a device with a single microsd and I can't see the games partition in Windows or macOS.","text":"<p>JELOS does not create an ExFAT partition on the boot device, and expands the full partition using ext4.  You can sync files to the device over the network or by loading your files onto a EXT4, ExFAT, or FAT32 formatted usb stick and copy them with FileMan or over ssh.  Please see the Adding Games page for more details.</p>"},{"location":"configure/cloud-sync/","title":"Cloud Sync","text":"<p>JELOS has built in support for multiple cloud sync options.  These can be used to sync save files, games and other files between multiple devices. </p>"},{"location":"configure/cloud-sync/#syncthing","title":"Syncthing","text":"<p>Syncthing is a tool that lets you synchronize the contents of folders across multiple devices. It is different from cloud storage in that devices are updated directly with the latest changes from their peer(s) whenever they are online at the same time. Some things you can use it for with JELOS:</p> <ul> <li>Keep your game library synchronized between your computer and JELOS device(s),</li> <li>Keep all your handhelds synchronized (including those that run Android),</li> <li>Copy savegames as they are created and seamlessly continue playing on another device,</li> <li>Keep a copy of your configuration files for easier editing.</li> </ul>"},{"location":"configure/cloud-sync/#setup","title":"Setup","text":""},{"location":"configure/cloud-sync/#setup-on-jelos","title":"Setup on JELOS","text":"<ul> <li>Make sure you are connected to a WiFi network before continuing.</li> <li>Go to \"Network Settings\" and set \"Enable Syncthing\" to \"on\". Make a note of your device's IP address, as well as the root password in the System Settings menu.</li> <li>On a computer or mobile device in the same network, open a browser and point it to \"http://a.b.c.d:8384\" where \"a.b.c.d\" is the IP address of your JELOS device.</li> <li>When prompted for a user name and password, enter \"root\" as user and the password you noted earlier.</li> <li>You should now be directed to a configuration page running on your JELOS device - we'll come back to this shortly.</li> </ul>"},{"location":"configure/cloud-sync/#setup-on-peers","title":"Setup on Peer(s)","text":"<p>Install Syncthing on the device or computer that you want to synchronize with your JELOS device. If your other device also runs JELOS, simply repeat the above steps. Otherwise go to https://syncthing.net to download Syncthing for your platform. You may also find it in your Linux distribution's package manager, the Android Play Store, etc. Generally it is not required to install the same version of Syncthing on all devices. You can synchronize a folder across any number of peers.</p>"},{"location":"configure/cloud-sync/#connecting-folders","title":"Connecting Folders","text":"<ol> <li>Go to the web interface of your JELOS device (see above). Don't worry about notices about upgrading or the file system being read-only, nothing you can do. (Note: You can also go to the web interface of any of the peers, it'll work the same - but for this documentation it is assumed that you're on a JELOS device.)</li> <li>Under \"Remote Devices\", click \"Add Remote Device\". Enter the Device ID of the peer you want to synchronize with. If the remote is in the same network as your JELOS device the ID will be shown automatically. Otherwise, you'll find it in the remote's web interface by clicking \"Actions\" at the top and then \"Show ID\". Give the device a name if you like.</li> <li>In the \"Folders\" section, click \"Add Folder\". In the popup window that opens, set a label and specify the path on the device (e.g. /storage/roms). This is the folder you will be sharing with other peers.</li> <li>In the same popup window, go to the \"Sharing\" tab and select the remote device you just set up. Optionally, go to the \"Ignore Patterns\" tab and configure those. Click \"Save\" to close the window.</li> <li>On the remote's interface you should receive a popup that a new device wants to connect. Click \"Add Device\" and then \"Save\" to accept. It should now show up under \"Remote Devices\".</li> <li>Still on the remote, you should receive a new popup saying that the JELOS device wants to share a folder. Click \"Add\", then in the popup window, specify the path to an empty local folder to store the synchronized contents. Click \"Save\".</li> <li>The folder should now be copied from the JELOS device to the remote.</li> </ol>"},{"location":"configure/cloud-sync/#adding-more-peers","title":"Adding more Peers","text":"<ul> <li>To share the folder with more peers, first follow step 2 on your JELOS device to add another remote.</li> <li>Find the folder you want to add another peer to and click \"Edit\".</li> <li>In the popup window, go to the \"Sharing\" tab. The new remote should appear as an option. Select it and then click \"Save\".</li> <li>Follow steps 5 and 6 on the new remote to connect the folder.</li> </ul>"},{"location":"configure/cloud-sync/#things-to-keep-in-mind","title":"Things to Keep in Mind","text":""},{"location":"configure/cloud-sync/#syncthing-is-not-a-cloud-storage","title":"Syncthing is not a cloud storage","text":"<p>In order for devices to synchronize, they need to be online at the same time. Unless you have one peer that is always on, this is different from an online storage like Dropbox or Nextcloud. However, this behaviour can be emulated (no pun intended) by installing Syncthing on a cloud server or an always-on Raspberry Pi.</p>"},{"location":"configure/cloud-sync/#syncthing-is-not-a-backup","title":"Syncthing is not a backup","text":"<p>Folders are synchronized with other peers immediately as they come online at the same time - this includes changes and deletions! Be sure to make regular backups of your folders.</p>"},{"location":"configure/cloud-sync/#devices-do-not-need-to-be-on-the-same-network","title":"Devices do not need to be on the same network","text":"<p>Syncthing uses relay servers to ensure communication between peers. This means that there does not need to be a direct connection between your devices, no port forwarding, etc - as soon as they are both online they will find each other and synchronize. Although file transfers are end-to-end encrypted when they are sent through relays, be aware of this if you plan on using Syncthing for anything more sensitive than your save files.</p>"},{"location":"configure/cloud-sync/#using-syncthing-for-savesstates","title":"Using Syncthing for Saves/States","text":"<p>Using Syncthing for savegames is great because it allows you to seamlessly play a game across multiple handhelds, or even other devices. For example, you can play a game of Super Mario 64 on your RG353 while on the go, then launch the game on a RetroPie or PC running RetroArch and your save game will be transferred automatically to be continued on the big screen. However, this comes with a few caveats.</p> <p>RetroArch differentiates between saves, i.e. the battery or memory card storage featured in the original game, and states, i.e. the save state feature that is part of the emulator. While saves are often compatible across different versions of RetroArch cores, states tend to break more frequently. This means that if you create states with two incompatible versions of an emulator and they are synchronized, you may lose one of them.</p> <ul> <li>For maximum compatibility, make sure to use the same cores on all devices and update them at similar frequencies.</li> <li>RetroArch uses two separate folders for saves and states. This makes it easy to choose whether you want to synchronize only saves, states, or both.</li> <li>In the RetroArch settings under \"Saving\", you can tell RetroArch to sort saves and states into subfolders based on content directory or core name. It is highly recommended to make use of this to reduce the risk of accidentally overwriting an incompatible save or state.</li> <li>Make regular backups of your save folders.</li> </ul>"},{"location":"configure/cloud-sync/#synchronizing-with-android","title":"Synchronizing with Android","text":"<ul> <li>For Android-based handhelds people seem to be recommending the Syncthing-Fork from F-Droid.</li> <li>Keeping Syncthing running in the background on Anroid may severely impact your battery life and reduce standby time. Check out these tips to help you balance battery life and synchronization times.</li> <li>Using cross-platform versions of emulators is much more likely to introduce incompatibilities so be extra careful when syncing savegames.</li> </ul>"},{"location":"configure/cloud-sync/#further-documentation","title":"Further Documentation","text":"<p>For any questions and advanced configuration, be sure to check out the full documentation at https://docs.syncthing.net/index.html.</p>"},{"location":"configure/cloud-sync/#rclone","title":"Rclone","text":"<p>Using Rclone is easy, however configuration must be performed manually before it will function correctly.</p> <p>rclone.cfg is stored in <code>/storage/.config/rclone/rclone.conf</code> and can be copied from another device but only after the destination device has booted into Jelos (so copy to secondary sd, boot device, launch 351files, copy from there to proper path above)</p>"},{"location":"configure/cloud-sync/#setup-rclone","title":"Setup Rclone","text":""},{"location":"configure/cloud-sync/#credentialed-access","title":"Credentialed Access","text":"<p>To set up rclone, open an ssh connection to your handheld using PowerShell ssh, putty, or ssh on Linux and Mac. * Username: root (all lower case!) * Password: (To get the root password, press Start, then Select System Settings.) * Connection: (Your device, example RG552 or RG351MP.)</p>"},{"location":"configure/cloud-sync/#example-using-powershell-ssh-linux-or-macos","title":"Example using PowerShell ssh, Linux, or macOS:","text":"<p><code>ssh root@RG552</code></p>"},{"location":"configure/cloud-sync/#setting-up-rclone","title":"Setting up Rclone","text":"<p>Now that you're connected you will need to configure Rclone.  This process is menu driven, but also requires steps on your PC.  To complete configuration of Rclone, run <code>rclone config</code> in your ssh session and then follow the provider documentation and headless configuration steps to configure it for your cloud provider of choice.</p> <ul> <li>Rclone Provider Documentation</li> <li>Rclone Headless Configuration</li> </ul> <p>See detailed setup example below </p>"},{"location":"configure/cloud-sync/#using-rclone","title":"Using Rclone","text":"<p>In JELOS you are able to mount your cloud drive like any other storage device, as long as you are network connected.  To mount your cloud drive, press Start, select Network Settings, and then select the Mount Cloud Drive option.  This drive is available on /storage/cloud by default, and is accessible from ssh and from 351Files.  To mount the cloud drive over ssh use <code>rclonectl mount</code> to mount the drive and <code>rclonectl unmount</code> to unmount it.</p> <p>Note: Mounting the cloud drive is not persistent, you will need to select it before use.</p>"},{"location":"configure/cloud-sync/#using-cloud-backup-and-restore","title":"Using Cloud Backup and Restore","text":"<p>In the tools menu you will find two options, <code>Cloud Backup</code>, and <code>Cloud Restore</code>.  These tools will back up or restore your save games and save states by connecting your cloud drive and copying them.  These tools are configurable by editing /storage/.config/rsync.conf and /storage/.config/rsync-rules.conf.</p> <p>Note: The cloud backup and restore tools are destructive, but they do not delete data by default.  Deletes are left to the user to manage.</p>"},{"location":"configure/cloud-sync/#rsyncconf","title":"rsync.conf","text":"<p>The rsync.conf configuration file contains parameters used by the cloud tools that provide the path for your cloud drive to be mounted, the path to sync the data from, the destination for the sync and rsync options for cloud backup and restore.  The configuration is user editable, and the defaults are as follows: <pre><code>### This is the path where your cloud volume is mounted.\nMOUNTPATH=\"/storage/cloud\"\n\n### This is the path to your game folder on your cloud drive.\nSYNCPATH=\"GAMES\"\n\n### This is the path we are backup up from.\nBACKUPPATH=\"/storage/roms\"\n\n### This allows changes to the rsync options for cloud_backup (pending stable release)\nRSYNCOPTSBACKUP=\"-raiv --prune-empty-dirs\"\n\n### This allows changes to the rsync options for cloud_restore (pending stable release)\nRSYNCOPTSRESTORE=\"-raiv\"\n</code></pre></p>"},{"location":"configure/cloud-sync/#rsync-rulesconf","title":"rsync-rules.conf","text":"<p>The rsync-rules.conf configuration file contains the pattern used by rsync to know which files to backup and restore.  This file is user editable.  The default settings are as follows: <pre><code># This is a required rule for subdirectory matching.\n+ */\n\n### Do not include BIOS.\n- bios/**\n\n### Retroarch saves\n+ *.sav\n+ *.srm\n+ *.auto\n+ *.state*\n\n### This is a required rule to exclude all other file types.\n- *\n</code></pre></p> <p>To create custom match rules, use - to exclude and + to include.  Use caution as a mismatched rule can copy every single file from the source path or no files at all.</p>"},{"location":"configure/cloud-sync/#detailed-example","title":"Detailed Example","text":"<p>This example configures rclone to use Dropbox</p> <p>Rclone provide detailed examples for connecting to all supported cloud servers, including Rclone Dropbox example</p>"},{"location":"configure/cloud-sync/#configure-cloud-backup-connection-on-jelos-device-using-ssh","title":"Configure cloud backup connection on JELOS device using ssh","text":"<p>From the terminal command line type <pre><code>rclone version\n</code></pre></p> <p>and press <code>enter</code></p> <p>Note the version number, which is required for a later step</p> <p></p> <p>Now type <pre><code>rclone config\n</code></pre></p> <p>and press <code>enter</code></p> <p>type <code>n</code> to create a new remote site</p> <p>type in a name for the site (use a name without spaces), then press <code>enter</code></p> <p>rclone suggest using <code>remote</code>, but in this example the remote site is called <code>rg503</code></p> <p>don\u2019t include spaces in the site\u2019s name. Rclone does allow names that include spaces, but rsync will fail if a site name with spaces is used in the cloud backup script.</p> <p></p> <p>Choose from the list of cloud providers that is displayed. For Dropbox, type <code>12</code> and <code>enter</code> in this example</p> <p></p> <p>The next options displayed are slightly different from the Dropbox example on rclone website</p> <p>For client_id and client_secret press <code>enter</code> and <code>enter</code> to skip, or read Rclone Dropbox example for details about setting up your own App ID (rclone App ID is shared with all rclone users by default)</p> <p>Type <code>n</code> to skip editing the advanced config</p> <p></p> <p>For auto config, select <code>n</code> for remote or headless machine (i.e. JELOS device that doesn't have a web browser)</p> <p></p> <p>Instructions are provided explaining how to authorize the connection from the remote device to the cloud service</p> <p></p>"},{"location":"configure/cloud-sync/#install-and-run-rclone-on-machine-with-a-web-browser-to-authorize-connection-to-cloud-service","title":"Install and run rclone on machine with a web-browser to authorize connection to cloud service","text":"<p>Download rclone on a device with a web-browser so rclone can use a web-page to authorize the connection by allowing you to login with your authorization credentials for the cloud service</p> <p>Rclone download server</p> <p>Download the same version of rclone as is installed on JELOS device, as noted above.</p> <p>Use terminal window (e.g. <code>CMD</code> on Windows) to browse to rclone executable and run </p> <pre><code>rclone authorize dropbox\n</code></pre> <p>and press <code>enter</code></p> <p></p> <p>Rclone will launch a web page to enable login to the cloud service and authorization of the connection</p> <p></p> <p>After successful authorization, the terminal window will display the authorization token that needs to be pasted into JELOS ssh</p> <p></p> <p>Copy the entire token</p>"},{"location":"configure/cloud-sync/#update-jelos-with-authorization-token","title":"Update JELOS with authorization token","text":"<p>Paste authorization token into JELOS command prompt, then type <code>y</code> to confirm that the remote connection is correct</p> <p></p> <p>The connection is now configured and can be tested (<code>q</code> to quit rclone config)</p> <p>Type  <pre><code>rclone lsd rg503:\n</code></pre></p> <p>where <code>rg503</code> is the name of the remote connection (rclone example names the remote connection as <code>remote</code>)</p> <p>don't forget to add <code>:</code> to the name of remote connection</p> <p>The names of the top-level folders within Dropbox cloud service will be displayed</p> <p></p>"},{"location":"configure/collections/","title":"Collections","text":"<p>In addition to the systems displayed; EmulationStation (ES) has functionality to create custom collections that you can use to group and organize your game library in different ways.  For example; if you wanted to create a view that automatically grouped all of your Role Playing Games or one that only lists the games you are currently playing you can use ES collections to do that. </p> <p>All of the options described below can be managed by pressing START anywhere in ES to open the Main Menu and then opening Game Collection Settings</p> <p></p>"},{"location":"configure/collections/#managing-your-backlog","title":"Managing Your Backlog","text":"<p>JELOS includes a <code>Now Playing</code> collection that can be used to curate and play through your backlog.  You can turn this on by going to <code>Game Collection Settings</code> &gt; <code>Create New Custom Collection from Theme</code> while using our default system-theme.</p> <p>Once its turned on; you can add to it by pressing X(NORTH) on any game while in ES.  In the menu that opens you'll see <code>Now Playing</code> listed under the collections header.  Simply highlight it and press the confirm button.  </p> <p>You can also set JELOS to boot directly into the Now Playing collection by setting the <code>Start on System</code> value in the <code>Game Collection Settings</code> menu.  Change that value to <code>Now Playing</code> and also turn on <code>Start on Gamelist</code>.</p> <p>With the above settings you can create a very simple view of the games you are trying to finish that displays when JELOS launches.</p>"},{"location":"configure/collections/#collection-types","title":"Collection Types","text":"<p>There are 3 collection types in ES so let's walk through each to help you decide which makes sense to use for your use cases.</p>"},{"location":"configure/collections/#automated-collections","title":"Automated Collections","text":"<p>EmulationStation has a set of built-in automated collections to easily view your last played games, favorites and all the games in your library.  You can turn these on or off in the Automated Game Collections menu.</p>"},{"location":"configure/collections/#editable-collections","title":"Editable Collections","text":"<p>An editable collection is one that you can specifically curate by hand.  Simply give it a name and then as you are browing your gamelists you can press X(NORTH) on any game and add it to the collection you created.  As an example, you could use this functionality to create a collection for all of your Final Fantasy games and then manually add each FF game to the list.</p>"},{"location":"configure/collections/#dynamic-collections","title":"Dynamic Collections","text":"<p>A dynamic collection enables you to create a set of filters that will automatically group your games.  For example if you wanted to create a collection that automatically grouped all of your Role Playing Games into a single view; you could create a dynamic collection called RPGs, select a genre filter of Role Playing Games and then save the filter.  Then any time you add a new game with the Role Playing genre it will automatically show up in this collection.</p>"},{"location":"configure/collections/#additional-notes","title":"Additional Notes","text":"<p>You can also use the Game Collection Settings menu to manage which systems are displayed. Press START anywhere in ES to open the Main Menu and then go to Game Collection Settings &gt; Systems Displayed.  In this menu; uncheck the systems you would like to hide and then exit the menu.  ES will then refresh and those systems will be hidden.</p>"},{"location":"configure/networking/","title":"Networking","text":"<p>Networking can be set up on any device that can connect to the internet (this includes devices with native networking capabilites and ones where networking can be added through an external dongle).  </p> <p>With networking turned on you do things such as add games, update JELOS, netplay across devices, cloud sync, play over VPN and access RetroAchievements.</p>"},{"location":"configure/networking/#setup","title":"Setup","text":"<ol> <li>While in EmulationStation press START on your controller to open the Main Menu.</li> <li>Navigate to and select <code>Network Settings</code>.</li> <li>Under the Network Configuration header turn on <code>Enable Network</code>.</li> <li>Then select <code>WIFI SSID</code> and choose your network name.</li> <li>Finally enter your password under <code>WIFI Key</code> using the onscreen keyboard.</li> </ol> <p>When you exit the network settings menu your network should activiate.</p>"},{"location":"configure/networking/#additional-notes","title":"Additional Notes","text":"<ul> <li>If you want to transfer games over the network make sure to turn enable SSH and Samba under <code>Network Services</code>.  You can read more about that on the Add Games page.</li> <li>If you want to enable netplay to be able to play multiplayer across devices please see the page on Netplay.</li> <li>Check out Cloud Sync to see the available options and steps for setting up cloud sync services.</li> <li>If you would like to earn achievements while playing games please check out RetroAchievements</li> </ul>"},{"location":"configure/optimizations/","title":"Optimizations","text":"<p>JELOS provides a variety of settings that allow you to optimize for battery life or performance globally, on a per system and per game basis.  For emulating 6th generation and later systems, we recommend installing JELOS on internal storage if available to reduce IO bottlenecks reading and writing shader cache.</p>"},{"location":"configure/optimizations/#optimizing-for-performance","title":"Optimizing For Performance","text":"<p>Optimizing for performance will have significant impact on battery life, however it will also provide the best experience for more demanding emulators.</p>"},{"location":"configure/optimizations/#recommended-global-settings","title":"Recommended Global Settings","text":""},{"location":"configure/optimizations/#amd-intel-based-devices","title":"AMD / Intel based devices","text":"Enabled CPU Threads CPU Scheduler Energy Performance Preference GPU Performance Profile Enhanced Power Saving Cooling Profile WIFI Power Saving All Schedutil Balanced Performance Balanced Off Moderate<sup>1</sup> or Auto Off <p>Note: The JELOS team DOES NOT recommend the \"BEST PERFORMANCE\" GPU profile on AMD devices as it sets the profile_peak GPU profile which can lead to poor performance and kernel panics, use \"BALANCED\" instead.</p>"},{"location":"configure/optimizations/#glmark","title":"GLMark","text":"DEVICE @ TDP 4w 6w 9w 15w 18w 24w 28w Loki Max (6800U) 2082 3068 4910 7266 8600 9990 10319 Loki Zero (3050e) 515 1303 1943 3195 3466 3615 3618 Atari VCS (R1606G) 534 565 1055 1342 1376 1378 1376 AYANEO 2S (7840U) 1784 2341 4646 8109 9049 9699 9844 AYANEO Air Plus (6800U) 854 2051 4192 5946 7340 9325 9674 AYANEO Air Pro (5560U) 878 1405 3543 5193 5716 5874 5892"},{"location":"configure/optimizations/#7z","title":"7z","text":"DEVICE @ TDP 4w 6w 9w 15w 18w 24w 28w Loki Max (6800U) 12129 19530 28391 42809 46432 51183 53276 Loki Zero (3050e) 3370 5304 7397 8441 8514 8493 8441 Atari VCS (R1606G) 5015 6172 9027 9726 9239 9233 9257 AYANEO 2S (7840U) 9319 15790 24295 38956 45249 55117 58515 AYANEO Air Plus (6800U) 6323 11394 22519 39682 43529 47904 47562 AYANEO Air Pro (5560U) 6940 13919 21916 30421 32565 35375 36723"},{"location":"configure/optimizations/#arm-based-devices","title":"ARM based devices","text":"Enabled CPU Threads CPU Scheduler GPU Performance Profile Enhanced Power Saving Cooling Profile WIFI Power Saving All Performance Best Performance Off Moderate<sup>1</sup> or Auto Off <p>Note: It's recommended to reboot the device after disabling Enhanced Power Saving.</p>"},{"location":"configure/optimizations/#optimizing-for-battery-life","title":"Optimizing For Battery Life","text":"<p>JELOS includes an <code>Enhanced Power Saving</code> mode which is available in the <code>System Settings</code> menu.  This option provides a variety of sub options that when enabled tune your device for optimal battery life without immediately sacrificing performance.</p> Feature Function May Affect Stability CPU Power Saving Tunes the CPU/SoC to preference battery life over performance. No Audio Power Saving Enables the audio device to operate in a low power mode. No PCIE Active State Power Management Forces a low power state for PCI and PCIe connections. Yes Enable Wake Events Enables PCI wakeup signalling to allow devices to enter low power states. Yes Runtime Power Management Enables USB idle power management, and configures usb devices to autosuspend. Yes"},{"location":"configure/optimizations/#recommended-settings","title":"Recommended Settings","text":"<p>Enable Enhanced Power Saving, and enable all options.  If the device has undesired behavior, disable the options that may effect stability and reboot the device.</p>"},{"location":"configure/optimizations/#amd-intel-based-devices_1","title":"AMD / Intel based devices","text":"Enabled CPU Threads CPU Scheduler Energy Performance Preference GPU Performance Profile Enhanced Power Saving Cooling Profile WIFI Power Saving 4 Powersave Power Saving Battery Focus On Quiet<sup>1</sup> On <p>JELOS recommends setting the minimum TDP that offers full performance for your game or system.</p>"},{"location":"configure/optimizations/#glmark_1","title":"GLMark","text":"DEVICE @ TDP 4w 6w 9w 15w 18w 24w 28w Loki Max 1968 2869 4660 7042 8243 9442 9804 Loki Zero 544 1130 1313 1385 1378 1392 1397 Atari VCS 305 332 332 332 333 333 332 AYANEO 2S (7840U) 1594 2340 4582 7713 8157 9658 9889 AYANEO Air Plus 744 2103 3971 6086 7193 8908 9377 AYANEO Air Pro (5560U) 979 1956 3639 5057 5503 5708 5742"},{"location":"configure/optimizations/#7z_1","title":"7z","text":"DEVICE @ TDP 4w 6w 9w 15w 18w 24w 28w Loki Max 6931 11247 14003 15941 16114 16758 16792 Loki Zero 2980 2986 3006 2992 2992 2993 2978 Atari VCS 2464 4513 4530 4524 4531 4529 4549 AYANEO 2S (7840U) 5419 8765 13465 19799 21247 22709 23197 AYANEO Air Plus 5731 8291 13139 15638 16205 16065 16001 AYANEO Air Pro (5560U) 6100 9234 11955 14269 14711 14822 14856"},{"location":"configure/optimizations/#arm-based-devices_1","title":"ARM based devices","text":"Enabled CPU Threads CPU Scheduler GPU Performance Profile Enhanced Power Saving Cooling Profile WIFI Power Saving 4 Powersave Battery Focus On Quiet<sup>1</sup> On"},{"location":"configure/optimizations/#recommended-settings-per-system","title":"Recommended Settings Per System","text":""},{"location":"configure/optimizations/#amd-intel","title":"AMD / Intel","text":"<p>As performance varies across supported devices, there are no specific recommendations.  Explore various settings to find the best configuration per system/game for your device.</p>"},{"location":"configure/optimizations/#arm-devices","title":"ARM Devices","text":"Manufacturer System Enabled CPU Threads CPU Scheduler GPU Performance Profile Enhanced Power Saving Cooling Profile WIFI Power Saving Nintendo 64 All Performance Best Performance Off Moderate<sup>1</sup> or Auto Off Nintendo GameCube, Wii All Performance Best Performance Off Moderate<sup>1</sup> or Auto Off Sega Saturn, Dreamcast All Performance Best Performance Off Moderate<sup>1</sup> or Auto Off Sony PSP All Performance Best Performance Off Moderate<sup>1</sup> or Auto Off <p><sup>1</sup> Only available if the feature is supported on your device.</p>"},{"location":"configure/overlays/","title":"Overlays","text":""},{"location":"configure/overlays/#retroarch","title":"RetroArch","text":"<p>Overlays should be possible to add when using RetroArch cores.  Setting them up is currently out of scope for our wiki (as not many of our maintainers use overlays) so if you are interested in displaying them you'll need to research the steps to do so directly. </p> <p>A good place to start is here: https://docs.libretro.com/guides/libretro-overlays/.</p>"},{"location":"configure/overlays/#stand-alone-emulators","title":"Stand-Alone Emulators","text":"<p>Overlays are not supported for standalone emulators.  That said, if you are interested in developing the support to add them please check out how to start contributing here.</p>"},{"location":"configure/packages/","title":"Managing packages","text":""},{"location":"configure/packages/#entware","title":"Entware","text":"<p>Entware is a modern alternative to Optware and was originally designed for use on OpenWRT but has been adapted for use on other distributions, it is similar to apt/yum/pacman in that it will allow you to install over 2000+ Linux applications.</p>"},{"location":"configure/packages/#install","title":"Install","text":"<ol> <li>SSH into your device</li> <li>Run <code>installentware</code></li> <li>Reboot after that completes</li> </ol>"},{"location":"configure/packages/#command-line-instructions","title":"Command-line instructions","text":"<p>You can manage packages  over ssh using the command-line interface.</p> Command\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Description <code>opkg update</code> Fetch a list of available packages from the OpenWrt package repository. <code>opkg list</code> Display a list of available packages and their descriptions. <code>opkg list | grep -e &lt;search&gt;</code> Filter the list by a search term in the package name or its description. <code>opkg install &lt;packages&gt;</code> Install a package. <code>opkg remove &lt;packages&gt;</code> Uninstall a previously installed package."},{"location":"configure/scraper/","title":"Scraping","text":"<p>Scraping allows you to download metadata, images and videos for your games, as well as manuals and sometimes even game maps.</p> From this... To this... <p>To scrape games, your deivce needs an internet connection, and you\u2019ll also need to create to create an account on ScreenScraper. </p> <p>Once you have created a ScreenScraper account:</p> <ol> <li>Press Start to access the Main Menu, then go to Scraper. </li> <li>Enter your ScreenScraper username and password in the Username and Password fields. </li> <li>Using the checkboxes, select which resources you want to download when scraping (Preview images are downloaded automatically, and so are the game\u2019s title, release date, developer, etc)</li> </ol> <p>Please see our Recommended Configurations for options that we believe work well with our default theme.</p>"},{"location":"configure/shaders/","title":"Shaders","text":""},{"location":"configure/shaders/#creating-a-custom-shader-preset","title":"Creating a custom shader preset","text":"<p>JELOS supports adding custom shaders in addition to the built-in shaders available in the \"Advanced Game Options\" and \"Game Settings / Per System Advanced Configuration\" settings \"shader set\" selection.</p>"},{"location":"configure/shaders/#step-1-launch-a-game-and-access-the-shaders-menu-in-quick-settings","title":"Step 1: Launch a game and access the shaders menu in quick settings","text":"<p>If Shaders are set to \"off,\" change to \"on\" </p>"},{"location":"configure/shaders/#step-2-configure-shader-settings-to-preference-by-modifying-existing-shaders","title":"Step 2: Configure Shader settings to preference by modifying existing shaders","text":"<p>Specific parameters will vary on a per-shader basis so it's recommended you test with the individual shaders first by loading the built-ins and modifying their parameters to your preference.  When you know how you'd lke to configure everything, you'll select your parameters and passes. To start, you'll select the number of shader passes, the filtering (linear, nearests, or default), and the number of passes for each individual shader listed (generally leave this item at default). Then select \"apply changes,\" set parameters, and save the shader.</p>"},{"location":"configure/shaders/#example","title":"Example","text":"<p>The below example shader configuration is based on a custom shader with two passes for GBA to enable vba-color for original colors (ala real hardware) and LCD grid:</p> <p>In shaders, choose \"load\" and then load \"vba-color\" (either from the main list, or if on android/PC, it'll be in the \"handhelds\" folder.</p> <p>Once loaded, go down to \"shader passes\" and change it from 1 to 2. </p> <p>For the second pass where it says \"N/A\" select it, go into the \"handhelds\" folder and choose LCD1x. </p> <p>Then press \"Apply changes\" to set it. From there go into \"shader parameters\" and you'll see the darkening, brighten scanlines, and brighten LCD options. Configure parameters as preferred. For this example, set:</p> <ul> <li>Darken: 0.25</li> <li>Brighten Scanlines: 28.00</li> <li>Brighten LCD: 6.00</li> </ul> <p>Once it's configured to your liking, back out of the parameters menu and in the shaders menu press \"save\" in the menu list. In the save menu set \"Simple Presets\" to \"off\" and then \"save shader preset as\" and name the custom shader. It will now be selectable as a default like any of the other preconfigured shaders.</p> <p>You can add additional passes following the steps above (increase passes to 3 and follow the same steps), but keep in mind performance will be dependent on your device, and not all shaders will work at full speed with multiple passes.</p>"},{"location":"configure/shaders/#step-3-save-your-new-shader-preset","title":"Step 3: Save your new shader preset","text":"<p>Select \"Save\" in the shaders menu.</p> <p>At the top of the list, set \"Simple Presets\" to off. Then choose \"Save Shader Preset As\" and name the shader. Press the enter key on the on-screen keyboard to save the preset. Exit Retroarch normally via the hotkey preset, or by backing out to the main menu and choosing \"Quit Retroarch\"</p>"},{"location":"configure/shaders/#step-4-load-your-shader-preset-from-jelos-menu","title":"Step 4: Load your shader preset from JELOS menu","text":"<p>Browse into either \"advanced game options\" within game selection, or Main Menu -&gt; Game Settings -&gt; Per System Advanced Configuration.</p> <p>Select shader set, then browse through with the d-pad, joystick, or L/R buttons to page. Your custom shader will now be available to select in the list. </p>"},{"location":"configure/themes/","title":"Themes","text":"<p>Our default frontend is EmulationStation and our default theme is Art Book Next (which has been designed specifically to work with all the aspect ratios we support).  You will see it represented in the UI as <code>system-theme</code> and it's updated automatically as part of each JELOS release.  It also offers a set of options to tailor the look of theme which are detailed below.</p>"},{"location":"configure/themes/#preview","title":"Preview","text":""},{"location":"configure/themes/#theme-configuration","title":"Theme Configuration","text":"<p>The following options can be changed directly from the main menu under <code>UI Settings &gt; Theme Configuration</code></p> Option Description Distribution Used to define which folder to look in for Theme Customization files.  For JELOS installs this defaults to <code>JELOS</code> so please leave it as such Aspect Ratio Enables you to select the correct aspect ratio for your screen.  JELOS supports 16:9, 4:3, 16:10, 5:3, 3:2 and 1:1 aspect ratios.  We default this automatically so you should not need to change it but if the theme layout looks odd or spacing looks incorrect you can use this setting to make sure the aspect ratio matches your screen. Color Scheme Sets the color scheme that is used for the theme.  There is a set of prebuilt color schemes that you can select and an option to supply your custom color scheme (selected by choosing <code>custom</code>).  You can see details on customizations below under Theme Customziations. Font Size When this is set to custom it allows you to define custom font sizes for the gamelist.  You can see details on customizations below under Theme Customziations. System View Style Defines the layout/design used for the System View Gamelist View Style Defines the layout/design used for the Gamelist View"},{"location":"configure/themes/#recommended-configurations","title":"Recommended Configurations","text":""},{"location":"configure/themes/#option-1-if-you-prefer-screenshots","title":"Option 1: If you prefer Screenshots","text":"Setting Value Scraper: Image Source <code>Screenshot</code> Scraper: Box Source <code>Box 2D</code> Scraper: Logo Source <code>Wheel</code> Theme Configuration: Gamelist View Style <code>Metadata On (Immersive)</code> or  <code>Metadata Off (Immersive)</code>"},{"location":"configure/themes/#option-2-if-you-prefer-boxart","title":"Option 2: If you prefer Boxart","text":"Setting Value Scraper: Image Source <code>Box 2D</code> Scraper: Box Source <code>None</code> Scraper: Logo Source <code>Wheel</code> Theme Configuration: Gamelist View Style <code>Metadata On</code>"},{"location":"configure/themes/#theme-customizations","title":"Theme Customizations","text":"<p>Art Book Next allows customizations to artwork, colors and fonts without the need to edit the source XML.  This enables you to change the look of the theme and retain any changes when JELOS is updated.</p>"},{"location":"configure/themes/#start-here","title":"Start Here","text":"<ul> <li>Create the following path on your storage device: <code>~/roms/jelos/theme-customizations/art-book-next/</code></li> <li>In Theme Configuration make sure distribution is set to <code>JELOS</code> (this is needed to make sure the above path is referenced when looking for customization files)</li> </ul>"},{"location":"configure/themes/#background-art","title":"Background Art","text":"<p>The artwork used on the system view can be customized with your own images.  You can create either <code>centered</code> or <code>full screen</code> variations.</p> <ul> <li>Create a folder in the path you created above called <code>backgrounds</code></li> <li>Upload your custom background images to that folder</li> <li>They can be named:<ul> <li>_default.jpg</li> <li>_default.png</li> <li>${system.theme}.jpg</li> <li>${system.theme}.png</li> </ul> </li> <li>The theme will look them them up in that order.  If a given image is not found in your folder then the the images from the theme will be used as a fallback.  This allows you to customize only the images you want and still have images displayed for all systems.</li> <li><code>_default.jpg/png</code> can be used for creating a single image that is used for all systems OR a fallback for systems that you did not create a custom image for (if you don't want to use the fallback that already exists in the theme)</li> <li><code>${system.theme}.jpg/png</code> should be named for the system you are looking to override.  For example if you wanted to override the artwork for <code>snes</code> you would create an image called <code>snes.jpg</code> or <code>snes.png</code> in the backgrounds folder</li> <li>once your images are in place you turn on custom images by changing the System View Style to either... <ul> <li>Centered Artwork (Custom)</li> <li>Multi Artwork (Custom)</li> <li>Fullscreen Artwork (Custom)</li> <li>I added these options so you could switch off custom artwork without needing to delete your customizations</li> </ul> </li> </ul> <p>To create <code>centered</code> artwork that matches the mask used in the theme you can use the <code>system-art-mask</code> files I supply in the theme's resources directory here.  I have tried to include a mask that works in the major editing programs.</p> <p>If you create a set of images that you would like to share with the community please let us know about it in the themes channel on Discord</p>"},{"location":"configure/themes/#logos","title":"Logos","text":"<p>The logos used on the system and gamelist views can be customized with your own images.</p> <ul> <li>Create a folder in the path you created above called <code>logos</code></li> <li>Upload your custom logo images to that folder</li> <li>They can be named:<ul> <li>${system.theme}.svg</li> <li>${system.theme}.png</li> </ul> </li> <li>The theme will look them them up in that order.  I recommend SVGs as they scale better on different resolutions.</li> <li><code>${system.theme}.svg/png</code> should be named for the system you are looking to override.  For example if you wanted to override the artwork for <code>snes</code> you would create an image called <code>snes.svg</code> or <code>snes.png</code> in the logos folder</li> <li>once your images are in place you turn on custom logos by changing the Color Scheme to <code>Custom</code> </li> </ul>"},{"location":"configure/themes/#color-schemes","title":"Color Schemes","text":"<p>You can create your own custom color scheme to use for the theme</p> <ul> <li>Download this template: https://github.com/anthonycaccese/art-book-next-jelos/blob/main/resources/customizations/colors.xml</li> <li>Upload it in the path you created above and make sure its called <code>colors.xml</code></li> <li>Change any values in the template to the colors you prefer.  </li> <li>I tried to make the values as self explanatory as possible but if you have questions regarding which property does what please don't hesitate to ask.</li> <li>After your colors are defined; in theme configuration change <code>Color Scheme</code> to <code>Custom</code></li> </ul>"},{"location":"configure/themes/#fonts","title":"Fonts","text":"<p>You can modify the font size used to display gamelists</p> <ul> <li>Download this template: https://github.com/anthonycaccese/art-book-next-jelos/blob/main/resources/customizations/fonts.xml</li> <li>Upload it in the path you created above and make sure its called <code>fonts.xml</code></li> <li>Change any values in the above template to the sizes you like. </li> <li>After your sizes are defined; in theme configuration change <code>Font Size</code> to <code>Custom</code></li> </ul>"},{"location":"configure/themes/#adding-additional-themes","title":"Adding Additional Themes","text":"<p>You can upload additional themes to your device at this path: <code>/storage/.emulationstation/themes</code></p> <p>Below are a few sources for themes that may work.</p>"},{"location":"configure/themes/#option-1-batocera-themes","title":"Option 1: Batocera Themes","text":"<ul> <li>Our version of EmulationStation is forked from the same version used in Batocera so you can also use themes that were created for Batocera.</li> <li>You can find a list of Batocera themes here: https://batocera.org/themes.php</li> </ul> <p>There are no guarantees that themes from the above list will support the aspect ratio of your device or all of the systems we support.  Because of that; some themes may look odd, not display all systems or have layouts that do not match well to your screen.</p>"},{"location":"configure/themes/#option-2-community-created-themes","title":"Option 2: Community Created Themes","text":"<p>Members of our Community create themes as well.  This list is not exhaustive but here are a few that have been shared on discord that are known to work well:</p> <ul> <li>es-theme-gbz35-jelos by booYah187: Known to work well on 4:3 aspect ratio</li> <li>es-theme-albedo by mluizvitor: Known to work well on 3:2, 4:3 and 5:3 aspect ratios</li> <li>es-theme-elementerial by mluizvitor: Known to work well on 3:2, 4:3 and 5:3 aspect ratios</li> </ul>"},{"location":"configure/themes/#creating-your-own-theme","title":"Creating Your Own Theme","text":"<p>An exhaustive tutorial is out of scope for this wiki.  That said; please see Batocera's theme documention @ https://wiki.batocera.org/write_themes_for_emulationstation.  Its a great starter guide for understanding the fundamentals of creating themes for the version of EmulationStation used by JELOS.</p>"},{"location":"configure/vpn/","title":"VPN Services","text":"<p>JELOS has built in support for multiple VPN services.</p>"},{"location":"configure/vpn/#tailscale","title":"Tailscale","text":"<p>Tailscale is a VPN service that makes the devices and applications you own accessible anywhere in the world, securely and effortlessly. It enables encrypted point-to-point connections using the open source WireGuard protocol, which means only devices on your private network can communicate with each other.</p>"},{"location":"configure/vpn/#step-1-sign-up-for-tailscale-account","title":"Step 1: Sign up for Tailscale account","text":"<p>Sign up for a Tailscale account.</p> <p>Tailscale requires a Single Sign-On (SSO) provider, so you\u2019ll need a Google, Microsoft, GitHub, Okta, OneLogin, or other  supported SSO identity provider  account to begin.</p>"},{"location":"configure/vpn/#step-2-add-a-pc-to-your-tailscale-network","title":"Step 2: Add a PC to your Tailscale network","text":"<p>Tailscale helps you connect your devices together. For that to be possible, Tailscale needs to run on your PC.</p> <p>Tailscale works seamlessly with Linux, Windows, macOS, Raspberry Pi, Android, Synology, and more. Download Tailscale and log in on the PC.</p> <p>Download Tailscale</p>"},{"location":"configure/vpn/#step-3-add-your-device-to-your-network","title":"Step 3: Add your device to your network","text":"<p>JELOS Emulation Station has customized UI with Tailscale support.</p> <ul> <li>Press \"start\" button to go into Emulation Station Main Menu.</li> <li>Select Network Settings submenu.</li> <li>Select \"Tailscale VPN\" and turn it on.</li> <li>Select \"Back\" button to exit setting dialog.</li> </ul> <p>The initial connection to Tailscale will require authentication.</p> <ul> <li>Select Network Settings submenu again.</li> <li>You should see Tailscale authentication url. You need to type this url on your PC browser and authenticate.</li> <li>After login on PC is successful, Select \"Tailscale VPN\" and turn it on again.</li> <li>Select \"Back\" button to exit setting dialog.</li> <li>Tailscale VPN should be connected.</li> </ul>"},{"location":"configure/vpn/#links","title":"Links","text":"<ul> <li>Tailscale homepage link</li> </ul>"},{"location":"configure/vpn/#wireguard","title":"Wireguard","text":"<p>As game streaming becomes more popular, it enables AAA games, streamed over the internet from your home computer, to be played on your console while traveling.</p>"},{"location":"configure/vpn/#configuring-wireguard-vpn-in-jelos","title":"Configuring WireGuard VPN in JELOS","text":"<p>Typically the configuration involves copying your WireGuard VPN config file over to your JELOS device and then enabling WireGuard VPN in Emulation Station Network Settings menu.</p>"},{"location":"configure/vpn/#wireguard-config","title":"WireGuard Config","text":"<p>JELOS uses standard WireGuard config file format. The file is typically provided by your VPN provider. If you want to host your own VPN Server on your local network, there are plenty of tutorials available online.</p> <p>Currently only the single connection is supported. The WireGuard config file must be placed in the following location - <code>/storage/.config/wireguard/wg0.conf</code>. Please use SSH or Samba to create the file there.</p> <p>Don't forget to restart Emulation Station to pick up the changes.</p> <p>Sample <code>wg0.conf</code> file <pre><code>[Interface]\nPrivateKey = &lt;your private key&gt;\nAddress = 10.111.10.2/24\n\n[Peer]\nPublicKey = &lt;server public key&gt;\nAllowedIPs = 0.0.0.0/0\nEndpoint = &lt;server&gt;:&lt;port&gt;\n</code></pre></p> <p>Note: \"DNS\" option is not yet supported in the config. Please remove line starting with \"DNS\" from your config file.</p>"},{"location":"configure/vpn/#enabling-wireguard-connection","title":"Enabling WireGuard connection","text":"<p>Emulation Station now has a new menu item toggle to enable or disable WireGuard VPN connection. Use it turn the connection on or off.</p> <p>Note: make sure that WireGuard config file is present on the device, see the Configuring WireGuard VPN in JELOS section above. The menu option is only available when the config file is present.</p> <p>Connect to configured VPN server * Press \"start\" button to go into Emulation Station Main Menu * Select Network Settings submenu * Select \"Wireguard VPN\" and turn it on * Select \"Back\" button to exit setting dialog * WireGuard VPN should be connected</p> <p>Disconnect from configured VPN server * Press \"start\" button to go into Emulation Station Main Menu * Select Network Settings submenu * Select \"Wireguard VPN\" and turn it off * Select \"Back\" button to exit setting dialog * WireGuard VPN should be disconnected</p>"},{"location":"configure/vpn/#server-configuration-for-advanced-users","title":"Server Configuration (for advanced users)","text":"<p>The local PC can be setup to be a WireGuard server. This allows accessing that PC (and a local network if SNAT is enabled) from the remote location using the device.</p> <p>The configuration is the following: * Generate pair of configuration files * Install WireGuard on your local PC and import server config * Setup Port Forwarding for WireGuard port from your local router to your local PC * Enable WireGuard on your device </p>"},{"location":"configure/vpn/#config-pair-generation","title":"Config Pair generation","text":"<p>The device have a helper script which can generate a pair of configuration files for the device and for the local PC with WireGuard server.</p> <p>The script should be executed from SSH terminal. <pre><code># Generate config file\nwg-genconfig\n</code></pre> The script will generate <code>wg0.conf</code> and <code>wg0.conf.server</code> files.</p>"},{"location":"configure/vpn/#wg0confserver-server-config","title":"<code>wg0.conf.server</code> server config","text":"<p><pre><code>[Interface]\nPrivateKey = &lt;server private key&gt;\n# PublicKey = &lt;server public key&gt;\nAddress = 10.111.10.1/24\nListenPort = 51820\n\n# If you want to access other devices on the same network,\n# you need to enable SNAT, the lines below.\n# Make sure that eth0 matches your main network interface.\n#PostUp = echo 1 &gt; /proc/sys/net/ipv4/ip_forward\n#PostUp = iptables -A FORWARD -i %i -j ACCEPT\n#PostUp = iptables -A FORWARD -o %i -j ACCEPT\n#PostUp = iptables -t nat -A POSTROUTING -s 10.111.10.0/24 -o eth0 -j MASQUERADE\n#PostDown = iptables -D FORWARD -i %i -j ACCEPT\n#PostDown = iptables -D FORWARD -o %i -j ACCEPT\n#PostDown = iptables -t nat -D POSTROUTING -s 10.111.10.0/24 -o eth0 -j MASQUERADE\n\n[Peer]\nPublicKey = &lt;device public key&gt;\nAllowedIPs = 10.111.10.2/32\n</code></pre> If you want you device to access your local network, you need to enable SNAT, allow your local PC forward network packets to other devices on your local network. That is done by uncommenting PostUp/PostDown commands in the config. </p>"},{"location":"configure/vpn/#install-wireguard-on-your-local-pc","title":"Install WireGuard on your local PC","text":"<ul> <li>Download the client for your OS from here.</li> <li>Import  wg0.conf.server and enable the tunnel.</li> </ul>"},{"location":"configure/vpn/#troubleshooting","title":"Troubleshooting","text":""},{"location":"configure/vpn/#diagnostics","title":"Diagnostics","text":"<p>Sometimes the tunnel doesn't establish successfully. The following commands can useful to diagnose issues.</p> <p>The commands below should be executed on the device using SSH shell access.</p> <p><pre><code># Check the status of active tunnels.\n# You should see the connection statistics.\nwg show\n</code></pre> <pre><code># Check my public ip address\ncurl ifconfig.co -4\n</code></pre> <pre><code># Bring tunnel up\nwg-quick up /storage/.config/wireguard/wg0.conf\n</code></pre> <pre><code># Bring tunnel down\nwg-quick down /storage/.config/wireguard/wg0.conf\n</code></pre></p>"},{"location":"configure/vpn/#links_1","title":"Links","text":"<ul> <li>WireGuard homepage link</li> <li>WireGuard is also supported in ConnMan VPN plugin using ssh command line link</li> </ul>"},{"location":"configure/vpn/#zerotier","title":"ZeroTier","text":"<p>ZeroTier allows you to build robust peer-to-peer networks, connetcting all of your devices together. It's very similar to Tailscale.</p>"},{"location":"configure/vpn/#step-1-sign-up-for-zerotier-account","title":"Step 1: Sign up for ZeroTier account","text":"<p>Sign up for a ZeroTier account.</p>"},{"location":"configure/vpn/#step-2-add-other-devices-to-your-zerotier-network","title":"Step 2: Add other devices to your ZeroTier network","text":"<p>You can add devices that you want connected to the ZeroTier network. One device can be connected to multiple networks, so you can even have different networks for different purposes.</p> <p>It's most likely going to run everywhere you want it, since the software exists for OpenWRT, Desktop Linux, Windows, Android, etc.</p> <p>Download ZeroTier</p>"},{"location":"configure/vpn/#step-3-add-your-device-to-your-network_1","title":"Step 3: Add your device to your network","text":"<p>JELOS Emulation Station has customized UI with ZeroTier support.</p> <ul> <li>Create a file called \"zerotier-networks\" in <code>/storage/.config/zerotier-networks</code>, containing one network ID per line</li> <li>Press \"start\" button to go into Emulation Station Main Menu.</li> <li>Select Network Settings submenu.</li> <li>Select \"ZeroTier VPN\" and turn it on.</li> <li>Select \"Back\" button to exit setting dialog.</li> </ul> <p>Don't forget to authenticate your device in the ZerTier control panel after starting the service. It should show up on the webpage.</p> <p>You can also use the traditional way of adding a network ID by using <code>zerotier-cli join</code> through SSH shell, but in this cae the zerotier-networks file shouldn't be present.</p>"},{"location":"configure/vpn/#links_2","title":"Links","text":"<ul> <li>ZeroTier homepage link</li> <li>Script used to add networks on start link</li> </ul>"},{"location":"contribute/","title":"Index","text":""},{"location":"contribute/#contributing-to-jelos","title":"Contributing to JELOS","text":"<p>Your contribution helps JELOS become a better Linux distribution, so we're glad you're here! We aim to make contributing to this project as easy and transparent as possible.  </p> <p>Contributors are able to:</p> <ul> <li>Discuss the current state of the code</li> <li>Submit a fix</li> <li>Propose new features</li> <li>Become a maintainer</li> </ul>"},{"location":"contribute/#becoming-a-maintainer","title":"Becoming a maintainer","text":"<p>When contributing to JELOS you are expected to become the maintainer of your contribution.  Please keep this in mind when submitting pull requests.</p> <ul> <li>Keep track of your contributions upstream and keep your components up-to-date.</li> <li>Watch the issue tracker and resolve issues related to your contribution.</li> </ul>"},{"location":"contribute/#we-develop-with-github","title":"We Develop with Github","text":"<p>We use Github to host code, to track issues and feature requests, as well as accept pull requests.</p> <p>Pull requests are the best way to propose changes to the codebase (we use Github Flow). We actively welcome your pull requests:</p> <ol> <li>Join our discord and chat with us, we'll be happy to help you successfully implement your change.</li> <li>Fork the repo and create your branch from <code>dev</code>.</li> <li>Ensure your code is built locally and tested.</li> <li>Any changes should be reflected in the documentation.</li> <li>Issue a pull request back to our <code>dev</code> branch.</li> </ol>"},{"location":"contribute/#use-a-consistent-coding-style","title":"Use a Consistent Coding Style","text":"<ul> <li>Please follow the same style as the source you are editing.</li> <li>If you are contributing new code, keep the style consistent with other similar works.</li> <li>Parameterize as much as possible, try to avoid hard coded values whenever you can.</li> <li>Use 2 spaces for indentation rather than tabs when possible.</li> </ul>"},{"location":"contribute/#license","title":"License","text":"<p>When you submit code changes, your submissions are understood to be contributed under the same license as the original project code or under GPLv2 license when no other license applies.</p>"},{"location":"contribute/#getting-started","title":"Getting Started","text":"<p>Our recommended next step is getting a build environment set up so you can see how JELOS works and how packages are built.  Check out the details in Building JELOS and if you have any questions please let us know on Discord.</p> <p>This document was adapted from the open-source contribution guidelines for Facebook's Draft</p>"},{"location":"contribute/build/","title":"Building JELOS","text":"<p>JELOS is a fairly unique distribution as it is built to order and only enough of the operating system and applications are built for the purpose of booting and executing emulators and ports.  Developers and others who would like to contribute to our project should read and agree to the Contributor Code of Conduct and Contributing to JELOS guides before submitting your first contribution.</p>"},{"location":"contribute/build/#1-prep","title":"1. Prep","text":"<p>Building JELOS requires a host with 200GB of free space for a single device, or 1TB of free space for a full world build.  </p> <p>Expect your first build to take on the order of ten hours.  You will need a stable internet connection, since hundreds of packages will be downloaded from their source.</p> <p>Download errors often produce build failures with misleading error messages.  If this happens to you, see the Troubleshooting section below.</p> <p>After a clean build, all subsequent builds will go much faster (minutes) since 99% of the build work is cached.</p>"},{"location":"contribute/build/#docker-recommended","title":"Docker (Recommended)","text":"<p>Docker is the easiest and most reliable way to build JELOS.</p> <p>You need no previous experience with Docker; you merely need to install it on your build machine.  Newcomers to the project are strongly recommended to use this approach.</p> <p>We recommend using Ubuntu 22.04 for the host machine, as this is well-tested and known to work.  Other distributions and operating systems might also work for Docker builds, but are untested and unsupported.</p> Install Docker using the following commands:<pre><code>sudo apt update\nsudo apt install ca-certificates curl gnupg\n\nsudo install -m 0755 -d /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\nsudo chmod a+r /etc/apt/keyrings/docker.gpg\n\necho \\\n  \"deb [arch=\"$(dpkg --print-architecture)\" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  \"$(. /etc/os-release &amp;&amp; echo \"$VERSION_CODENAME\")\" stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n\nsudo apt update\nsudo apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n\nsudo groupadd docker\nsudo usermod -aG docker $USER\nnewgrp docker\n\ndocker run hello-world\n</code></pre> <p>Docker installation reference (source): Install using the apt repository and Linux post-installation steps.</p> <p>The final command should produce a message indicating that Docker is properly installed.  If you encounter any errors, see the reference links above.</p>"},{"location":"contribute/build/#manual-build","title":"Manual Build","text":"<p>Manual builds (outside of Docker) are only recommended for developers with specific needs that cannot be met by the Docker approach.  The host configuration should match the Docker container as closely as possible, running Ubuntu 22.04 with all packages listed in the Dockerfile.</p>"},{"location":"contribute/build/#virtual-machines","title":"Virtual Machines","text":"<p>If you prefer to use a virtual machine for your build platform; keep in mind that results vary. There have been some reports of success with VMware Workstation (Player and Pro) and WSL and some unsuccessful attempts with VirtualBox. These reports are not definitive, but something to keep in mind if you prefer to use a VM.</p>"},{"location":"contribute/build/#2-clone","title":"2. Clone","text":"<p>After preparing the build machine, clone the JELOS git repository onto it.</p> <pre><code>cd ~\ngit clone https://github.com/JustEnoughLinuxOS/distribution.git\n</code></pre>"},{"location":"contribute/build/#selecting-the-desired-branch","title":"Selecting the Desired Branch","text":"<p>Once you have cloned the repo, decide whether you want to build the main branch which is more stable, or the development branch which is unstable but hosts our newest features.</p> Branch Purpose main Stable JELOS sources dev Unstable JELOS sources <p>To check out our development branch, cd into the project directory and checkout <code>dev</code>.</p> <pre><code>cd distribution\ngit checkout dev\n</code></pre>"},{"location":"contribute/build/#filesystem-structure","title":"Filesystem Structure","text":"<p>We have a simple filesystem structure adopted from parent distributions CoreELEC, LibreELEC, etc.</p> <pre><code>.\n\u251c\u2500\u2500 build.JELOS-DEVICE.ARCHITECTURE\n\u251c\u2500\u2500 config\n\u251c\u2500\u2500 distributions\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 licenses\n\u251c\u2500\u2500 Makefile\n\u251c\u2500\u2500 packages\n\u251c\u2500\u2500 post-update\n\u251c\u2500\u2500 projects\n\u251c\u2500\u2500 release\n\u251c\u2500\u2500 scripts\n\u251c\u2500\u2500 sources\n\u2514\u2500\u2500 tools\n</code></pre> <p>build.JELOS-DEVICE.ARCHITECTURE</p> <p>Build roots for each device and that device's architecture(s).  For ARM devices JELOS builds and uses a 32bit root for several of the cores used in the 64bit distribution.</p> <p>config</p> <p>Contains functions utilized during the build process including architecture specific build flags, optimizations, and functions used throughout the build workflow.</p> <p>distributions</p> <p>Distributions contains distribution-specific build flags and parameters and splash screens.</p> <p>Dockerfile</p> <p>Used to build the Ubuntu container used to build JELOS.  The container is hosted at https://hub.docker.com/u/justenoughlinuxos.</p> <p>licenses</p> <p>All of the licenses used throughout the distribution packages are hosted here.  If you're adding a package that contains a license, make sure it is available in this directory before submitting the PR.</p> <p>Makefile</p> <p>Used to build one or more JELOS images, or to build and deploy the Ubuntu container.</p> <p>packages</p> <p>All of the packages used to develop and build JELOS are hosted within the packages directory.  The package structure documentation is available here.</p> <p>post-update</p> <p>Anything that is necessary to be run on a device after an upgrade should be added here.  Be sure to apply a guard to test that the change needs to be executed before execution.</p> <p>projects</p> <p>Hardware-specific parameters are stored in the projects folder.  Anything that should not be included on every device during a world build should be isolated to the specific project or device here.</p> <p>release</p> <p>The output directory for all of the build images.</p> <p>scripts</p> <p>This directory contains all of the scripts used to fetch, extract, build, and release the distribution.  Review Makefile for more details.</p> <p>sources</p> <p>As the distribution is being built, package source files are fetched and hosted in this directory.  They will persist after a <code>make clean</code>.</p> <p>tools</p> <p>The tools directory contains utility scripts that can be used during the development process, including a simple tool to burn an image to a usb drive or sdcard.</p>"},{"location":"contribute/build/#3-build","title":"3. Build","text":""},{"location":"contribute/build/#building-device-images","title":"Building Device Images","text":"<p>Building JELOS is easy.  From the root of your local repository, issue one of the <code>make</code> commands listed below, depending on the desired device and whether you are using Docker.</p> Devices Dependency Docker Command Manual Command AMD64 <code>make docker-AMD64</code> <code>make AMD64</code> RK3588 <code>make docker-RK3588</code> <code>make RK3588</code> RK3326 <code>make docker-RK3326</code> <code>make RK3326</code> RK3566 <code>make docker-RK3566</code> <code>make RK3566</code> RK3566-X55 RK3566 <code>make docker-RK3566-X55</code> <code>make RK3566-X55</code> S922X <code>make docker-S922X</code> <code>make S922X</code> ALL DEVICES <code>make docker-world</code> <code>make world</code> <p>Devices that list a dependency require you to build the dependency first, since that build will be used as the root of the device you are building.</p> <p>For example, the following command uses Docker to build the AMD64 image.  </p> <pre><code>make docker-AMD64\n</code></pre>"},{"location":"contribute/build/#rightsized-builds","title":"Rightsized Builds","text":"<p>JELOS supports various build variables which alter the behavior of the distribution for specific purposes including debugging, or hosting containers.  The options are defined below and are passed on the make command line.  Ex. <code>BASE_ONLY=true make docker-RK3566</code>.</p> Build Option Default Function EMULATION_DEVICE yes Builds EmulationStation and all emulators if <code>yes</code>. Builds EmulationStation and NO emulators if <code>no</code>. ENABLE_32BIT yes Builds a 32bit root and includes it in the image.  Needed for 32bit cores and applications. BASE_ONLY false<sup>1</sup> Builds only the bare minimum packages.  Includes Weston on supported devices.  Does not build EmulationStation. CONTAINER_SUPPORT no Builds support for running containers on JELOS. <p>Note: <sup>1</sup> this property will change to yes/no for consistency in a future release.</p>"},{"location":"contribute/build/#env-variables","title":"Env Variables","text":"<p>For development builds, you can use the following env variables to customize the image or change build time functionality. To make them globally available to the builds, add them to <code>${HOME}/.JELOS/options</code>.</p> Variable Function LOCAL_SSH_KEYS_FILE Enables using ssh public keys for access without the root password. LOCAL_WIFI_SSID The SSID of the network the device should connect to automatically. LOCAL_WIFI_KEY The WIFI authentication key for the connection.\" SCREENSCRAPER_DEV_LOGIN Login information for screenscraper.fr. GAMESDB_APIKEY Login information for thegamesdb.net. CHEEVOS_DEV_LOGIN Login information for retroachievements.org. CLEAN_PACKAGES Allows specifying packages to clean during a build. CONCURRENCY_MAKE_LEVEL The number of concurrent jobs to use during a build (defaults to the number returned by <code>nproc</code>)."},{"location":"contribute/build/#ssh-keys","title":"SSH Keys","text":"<pre><code>export LOCAL_SSH_KEYS_FILE=~/.ssh/jelos/authorized_keys\n</code></pre>"},{"location":"contribute/build/#wifi-ssid-and-password","title":"WiFi SSID and password","text":"<pre><code>export LOCAL_WIFI_SSID=MYWIFI\nexport LOCAL_WIFI_KEY=secret\n</code></pre>"},{"location":"contribute/build/#screenscraper-gamesdb-and-retroachievements","title":"Screenscraper, GamesDB, and RetroAchievements","text":"<p>To enable Screenscraper, GamesDB, and RetroAchievements, register at each site and apply the api keys in <code>${HOME}/.JELOS/options</code>. Unsetting one of the variables will disable it in EmulationStation. This configuration is picked up by EmulationStation during the build.</p> <pre><code># Apply for a Screenscraper API Key here: https://www.screenscraper.fr/forumsujets.php?frub=12&amp;numpage=0\nexport SCREENSCRAPER_DEV_LOGIN=\"devid=DEVID&amp;devpassword=DEVPASSWORD\"\n# Apply for a GamesDB API Key here: https://forums.thegamesdb.net/viewforum.php?f=10\nexport GAMESDB_APIKEY=\"APIKEY\"\n# Find your Cheevos Web API key here: https://retroachievements.org/controlpanel.php\nexport CHEEVOS_DEV_LOGIN=\"z=RETROACHIEVEMENTSUSERNAME&amp;y=APIKEYID\"\n</code></pre>"},{"location":"contribute/build/#cleaning-additional-packages","title":"Cleaning Additional Packages","text":"<p><pre><code>make docker-shell\nCLEAN_PACKAGES=\"linux ppsspp-sa\" make AMD64\nexit\n</code></pre> The first and last lines should be omitted if building outside of Docker.</p>"},{"location":"contribute/build/#troubleshooting","title":"Troubleshooting","text":"<p>The very first build after a fresh checkout is the hardest. Give yourself sufficient time to generate the first build and work through any failures before attempting to modify JELOS. </p> <p>Download errors can produce misleading failure messages so beware of chasing red herrings.  A network failure is much more likely than a bug in the makefile, given how frequently it is tested by our CI system and other devs.</p>"},{"location":"contribute/build/#option-1-clean-the-package-that-failed","title":"Option 1: Clean the package that failed","text":"<p>Try cleaning the failed package and building again using the following command: <pre><code>PROJECT={PROJECT} DEVICE={DEVICE} ARCH={ARCH} ./scripts/clean {PACAKGE NAME}\n</code></pre></p> <p>Use this table to determine the values you should use in the above command:</p> For Build PROJECT DEVICE ARCH AMD64 PC AMD64 x86_64 RK3588 Rockchip RK3588 aarch64 RK3326 Rockchip RK3326 aarch64 RK3566 Rockchip RK3566 aarch64 RK3566-X55 Rockchip RK3566-X55 aarch64 S922X Amlogic S922X aarch64 <p>As an example; if you were buildling <code>AMD64</code> and wanted to clean the <code>mame-lr</code> package: <pre><code>PROJECT=PC DEVICE=AMD64 ARCH=x86_64 ./scripts/clean mame-lr\n</code></pre></p> <p>After cleaning a package you can try to build/install it directly as a quick way to see if the error is resolved.  Just change the script to <code>install</code> or <code>build</code> depending on what the package requires.</p> <p>Using our example above (e.g. building for AMD64) mame-lr requires <code>install</code> so you can run this command to check it directly <pre><code>PROJECT=PC DEVICE=AMD64 ARCH=x86_64 ./scripts/install mame-lr\n</code></pre></p> <p>If that completes without error then running the build for your device should proceed.</p>"},{"location":"contribute/build/#option-2-delete-the-source-of-the-package-that-failed","title":"Option 2: Delete the source of the package that failed","text":"<p>If you are still getting an error after trying the above its likely that a download failure occured for the source of the package that is failing. </p> <p>In this case; manually delete the relevant package(s) from the <code>sources</code> and <code>build.JELOS-...</code> directories and start your build again.  This will force that package to be re-downloaded from source and re-built.</p>"},{"location":"contribute/build/#additional-notes","title":"Additional notes","text":"<ul> <li>In most cases build failures are caused by single package failures which the above options should help resolve. Exhaust all options before using <code>make clean</code> for the entire build. That action will delete the build cache and takes hours to regenerate.  </li> <li>As a very last resort, delete the entire local repository and start over. This is VERY rarely needed so please focus on the above options first.</li> </ul>"},{"location":"contribute/code-of-conduct/","title":"Contributor Code of Conduct","text":""},{"location":"contribute/code-of-conduct/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"contribute/code-of-conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"contribute/code-of-conduct/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"contribute/code-of-conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"contribute/code-of-conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at contact at jelos dot org. All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"contribute/code-of-conduct/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"contribute/code-of-conduct/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"contribute/code-of-conduct/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"contribute/code-of-conduct/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"contribute/code-of-conduct/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior,  harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"contribute/code-of-conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"contribute/modify/","title":"Modifying JELOS","text":"<p>Before modifying JELOS, be sure you can successfully build the unmodified <code>main</code> or <code>dev</code> branch.  Establish a baseline of success before introducing changes to the JELOS source.</p>"},{"location":"contribute/modify/#building-a-single-package","title":"Building a Single Package","text":"<p>When modifying individual packages, it's useful to regularly verify the build-ability of your changes.  Rather than rebuild an entire device image, it is much faster to simply rebuild a single package using the following commands:</p> <pre><code>make docker-shell\nexport PROJECT=PC DEVICE=AMD64 ARCH=x86_64\n./scripts/clean busybox\n./scripts/build busybox\nexit\n</code></pre> <p>PROJECT is one of <code>Amlogic</code>, <code>PC</code>, or <code>Rockchip</code> (i.e. the subdirectories of the project directory).</p> <p>The first and last lines should be omitted if building outside of Docker.</p> <p>If you are interested in an EmulationStation package build it requires additional steps because its source code is located in a separate repository.  Please see instructions here.</p>"},{"location":"contribute/modify/#creating-a-patch-for-a-package","title":"Creating a Patch for a Package","text":"<p>It is common to have imported package source code modifed to fit the use case. It's recommended to use a special shell script to build it in case you need to iterate over it. See below.</p> <pre><code>cd sources/wireguard-linux-compat\ntar -xvJf wireguard-linux-compat-v1.0.20211208.tar.xz\nmv wireguard-linux-compat-v1.0.20211208 wireguard-linux-compat\ncp -rf wireguard-linux-compat wireguard-linux-compat.orig\n\n# Make your changes to wireguard-linux-compat\nmkdir -p ../../packages/network/wireguard-linux-compat/patches/AMD64\n# run from the sources dir\ndiff -rupN wireguard-linux-compat wireguard-linux-compat.orig &gt;../../packages/network/wireguard-linux-compat/patches/AMD64/mychanges.patch\n</code></pre>"},{"location":"contribute/modify/#creating-a-patch-for-a-package-using-git","title":"Creating a Patch for a Package Using git","text":"<p>If you are working with a git repository, building a patch for the distribution is simple.  Rather than using <code>diff</code>, use <code>git diff</code>.</p> <pre><code>cd sources/emulationstation/emulationstation-098226b/\n# Make your changes to EmulationStation\nvim/emacs/vscode/notepad.exe\n# Make the patch directory\nmkdir -p ../../packages/ui/emulationstation/patches\n# Run from the sources dir\ngit diff &gt;../../packages/ui/emulationstation/patches/005-mypatch.patch\n</code></pre> <p>After the patch is generated, rebuild an individual package by following the section above. The build system will automatically pick up patch files from the <code>patches</code> directory. For testing, one can either copy the built binary to the console or burn the whole image on SD card.</p>"},{"location":"contribute/modify/#building-a-modified-image","title":"Building a Modified Image","text":"<p>If you already have a build for your device made using the above process, it's simple to shortcut the build process and create an image to test your changes quickly using the process below.</p> <pre><code>make docker-shell\n\n# Update the package version for a new package, or apply your patch as above.\nvim/emacs/vscode/notepad.exe\n\nexport OS_VERSION=$(date +%Y%m%d) BUILD_DATE=$(date)\nexport PROJECT=PC DEVICE=AMD64 ARCH=x86_64\n./scripts/clean emulationstation\n./scripts/build emulationstation\n./scripts/install emulationstation\n./scripts/image mkimage\n\nexit\n</code></pre> <p>The first and last lines should be omitted if building outside of Docker.</p>"},{"location":"contribute/modify/#pushing-modified-images-to-a-device","title":"Pushing Modified Images to a Device","text":"<p>You can of course reflash the SD card with the modified image.</p> <p>Alternatively, you may install the image through the JELOS update mechanism, which retains your ES and emulator settings.  If the device is networked and reachable from the build machine, this can be done as follows.</p> <pre><code># Replace with your device values\nHOST=192.168.0.123\nDEVICE=RK3566\nARCH=aarch64\n\n# Assume today is the same UTC day that the image was built\nTIMESTAMP=$(date -u +%Y%m%d)\n\nSSH_OPTS=\"-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null\"\nscp ${SSH_OPTS} ~/distribution/release/JELOS-${DEVICE}.${ARCH}-${TIMESTAMP}.tar root@${HOST}:~/.update &amp;&amp; \\\n    ssh ${SSH_OPTS} root@{HOST} reboot\n</code></pre>"},{"location":"contribute/modify/#common-file-locations","title":"Common File Locations","text":"<p>Below is a reference for the locations of files you may frequently interact with while modifying JELOS</p> File \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Location Description bootloader mkimage projects/Rockchip/bootloader/mkimage busybox package packages/sysutils/busybox init packages/sysutils/busybox/scripts/init kernel config projects/Rockchip/devices/RK3566-ML/linux/linux.aarch64.conf running kernel config build.JELOS-RK3566-ML.aarch64/linux-6.5-rc7/.config boot.scr projects/Rockchip/devices/RK3566/boot/boot.scr uboot package.mk projects/Rockchip/packages/u-boot/package.mk uboot sources/u-boot/u-boot-976fb2f uboot config sources/u-boot/u-boot-976fb2f/configs/anbernic-rgxx3-rk3566_defconfig dts sources sources/u-boot/u-boot-976fb2f/arch/arm/dts/rk3566-anbernic-rgxx3.dts kernel sources/build build.JELOS-RK3566-ML.aarch64/linux-6.6-rc3 final.img releases $EXTRA_CMDLINE projects/Rockchip/devices/RK3566-ML/options $INSTALL /config $BUILD/image/system, /scripts ${BUILD}/initramfs $LE_TEMP scripts/mkimage mktemp -d -p $TARGET_IMG"},{"location":"contribute/packages/","title":"Structure of package.mk files","text":""},{"location":"contribute/packages/#introduction","title":"Introduction","text":"<p>The package.mk file defines variables and functions to build a package.</p>"},{"location":"contribute/packages/#variables","title":"Variables","text":"<p>To control the build behaviour of your package, use variables in the top-down order listed here.</p>"},{"location":"contribute/packages/#base","title":"Base","text":"Variable Default Required Description PKG_NAME - yes Name of the packaged software application. Should be lowercase PKG_VERSION - yes Version of the packaged software application. If the version is a githash, please use the full githash, not the abbreviated form. PKG_SHA256 - yes SHA256 hashsum of the application download file PKG_ARCH any no Architectures for which the package builds. <code>any</code> or a space separated list of <code>aarch64</code>, <code>arm</code> or <code>x86_64</code> PKG_LICENSE - yes License of the software application. Reference PKG_SITE - yes Site of the software application PKG_URL - yes Address at which the source of the software application can be retrieved PKG_MAINTAINER - no Your name PKG_DEPENDS_BOOTSTRAPPKG_DEPENDS_HOST   PKG_DEPENDS_INIT   PKG_DEPENDS_TARGET - no A space separated list of name of packages required to build the software application PKG_SECTION - no virtual if the package only defines dependencies PKG_SHORTDESC - noyes\u00a0for\u00a0addons Short description of the software package PKG_LONGDESC - yes Long description of the package including purpose or function within JELOS or Kodi"},{"location":"contribute/packages/#universal-build-option","title":"Universal Build Option","text":"Variable Default Required Description PKG_SOURCE_DIR - no Force the folder name that application sources are unpacked to. Used when sources do not automatically unpack to a folder with the <code>PKG_NAME-PKG_VERSION</code> naming convention. PKG_SOURCE_NAME - no Force the filename of the application sources. Used when the filename is not the basename of <code>PKG_URL</code> PKG_PATCH_DIRS - no Patches in <code>./patches</code> are automatically applied after package unpack. Use this option to include patches from an additional folder, e.g. <code>./patches/$PKG_PATCH_DIRS</code> PKG_NEED_UNPACK - no Space separated list of files or folders to include in package stamp calculation. If the stamp is invalidated through changes to package files or dependent files/folders the package is cleaned and rebuilt. e.g. <code>PKG_NEED_UNPACK=\"$(get_pkg_directory linux)\"</code> will trigger clean/rebuild of a Linux kernel driver package when a change to the <code>linux</code> kernel package is detected. PKG_TOOLCHAIN auto no Control which build toolchain is used. For detailed information, see reference. PKG_BUILD_FLAGS - no A space separated list of flags with which to fine-tune the build process. Flags can be enabled or disabled with a <code>+</code> or <code>-</code> prefix. For detailed information, see the Reference. PKG_PYTHON_VERSION python2.7 no Define the Python version to be used. PKG_IS_KERNEL_PKG - no Set to <code>yes</code> for packages that include Linux kernel modules"},{"location":"contribute/packages/#meson-options","title":"Meson Options","text":"Variable Default Required Description PKG_MESON_SCRIPT ${PKG_BUILD}/meson.build no Meson build file to use PKG_MESON_OPTS_TARGET - no Options directly passed to meson"},{"location":"contribute/packages/#cmake-options","title":"CMAKE Options","text":"Variable Default Required Description PKG_CMAKE_SCRIPT ${PKG_BUILD}/CMakeLists.txt no CMake build file to use PKG_CMAKE_OPTS_HOSTPKG_CMAKE_OPTS_TARGET - no Options directly passed to cmake"},{"location":"contribute/packages/#configure-options","title":"Configure Options","text":"Variable Default Required Description PKG_CONFIGURE_SCRIPT ${PKG_BUILD}/configure no configure script to use PKG_CONFIGURE_OPTSPKG_CONFIGURE_OPTS_BOOTSTRAPPKG_CONFIGURE_OPTS_HOSTPKG_CONFIGURE_OPTS_INITPKG_CONFIGURE_OPTS_TARGET - no Options directly passed to configure"},{"location":"contribute/packages/#make-options","title":"Make Options","text":"Variable Default Required Description PKG_MAKE_OPTSPKG_MAKE_OPTS_BOOTSTRPPKG_MAKE_OPTS_HOSTPKG_MAKE_OPTS_INIT PKG_MAKE_OPTS_TARGET - no Options directly passed to make in the build step PKG_MAKEINSTALL_OPTS_HOSTPKG_MAKEINSTALL_OPTS_TARGET - no Options directly passed to make in the install step"},{"location":"contribute/packages/#addons","title":"Addons","text":"<p>Additional options used when the package builds an addon.</p> Variable Default Required Description PKG_REV - yes The revision number of the addon (starts at 100). Must be placed after <code>PKG_VERSION</code>. Must be incremented for each new version else Kodi clients will not detect version change and download the updated addon. PKG_IS_ADDON no yes Must be set to <code>yes</code> or to <code>embedded</code> when this addon is part of the image PKG_ADDON_NAME - yes Proper name of the addon that is shown at the repo PKG_ADDON_TYPE - yes See LE/config/addon/ for other possibilities PKG_ADDON_VERSION - no The version of the addon, used in addon.xml PKG_ADDON_PROVIDES - no Provides in addon-xml PKG_ADDON_REQUIRES - no Requires used in addon.xml PKG_ADDON_PROJECTS @PROJECTS@ no for available projects or devices, see projects subdirectory (note: Use RPi for RPi project, and RPi1 for RPi device) PKG_DISCLAIMER - no Disclaimer in addon-xml PKG_ADDON_IS_STANDALONE - no Defines if an addon depends on Kodi (on) or is standalone (yes) PKG_ADDON_BROKEN - no Marks an addon as broken for the user"},{"location":"contribute/packages/#detailed-information-for-options","title":"Detailed Information for Options","text":""},{"location":"contribute/packages/#toolchain-options","title":"TOOLCHAIN options","text":"<p>Application/packages needs different toolchains for build. For instance <code>cmake</code> or the classic <code>./configure</code> or same very different.</p> <p>For the most application/packages, the auto-detection of the toolchain works proper. But not always. To select a specific toolchain, you only need to set the <code>PKG_TOOLCHAIN</code> variable.</p> Toolchain Description (if needed) meson Meson Build System cmake CMake with Ninja cmake-make CMake with Make autotools GNU Build System configure preconfigured GNU Build System ninja Ninja Build make Makefile Based manual only runs self writen build steps, see Functions"},{"location":"contribute/packages/#auto-detection","title":"Auto-Detection","text":"<p>The auto-detections looks for specific files in the source path.</p> <ol> <li><code>meson.build</code> (PKG_MESON_SCRIPT) =&gt; meson toolchain</li> <li><code>CMakeLists.txt</code> (PKG_CMAKE_SCRIPT) =&gt; cmake toolchain</li> <li><code>configure</code> (PKG_CONFIGURE_SCRIPT) =&gt; configure toolchain</li> <li><code>Makefile</code> =&gt; make toolchain</li> </ol> <p>When none of these was found, the build abort and you have to set the toolchain via <code>PKG_TOOLCHAIN</code></p>"},{"location":"contribute/packages/#build_flags-options","title":"BUILD_FLAGS options","text":"<p>Build flags implement often used build options. Normally these are activated be default, but single applications/packages has problems to compile/run with these.</p> <p>Set the variable <code>PKG_BUILD_FLAGS</code> in the <code>package.mk</code> to enable/disable the single flags. It is a space separated list. The flags can enabled with a <code>+</code> prefix, and disabled with a <code>-</code>.</p> flag default affected stage description pic disabled target/init Position Independent Code pic:host disabled host/bootstrap see above lto disabled target/init enable LTO (Link Time optimization) in the compiler and linker unless disabled via <code>LTO_SUPPORT</code>. Compiles non-fat LTO objects (only bytecode) and performs single-threaded optimization at link stage lto-parallel disabled target/init same as <code>lto</code> but enable parallel optimization at link stage. Only enable this if the package build doesn't run multiple linkers in parallel otherwise this can result in lots of parallel processes! lto-fat disabled target/init same as <code>lto</code> but compile fat LTO objects (bytecode plus optimized assembly). This increases compile time but can be useful to create static libraries suitable both for LTO and non-LTO linking lto-off disabled target/init explicitly disable LTO in the compiler and linker gold depend on <code>GOLD_SUPPORT</code> target/init can only disabled, use of the GOLD-Linker parallel enabled all <code>make</code> or <code>ninja</code> builds with multiple threads/processes (or not) strip enabled target strips executables (or not)"},{"location":"contribute/packages/#example","title":"Example","text":"<pre><code>PKG_BUILD_FLAGS=\"+pic -gold\"\nPKG_BUILD_FLAGS=\"-parallel\"\n</code></pre>"},{"location":"contribute/packages/#functions","title":"Functions","text":"<p>All build steps in the JELOS build system are done by shell function. These functions can overwritten in the <code>package.mk</code>. But this raises problems, when the build system is updated. To reduce the problem, most function was extended by <code>pre_</code> and <code>post_</code> scripts, to use instead.</p> <p>When it is nesseary to replace configure, make and makeinstall, please use <code>PKG_TOOLCHAIN=\"manual\"</code>.</p> <p>Some of the build steps needs to be run once, like <code>unpack</code>. Other steps needs to be run multiple times, to create the toolchain (stage bootstrap &amp; host) or to create the LE image (stage init &amp; target). These stage specific functions have the stage as suffix, like <code>make_target</code>.</p> <p>Full list of overwrittable functions.</p> function stages specific description configure_package - Optional function to implement late binding variable assignment (see below) unpackpre_unpackpost_unpack - Extract the source from the downloaded file pre_patchpost_patch - Apply the patches to the source, after extraction. The patch function it self is not allowed to overwritten pre_build_[stage] yes Runs before of the start of the build pre_configurepre_configure_[stage]configure_[stage]post_configure_[stage] yes Configure the package for the compile. This is only relevant for toolchain, that supports it (e.g. meson, cmake, configure, manual) make_[stage]pre_make_[stage]post_make_[stage] yes Build of the package makeinstall_[stage]pre_makeinstall_[stage]post_makeinstall_[stage] yes Installation of the files in the correct patheshost: TOOLCHAINtarget: SYSROOT and IMAGEbootstrap and init: temporary destination addon - Copy all files together for addon creation. This is requiered for addons"},{"location":"contribute/packages/#late-binding-variable-assignment","title":"Late Binding variable assignment","text":"<p>A package will be loaded only once, by the call to <code>config/options</code>. During this process, additional package specific variables will be initialised, such as:</p> <ul> <li><code>PKG_BUILD</code> - path to the build folder</li> <li><code>PKG_SOURCE_NAME</code> - if not already specified, generated from <code>PKG_URL</code>, <code>PKG_NAME</code> and<code>PKG_VERSION</code></li> </ul> <p>Since these variables will not exist at the time the package is loaded, they can only be referenced after package has loaded. This can be accomplished by referencing these variables in the <code>configure_package()</code> function which is executed once the additional variables have been assigned.</p> <p>If necessary, the following variables would be configured in <code>configure_package()</code> as they are normally relative to <code>${PKG_BUILD}</code>: <pre><code>  PKG_CONFIGURE_SCRIPT\n  PKG_CMAKE_SCRIPT\n  PKG_MESON_SCRIPT\n</code></pre></p> <p>Further to this, toolchain variables that are defined in <code>setup_toolchain()</code> must not be referenced \"globally\" in the package as they will only be configured reliably after <code>setup_toolchain()</code> has been called during <code>scripts/build</code>. Any variable in the following list must instead be referenced in a package function such as <code>pre_build_*</code>, <code>pre_configure_*</code>, <code>pre_make_*</code> etc.: <pre><code>  TARGET_CFLAGS TARGET_CXXFLAGS TARGET_LDFLAGS\n  NINJA_OPTS MAKEFLAGS\n  DESTIMAGE\n  CC CXX CPP LD\n  AS AR NM RANLIB\n  OBJCOPY OBJDUMP\n  STRIP\n  CPPFLAGS CFLAGS CXXFLAGS LDFLAGS\n  PKG_CONFIG\n  PKG_CONFIG_PATH\n  PKG_CONFIG_LIBDIR\n  PKG_CONFIG_SYSROOT_DIR\n  PKG_CONFIG_ALLOW_SYSTEM_CFLAGS\n  PKG_CONFIG_ALLOW_SYSTEM_LIBS\n  CMAKE_CONF CMAKE\n  HOST_CC HOST_CXX HOSTCC HOSTCXX\n  CC_FOR_BUILD CXX_FOR_BUILD BUILD_CC BUILD_CXX\n  _python_sysroot _python_prefix _python_exec_prefix\n</code></pre></p> <p>Lastly, the following variables are assigned during <code>scripts/build</code> but some packages may need to use alternative values for these variables. To do so, the package must assign alternative values in <code>pre_build_*</code>/<code>pre_configure_*</code>/<code>pre_make_*</code> etc. functions as these functions will be called after the variables are initialised with default values in <code>scripts/build</code> but before they are used by <code>scripts/build</code>. <pre><code>  CMAKE_GENERATOR_NINJA\n\n  TARGET_CONFIGURE_OPTS\n  TARGET_CMAKE_OPTS\n  TARGET_MESON_OPTS\n\n  HOST_CONFIGURE_OPTS\n  HOST_CMAKE_OPTS\n  HOST_MESON_OPTS\n\n  INIT_CONFIGURE_OPTS\n  INIT_CMAKE_OPTS\n  INIT_MESON_OPTS\n\n  BOOTSTRAP_CONFIGURE_OPTS\n  BOOTSTRAP_CMAKE_OPTS\n  BOOTSTRAP_MESON_OPTS\n</code></pre></p>"},{"location":"contribute/packages/#example_1","title":"Example","text":"<pre><code>configure_package() {\n  # now we know where we're building, assign a value\n  PKG_CONFIGURE_SCRIPT=\"${PKG_BUILD}/gettext-tools/configure\"\n}\n\npost_patch() {\n  # replace hardcoded stuff\n  sed -i ${PKG_CONFIGURE_SCRIPT} 's|hardcoded stuff|variable stuff|'\n}\n\npre_configure_target() {\n  # add extra flag to toolchain default\n  CFLAGS=\"${CFLAGS} -DEXTRA_FLAG=yeah\"\n}\n\npost_makeinstall_target() {\n  # remove unused executable, install what remains\n  rm ${INSTALL}/usr/bin/bigexecutable\n}\n</code></pre>"},{"location":"contribute/packages/#toolspkgcheck","title":"tools/pkgcheck","text":"<p>Use <code>tools/pkgcheck</code> to verify packages. It detects the following issues:</p> Issue Level Meaning late\u00a0binding\u00a0violation FAIL Late binding variables referenced outside of a function - see late binding duplicate\u00a0function\u00a0def FAIL Function defined multiple times, only last definition will be used bad\u00a0func\u00a0-\u00a0missing\u00a0brace FAIL Opening brace (<code>{</code>) for function definition should be on same line as the function def, ie. <code>pre_configure_target() {</code> intertwined\u00a0vars\u00a0&amp;\u00a0funcs WARN Variable assignments and logic is intertwined with functions - this is cosmetic, but variables and logic should be specified before all functions unknown\u00a0function WARN Could be a misspelled function, ie. <code>per_configure_target() {</code> which might fail silently. ignored\u00a0depends\u00a0assign WARN Values assigned to <code>PKG_DEPENDS_*</code> outside of the global section or <code>configure_package()</code> will be ignored."},{"location":"contribute/packages/#add-a-new-package-to-the-image","title":"Add a new package to the Image","text":"<ol> <li>Think about, why you need it in the image.<ul> <li>new multimedia tool</li> <li>add a new network tool</li> <li>new kernel driver</li> <li>...</li> </ul> </li> <li>Find a place in the packages tree<ul> <li>look into the package tree structure, which is generally self explaind.</li> <li>do not place it in an existing package (directory that includes a <code>package.mk</code>)</li> <li>when you found a place, create a directory with the name of your package (use same value for <code>PKG_NAME</code>!!)</li> </ul> </li> <li>Create an initial <code>package.mk</code><ul> <li>you can find a template under <code>packages/package.mk.template</code>. Copy the template into the new directory and call it <code>package.mk</code></li> <li>apply any required changes to your new <code>package.mk</code></li> </ul> </li> <li>Find a place in the dependency tree<ul> <li>when it extend an existing package, add it there to the <code>PKG_DEPENDS_TARGET</code>/<code>PKG_DEPENDS_HOST</code> etc.</li> <li>take a look into the path <code>packages/virtual</code>, there you should find a virtual packages, that match your new package (misc-packages should be the last option)</li> </ul> </li> <li>Now you can build your image<ul> <li>after the build, inside the <code>build-*</code> folder you should find a directory with your package name and -version, eg. <code>widget-1.2.3</code>.</li> </ul> </li> </ol>"},{"location":"contribute/quirks/","title":"Adding Quirks","text":""},{"location":"contribute/quirks/#panel-rotation","title":"Panel Rotation","text":"<p>If you have a new device that supports Mainline Linux, adding and submitting a rotation patch is very simple. Adding a rotation patch to the kernel will provide the hints needed for Wayland/Weston to also correctly rotate the panel.</p> <p>To begin, download the kernel sources.  Extract the kernel and rename it to linux-{version}.orig, and then copy that folder to linux-{version} or extract it again so there are two copies.  This will be necessary to create the patch.</p>"},{"location":"contribute/quirks/#panel-definition-and-default-orientation","title":"Panel Definition and Default Orientation","text":"<p>Next, edit <code>linux-{version}/./drivers/gpu/drm/drm_panel_orientation_quirks.c</code> and add a struct describing your panel and its orientation if one does not already exist.  For example:</p> <pre><code>static const struct drm_dmi_panel_orientation_data lcd1080x1920_leftside_up = {\n  .width = 1080,\n  .height = 1920,\n  .orientation = DRM_MODE_PANEL_ORIENTATION_LEFT_UP,\n};\n</code></pre> <p>In the example above, the panel is 1080p, and rotated to the left in order to be corrected.</p>"},{"location":"contribute/quirks/#dmi-matching","title":"DMI Matching","text":"<p>Now that the rotation correction has been defined, the kernel needs a method to match and apply it.  For this we use DMI data.  You can retrieve the DMI data by using <code>cat</code>, or <code>dmidecode</code>.  For our example, we'll use <code>cat</code>.</p> <pre><code>airplus:~ # cat /sys/class/dmi/id/sys_vendor\nAYANEO\nairplus:~ # cat /sys/class/dmi/id/product_name\nAIR Plus\n</code></pre> <p>Using this data, we will create a match rule to match our panel struct in drm_panel_orientation_quirks.c.</p> <pre><code>{\n  .matches = {\n    DMI_EXACT_MATCH(DMI_SYS_VENDOR, \"AYANEO\"),\n    DMI_EXACT_MATCH(DMI_PRODUCT_NAME, \"AIR Plus\"),\n  },\n  .driver_data = (void *)&amp;lcd1080x1920_leftside_up,\n}\n</code></pre> <p>Save, and build your patch following the instructions here. Place your patch in <code>packages/kernel/linux/patches/AMD64</code> or the appropriate device directory, and run a test build.</p> <p>DMI_EXACT_MATCH or DMI_MATCH can be used.  DMI_EXACT_MATCH is as implied, an exact match.  DMI_MATCH will match that any device where its DMI data includes \"AIR Plus\"</p>"},{"location":"contribute/quirks/#hardware-quirks","title":"Hardware Quirks","text":"<p>Adding hardware quirks are simple, and many examples can be found in <code>packages/hardware/quirks/devices</code>.  To begin, review an existing quirk to familiarize yourself with the pattern.</p>"},{"location":"contribute/quirks/#creating-a-quirk","title":"Creating a Quirk","text":"<p>The simplest way to create a quirk for your device is to copy an existing quirk and modify it.  To copy it, simply copy the whole folder to the name of your device using the same DMI pattern as above.  If you are working on an AYANEO Air Plus, the folder name would be \"AYANEO Air Plus\" based on the DMI data in our example.</p> <p>Next, edit each file to contain the data appropriate for your device.  To collect the data that you need, use the following tools:</p> <ul> <li>001-deviceconfig<ul> <li>This configuration file contains basic information for JELOS that cannot currently be determined automatically.  A configuration is provided with the distribution if there is no quirk found, however it can be customized to suit.  The following tools can be used to identify the correct data for your device.</li> <li>KEYA/B_MODIFIER - <code>evtest</code>.</li> <li>PATH_SPK/HP - <code>amixer</code>.</li> </ul> </li> <li>002-fancontrol<ul> <li>Not all devices have methods available to control the fan.  The following can help determine if yours can be controlled.</li> <li><code>find /sys/devices -name pwm*</code> and evaluate if fan control is available.</li> <li>DEVICE_HAS_FAN=\"false\" if manual control cannot be enabled.</li> </ul> </li> </ul>"},{"location":"contribute/quirks/#additional-quirks","title":"Additional Quirks","text":"<p>Your device may need additional quirks to function correctly or for optimization. Ask in the JELOS discord if you need additional guidance.</p>"},{"location":"contribute/quirks/#submit-your-quirk","title":"Submit Your Quirk","text":"<p>Please follow the instuctons for Building and Contributing to submit your quirks to the distribution for inclusion.  Please do not change major functionality of the distribution or break our hotkey standards, submissions that do not follow our standards will need to be revised.</p>"},{"location":"devices/","title":"Device Support","text":"<p>JELOS supports a variety of ARM and Intel/AMD based devices.</p> Manufacturer Device CPU / Architecture Kernel GL driver Interface Anbernic RG351P/M Rockchip RK3326 (ARM) Mainline Linux Panfrost Weston + Emulation Station Anbernic RG351V Rockchip RK3326 (ARM) Mainline Linux Panfrost Weston + Emulation Station Anbernic RG353P Rockchip RK3566 (ARM) Rockchip BSP 4.19 Mali KMS/DRM + Emulation Station Anbernic RG353M Rockchip RK3566 (ARM) Rockchip BSP 4.19 Mali KMS/DRM + Emulation Station Anbernic RG353V Rockchip RK3566 (ARM) Rockchip BSP 4.19 Mali KMS/DRM + Emulation Station Anbernic RG353VS Rockchip RK3566 (ARM) Rockchip BSP 4.19 Mali KMS/DRM + Emulation Station Anbernic RG503 Rockchip RK3566 (ARM) Rockchip BSP 4.19 Mali KMS/DRM + Emulation Station Anbernic RG552 Rockchip RK3399 (ARM) Mainline Linux Panfrost Weston + Emulation Station Anbernic Win600 AMD Athlon Silver 3050e (x86_64) Mainline Linux Radeonsi Weston + Emulation Station AOKZOE A1 Pro AMD 7840u (x86_64) Mainline Linux Radeonsi Weston + Emulation Station Atari VCS AMD Ryzen R1606G (x86_64) Mainline Linux Radeonsi Weston + Emulation Station AYANEO Air / Air Pro Amd Ryzen 5 5560U / AMD Ryzen 7 5825U (x86_64) Mainline Linux Radeonsi Weston + Emulation Station AYANEO Air Plus Amd Ryzen 7 6800U / (x86_64) Mainline Linux Radeonsi Weston + Emulation Station AYANEO AYANEO 2 Amd Ryzen 7 6800U / (x86_64) Mainline Linux Radeonsi Weston + Emulation Station AYANEO AYANEO 2S Amd Ryzen 7 7840U / (x86_64) Mainline Linux Radeonsi Weston + Emulation Station Ayn Loki Zero AMD Athlon Silver 3050e (x86_64) Mainline Linux Radeonsi Weston + Emulation Station Ayn Loki Max Amd Ryzen 7 6800U / (x86_64) Mainline Linux Radeonsi Weston + Emulation Station GPD Win 4 Amd Ryzen 7 6800U / (x86_64) Mainline Linux Radeonsi Weston + Emulation Station GPD Win Max 2 (2022) Amd Ryzen 7 6800U / (x86_64) Mainline Linux Radeonsi Weston + Emulation Station Hardkernel Odroid Go Advance Rockchip RK3326 (ARM) Mainline Linux Panfrost Weston + Emulation Station Hardkernel Odroid Go Super Rockchip RK3326 (ARM) Mainline Linux Panfrost Weston + Emulation Station Hardkernel Odroid Go Ultra Amlogic S922X / Mali G52 M6 (ARMv8-A) Mainline Linux Mali Weston + Emulation Station Hardkernel N2/N2+/N2L Amlogic S922X / Mali G52 M6 (ARMv8-A) Mainline Linux Mali Weston + Emulation Station Indiedroid Nova Rockchip RK3588S / Mali G610 (ARMv8-A) Rockchip 5.10 BSP Linux Panfrost Weston + Emulation Station Orange Pi Orange Pi 5 Rockchip RK3588S / Mali G610 (ARMv8-A) Rockchip 5.10 BSP Linux Panfrost Weston + Emulation Station Powkiddy RGB10 Max 3 Pro Amlogic A311D / Mali G52 M4 (ARMv8-A) Mainline Linux Mali Weston + Emulation Station Powkiddy RGB30 Rockchip RK3566 (ARM) Rockchip BSP 4.19 Mali KMS/DRM + Emulation Station Powkiddy RK2023 Rockchip RK3566 (ARM) Rockchip BSP 4.19 Mali KMS/DRM + Emulation Station Powkiddy x55 Rockchip RK3566 (ARM) Rockchip BSP 4.19 Mali KMS/DRM + Emulation Station <p>While not technically supported, JELOS is also known to work well on a variety of generic x86_64 devices including gaming PCs, mini PCs, and laptop computers.</p>"},{"location":"devices/anbernic/rg351pmv/","title":"Anbernic RG351 [P/M/V]","text":""},{"location":"devices/anbernic/rg351pmv/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface RG351P/M Rockchip RK3326 (ARM) Mainline Linux Panfrost Weston + Emulation Station RG351V Rockchip RK3326 (ARM) Mainline Linux Panfrost Weston + Emulation Station"},{"location":"devices/anbernic/rg351pmv/#features","title":"Features","text":"Feature\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Notes  Wifi Can be turned on in Emulation Station under Main Menu &gt; Network Settings (RG351M and RG351V Only)"},{"location":"devices/anbernic/rg351pmv/#notes","title":"Notes","text":""},{"location":"devices/anbernic/rg351pmv/#installation","title":"Installation","text":"<p>Download the latest <code>RK3326</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/anbernic/rg351pmv/#additional-references","title":"Additional References","text":"<ul> <li>Platform Documentation (RK3326)</li> <li>Device Quirks</li> </ul>"},{"location":"devices/anbernic/rg353pmvvs/","title":"Anbernic RG353 [P/M/V/VS]","text":""},{"location":"devices/anbernic/rg353pmvvs/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface RG353P Rockchip RK3566 (ARM) Rockchip BSP 4.19 Mali KMS/DRM + Emulation Station RG353M Rockchip RK3566 (ARM) Rockchip BSP 4.19 Mali KMS/DRM + Emulation Station RG353V Rockchip RK3566 (ARM) Rockchip BSP 4.19 Mali KMS/DRM + Emulation Station RG353VS Rockchip RK3566 (ARM) Rockchip BSP 4.19 Mali KMS/DRM + Emulation Station <p>Anbernic RG353P/M/V/VS devices with both v1 and v2 displays are supported.</p> <p>RG353PS, ARC-S, and ARC-D models will not be supported.</p>"},{"location":"devices/anbernic/rg353pmvvs/#features","title":"Features","text":"Feature\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Notes  Storage JELOS can be installed to the emmc on P/M/V models or run from an SD Card, and an second SD card can be used to store games  Wifi Can be turned on in Emulation Station under Main Menu &gt; Network Settings  Bluetooth Supports bluetooth audio and controllers  LED Supports selecting from a set of colors or turning the power LED off (choice persists through reboots)  Does not support other effects."},{"location":"devices/anbernic/rg353pmvvs/#notes","title":"Notes","text":""},{"location":"devices/anbernic/rg353pmvvs/#installation","title":"Installation","text":"<p>Download the latest <code>RK3566</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/anbernic/rg353pmvvs/#additional-references","title":"Additional References","text":"<ul> <li>Platform Documentation (RK3566)</li> <li>Device Quirks (353P/M)</li> <li>Device Quirks (353V)</li> </ul>"},{"location":"devices/anbernic/rg353pmvvs/#community-videos","title":"Community Videos","text":""},{"location":"devices/anbernic/rg503/","title":"Anbernic RG503","text":""},{"location":"devices/anbernic/rg503/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface RG503 Rockchip RK3566 (ARM) Rockchip BSP 4.19 Mali KMS/DRM + Emulation Station"},{"location":"devices/anbernic/rg503/#features","title":"Features","text":"Feature\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Notes  Storage JELOS can be run from an SD Card and an second SD card can be used to store games  Wifi Can be turned on in Emulation Station under Main Menu &gt; Network Settings  Bluetooth Supports bluetooth audio and controllers  LED Supports selecting from a set of colors or turning the power LED off (choice persists through reboots)  Does not support other effects."},{"location":"devices/anbernic/rg503/#notes","title":"Notes","text":""},{"location":"devices/anbernic/rg503/#installation","title":"Installation","text":"<p>Download the latest <code>RK3566</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/anbernic/rg503/#additional-references","title":"Additional References","text":"<ul> <li>Platform Documentation (RK3566)</li> </ul>"},{"location":"devices/anbernic/rg552/","title":"Anbernic RG552","text":""},{"location":"devices/anbernic/rg552/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface RG552 Rockchip RK3399 (ARM) Mainline Linux Panfrost Weston + Emulation Station"},{"location":"devices/anbernic/rg552/#features","title":"Features","text":"Feature\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Notes  Storage JELOS can be run from an SD Card and an second SD card can be used to store games  Wifi Can be turned on in Emulation Station under Main Menu &gt; Network Settings  Bluetooth Supports bluetooth audio and controllers  Fan Can be set globally, per system or per game."},{"location":"devices/anbernic/rg552/#notes","title":"Notes","text":""},{"location":"devices/anbernic/rg552/#installation","title":"Installation","text":"<p>Download the latest <code>RK3399</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/anbernic/rg552/#additional-references","title":"Additional References","text":"<ul> <li>Platform Documentation (RK3399)</li> </ul>"},{"location":"devices/anbernic/rg552/#community-videos","title":"Community Videos","text":""},{"location":"devices/anbernic/win600/","title":"Anbernic Win600","text":""},{"location":"devices/anbernic/win600/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface Win600 AMD Athlon Silver 3050e (x86_64) Mainline Linux Radeonsi Weston + Emulation Station"},{"location":"devices/anbernic/win600/#features","title":"Features","text":"Feature\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Notes  Storage JELOS can be run from an SD Card, USB Drive or installed directly to the internal NVME.  When installed directly to the NVME; an SD Card can be used for game storage.  Wifi Can be turned on in Emulation Station under Main Menu &gt; Network Settings  Bluetooth Supports bluetooth audio and controllers  TPD Limit Can be set globally, per system or per game.  Rumble Enables the device rumble motor in emulators that support it."},{"location":"devices/anbernic/win600/#notes","title":"Notes","text":""},{"location":"devices/anbernic/win600/#installation","title":"Installation","text":"<p>Download the latest <code>AMD64</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/anbernic/win600/#additional-references","title":"Additional References","text":"<ul> <li>Platform Documentation (AMD64)</li> </ul>"},{"location":"devices/anbernic/win600/#community-videos","title":"Community Videos","text":""},{"location":"devices/aokzoe/a1-pro/","title":"AOKZOE A1 Pro","text":""},{"location":"devices/aokzoe/a1-pro/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface A1 Pro AMD 7840u (x86_64) Mainline Linux Radeonsi Weston + Emulation Station"},{"location":"devices/aokzoe/a1-pro/#notes","title":"Notes","text":"DMI_SYS_VENDOR DMI_PRODUCT_NAME <code>AOKZOE</code> <code>AOKZOE A1 Pro</code>"},{"location":"devices/aokzoe/a1-pro/#installation","title":"Installation","text":"<p>Download the latest <code>AMD64</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/aokzoe/a1-pro/#additional-references","title":"Additional References","text":"<ul> <li>Platform Documentation (AMD64)</li> <li>Panel Rotation</li> </ul>"},{"location":"devices/atari/vcs/","title":"Atari VCS","text":""},{"location":"devices/atari/vcs/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface VCS AMD Ryzen R1606G (x86_64) Mainline Linux Radeonsi Weston + Emulation Station"},{"location":"devices/atari/vcs/#features","title":"Features","text":"Feature\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Notes  Storage JELOS can be run from an USB Drive or installed directly to the internal EMMC or optional sata SSD.  When installed directly to the EMMC or SSD; an USB drive can optionally be used for game storage.  Wifi Can be turned on in Emulation Station under Main Menu &gt; Network Settings  Bluetooth Supports bluetooth audio and controllers  Fan Controlled by system firmware.  TPD Limit Can be set globally, per system or per game.  Rumble Enables the device rumble motor in emulators using controllers that support it."},{"location":"devices/atari/vcs/#notes","title":"Notes","text":""},{"location":"devices/atari/vcs/#installation","title":"Installation","text":"<p>Download the latest <code>AMD64</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/atari/vcs/#additional-references","title":"Additional References","text":"<ul> <li>Platform Documentation (AMD64)</li> </ul>"},{"location":"devices/ayaneo/air-plus/","title":"AYANEO Air Plus","text":""},{"location":"devices/ayaneo/air-plus/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface Air Plus Amd Ryzen 7 6800U / (x86_64) Mainline Linux Radeonsi Weston + Emulation Station"},{"location":"devices/ayaneo/air-plus/#features","title":"Features","text":"Feature\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Notes  Storage JELOS can be run from a USB Drive or installed directly to the internal NVME. When installed directly to the NVME; an SD Card can be used for game storage.  JELOS can't be run from an SD Card on the AYANEO Air Plus due to a limitation in the device's bios that we unfortunately can't change.  Wifi Can be turned on in Emulation Station under Main Menu &gt; Network Settings  Bluetooth Supports bluetooth audio and controllers  Fan Controlled by system firmware.  TPD Limit Can be set globally, per system or per game.  Rumble Enables the device rumble motor in emulators that support it.  RGB Supports selecting from a set of colors and brightness levels or turning the RGB off (choice persists through reboots)  Does not support other effects."},{"location":"devices/ayaneo/air-plus/#notes","title":"Notes","text":"DMI_SYS_VENDOR DMI_PRODUCT_NAME <code>AYANEO</code> <code>AIR Plus</code>"},{"location":"devices/ayaneo/air-plus/#installation","title":"Installation","text":"<p>Download the latest <code>AMD64</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/ayaneo/air-plus/#booting-from-an-usb-drive","title":"Booting from an USB Drive","text":"<p>To boot JELOS from the USB Drive, hold LC+Volume Up and press the Power button, continue holding LC+Volume Up until the Ayaneo logo appears.  Select the storage device with JELOS from the boot menu using the Ayaneo button, and then press volume up to boot the distribution.</p>"},{"location":"devices/ayaneo/air-plus/#additional-references","title":"Additional References","text":"<ul> <li>Platform Documentation (AMD64)</li> <li>Device Quirks</li> <li>Panel Rotation</li> </ul>"},{"location":"devices/ayaneo/air/","title":"AYANEO Air / Air Pro","text":""},{"location":"devices/ayaneo/air/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface Air Amd Ryzen 5 5560U (x86_64) Mainline Linux Radeonsi Weston + Emulation Station Air Pro Amd Ryzen 5 5560U (x86_64) Mainline Linux Radeonsi Weston + Emulation Station Air Pro AMD Ryzen 7 5825U (x86_64) Mainline Linux Radeonsi Weston + Emulation Station"},{"location":"devices/ayaneo/air/#features","title":"Features","text":"Feature\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Notes  Storage JELOS can be run from an SD Card, USB Drive or installed directly to the internal NVME.  When installed directly to the NVME; an SD Card can be used for game storage.  Wifi Can be turned on in Emulation Station under Main Menu &gt; Network Settings  Bluetooth Supports bluetooth audio and controllers  Fan Can be set globally, per system or per game.  TPD Limit Can be set globally, per system or per game.  Rumble Enables the device rumble motor in emulators that support it.  RGB Supports selecting from a set of colors and brightness levels or turning the RGB off (choice persists through reboots)  Does not support other effects."},{"location":"devices/ayaneo/air/#notes","title":"Notes","text":"DMI_SYS_VENDOR DMI_PRODUCT_NAME <code>AYANEO</code> <code>AIR</code> <code>AYANEO</code> <code>AIR Pro</code>"},{"location":"devices/ayaneo/air/#installation","title":"Installation","text":"<p>Download the latest <code>AMD64</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/ayaneo/air/#booting-from-an-sd-card","title":"Booting from an SD Card","text":"<p>To boot JELOS from the SD Card, hold LC+Volume Up and press the Power button, continue holding LC+Volume Up until the Ayaneo logo appears.  Select the storage device with JELOS from the boot menu using the Ayaneo button, and then press volume up to boot the distribution.</p>"},{"location":"devices/ayaneo/air/#changing-the-rgb","title":"Changing the RGB","text":"<p>In EmulationStation press the Start button to open the Main Menu.  Then select <code>System Settings</code> and scroll until you see <code>Device LEDS</code>.  Under that setting you can choose to turn RGB Off or select from a set of pre-defined colors.  The value you set will persist through all future reboots but note your RGB setting will only take effect after JELOS boots.</p>"},{"location":"devices/ayaneo/air/#controls","title":"Controls","text":""},{"location":"devices/ayaneo/air/#evtest-output","title":"<code>evtest</code> Output","text":"Main Controls /dev/input/event6: Microsoft X-Box 360 pad<pre><code>Input driver version is 1.0.1\nInput device ID: bus 0x3 vendor 0x45e product 0x28e version 0x110\nInput device name: \"Microsoft X-Box 360 pad\"\nSupported events:\n  Event type 0 (EV_SYN)\n  Event type 1 (EV_KEY)\n    Event code 304 (BTN_SOUTH)\n    Event code 305 (BTN_EAST)\n    Event code 307 (BTN_NORTH)\n    Event code 308 (BTN_WEST)\n    Event code 310 (BTN_TL)\n    Event code 311 (BTN_TR)\n    Event code 314 (BTN_SELECT)\n    Event code 315 (BTN_START)\n    Event code 316 (BTN_MODE)\n    Event code 317 (BTN_THUMBL)\n    Event code 318 (BTN_THUMBR)\n  Event type 3 (EV_ABS)\n    Event code 0 (ABS_X)\n      Value      0\n      Min   -32768\n      Max    32767\n      Fuzz      16\n      Flat     128\n    Event code 1 (ABS_Y)\n      Value      0\n      Min   -32768\n      Max    32767\n      Fuzz      16\n      Flat     128\n    Event code 2 (ABS_Z)\n      Value      0\n      Min        0\n      Max      255\n    Event code 3 (ABS_RX)\n      Value      0\n      Min   -32768\n      Max    32767\n      Fuzz      16\n      Flat     128\n    Event code 4 (ABS_RY)\n      Value     -1\n      Min   -32768\n      Max    32767\n      Fuzz      16\n      Flat     128\n    Event code 5 (ABS_RZ)\n      Value      0\n      Min        0\n      Max      255\n    Event code 16 (ABS_HAT0X)\n      Value      0\n      Min       -1\n      Max        1\n    Event code 17 (ABS_HAT0Y)\n      Value      0\n      Min       -1\n      Max        1\n  Event type 21 (EV_FF)\n    Event code 80 (FF_RUMBLE)\n    Event code 81 (FF_PERIODIC)\n    Event code 88 (FF_SQUARE)\n    Event code 89 (FF_TRIANGLE)\n    Event code 90 (FF_SINE)\n    Event code 96 (FF_GAIN)\n</code></pre> AYA Button /dev/input/event4: AT Translated Set 2 keyboard<pre><code>Event: time 1695145934.368865, type 4 (EV_MSC), code 4 (MSC_SCAN), value 9d\nEvent: time 1695145934.368865, type 1 (EV_KEY), code 97 (KEY_RIGHTCTRL), value 1\nEvent: time 1695145934.368865, -------------- SYN_REPORT ------------\nEvent: time 1695145934.374867, type 4 (EV_MSC), code 4 (MSC_SCAN), value db\nEvent: time 1695145934.374867, type 1 (EV_KEY), code 125 (KEY_LEFTMETA), value 1\nEvent: time 1695145934.374867, -------------- SYN_REPORT ------------\nEvent: time 1695145934.377854, type 4 (EV_MSC), code 4 (MSC_SCAN), value 58\nEvent: time 1695145934.377854, type 1 (EV_KEY), code 88 (KEY_F12), value 1\n</code></pre> = Button /dev/input/event4: AT Translated Set 2 keyboard<pre><code>Event: time 1695146001.237895, type 4 (EV_MSC), code 4 (MSC_SCAN), value db\nEvent: time 1695146001.237895, type 1 (EV_KEY), code 125 (KEY_LEFTMETA), value 1\nEvent: time 1695146001.237895, -------------- SYN_REPORT ------------\nEvent: time 1695146001.241670, type 4 (EV_MSC), code 4 (MSC_SCAN), value 20\nEvent: time 1695146001.241670, type 1 (EV_KEY), code 32 (KEY_D), value 1\n</code></pre> LC Button /dev/input/event4: AT Translated Set 2 keyboard<pre><code>Event: time 1695146086.777678, type 4 (EV_MSC), code 4 (MSC_SCAN), value 9d\nEvent: time 1695146086.777678, type 1 (EV_KEY), code 97 (KEY_RIGHTCTRL), value 1\nEvent: time 1695146086.777678, -------------- SYN_REPORT ------------\nEvent: time 1695146086.783607, type 4 (EV_MSC), code 4 (MSC_SCAN), value db\nEvent: time 1695146086.783607, type 1 (EV_KEY), code 125 (KEY_LEFTMETA), value 1\nEvent: time 1695146086.783607, -------------- SYN_REPORT ------------\nEvent: time 1695146086.786592, type 4 (EV_MSC), code 4 (MSC_SCAN), value 57\nEvent: time 1695146086.786592, type 1 (EV_KEY), code 87 (KEY_F11), value 1\n</code></pre> RC Button /dev/input/event4: AT Translated Set 2 keyboard<pre><code>Event: time 1695146121.656854, type 4 (EV_MSC), code 4 (MSC_SCAN), value 9d\nEvent: time 1695146121.656854, type 1 (EV_KEY), code 97 (KEY_RIGHTCTRL), value 1\nEvent: time 1695146121.656854, -------------- SYN_REPORT ------------\nEvent: time 1695146121.663265, type 4 (EV_MSC), code 4 (MSC_SCAN), value db\nEvent: time 1695146121.663265, type 1 (EV_KEY), code 125 (KEY_LEFTMETA), value 1\nEvent: time 1695146121.663265, -------------- SYN_REPORT ------------\nEvent: time 1695146121.665821, type 4 (EV_MSC), code 4 (MSC_SCAN), value 44\nEvent: time 1695146121.665821, type 1 (EV_KEY), code 68 (KEY_F10), value 1\n</code></pre>"},{"location":"devices/ayaneo/air/#additional-references","title":"Additional References","text":"<ul> <li>Platform Documentation (AMD64)</li> <li>Device Quirks</li> <li>Panel Rotation</li> </ul>"},{"location":"devices/ayaneo/ayaneo-2/","title":"AYANEO 2/2s","text":""},{"location":"devices/ayaneo/ayaneo-2/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface AYANEO 2 AMD 6800U / (x86_64) Mainline Linux Radeonsi Weston + Emulation Station AYANEO 2s AMD 7840u / (x86_64) Mainline Linux Radeonsi Weston + Emulation Station"},{"location":"devices/ayaneo/ayaneo-2/#features","title":"Features","text":"Feature\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Notes  Storage JELOS can be run from an SD Card, USB Drive or installed directly to the internal NVME.  When installed directly to the NVME; an SD Card can be used for game storage.  Wifi Can be turned on in Emulation Station under Main Menu &gt; Network Settings  Bluetooth Supports bluetooth audio and controllers  Fan Can be set globally, per system or per game.  TPD Limit Can be set globally, per system or per game.  Rumble Enables the device rumble motor in emulators that support it.  RGB Supports selecting from a set of colors and brightness levels or turning the RGB off (choice persists through reboots)  Does not support other effects."},{"location":"devices/ayaneo/ayaneo-2/#notes","title":"Notes","text":"DMI_SYS_VENDOR DMI_PRODUCT_NAME <code>AYANEO</code> <code>AYANEO 2</code> <code>AYANEO</code> <code>AYANEO 2S</code>"},{"location":"devices/ayaneo/ayaneo-2/#installation","title":"Installation","text":"<p>Download the latest <code>AMD64</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/ayaneo/ayaneo-2/#booting-from-an-sd-card","title":"Booting from an SD Card","text":"<p>To boot JELOS from the SD Card, hold LC+Volume Up and press the Power button, continue holding LC+Volume Up until the Ayaneo logo appears.  Select the storage device with JELOS from the boot menu using the Ayaneo button, and then press volume up to boot the distribution.</p>"},{"location":"devices/ayaneo/ayaneo-2/#additional-references","title":"Additional References","text":"<ul> <li>Platform Documentation (AMD64)</li> <li>Device Quirks (shares the same quirks as the AYANEO Air)</li> <li>Panel Rotation</li> </ul>"},{"location":"devices/ayn/loki-max/","title":"Loki Max","text":""},{"location":"devices/ayn/loki-max/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface Max Amd Ryzen 7 6800U / (x86_64) Mainline Linux Radeonsi Weston + Emulation Station"},{"location":"devices/ayn/loki-max/#features","title":"Features","text":"Feature\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Notes  Storage JELOS can be run from an SD Card, USB Drive or installed directly to the internal NVME.  When installed directly to the NVME; an SD Card can be used for game storage.  Wifi Can be turned on in Emulation Station under Main Menu &gt; Network Settings  Bluetooth Supports bluetooth audio and controllers  Fan Can be set globally, per system or per game.  TPD Limit Can be set globally, per system or per game.  Rumble Enables the device rumble motor in emulators that support it.  RGB Supports selecting from a set of colors and brightness levels or turning the RGB off (choice persists through reboots)  Does not support other effects."},{"location":"devices/ayn/loki-max/#controls","title":"Controls","text":""},{"location":"devices/ayn/loki-max/#retroarch-hotkeys","title":"RetroArch Hotkeys","text":"Button Combo Action SELECT+START <sup>(x2)</sup> Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+Y(NORTH) Open RA Menu SELECT+X(WEST) Show FPS SELECT+R2 Fast-Forward"},{"location":"devices/ayn/loki-max/#notes","title":"Notes:","text":"<ul> <li>By default JELOS will detect your controller and configure RetroArch hotkeys automatically. This is controlled by the \"AUTOCONFIGURE RETROARCH HOTKEYS\" option in the <code>Settings &gt; Controller &amp; Bluetooth</code> menu. While the option is enabled, RetroArch hotkeys will be overwritten by the above defaults each time RetroArch is launched. If this behavior is not desired that option can be disabled and your user-defined RetroArch hotkeys will be used instead.</li> </ul>"},{"location":"devices/ayn/loki-max/#mednafen-hotkeys","title":"Mednafen Hotkeys","text":"Button Combo Action SELECT+START <sup>(hold for 2sec)</sup> Quit Game SELECT+R1 Save State SELECT+L1 <sup>(hold for 2sec)</sup> Load State SELECT+X(WEST) Show FPS SELECT+R2 Fast-Forward THUMBR+L1 Select disc THUMBR+R1 Eject/Insert disc THUMBR+D-Pad Left Decrease save slot by 1 THUMBR+D-Pad Right Increase save slot by 1 THUMBR+L2 Configure buttons on virtual port 1"},{"location":"devices/ayn/loki-max/#notes_1","title":"Notes:","text":"<ul> <li>By default JELOS will expand the configuration file according to the first controller mednafen finds. This only happens when the config file doesn't exist (meaning the first time or if you manually delete it). After the initial expansion you are free to customize the controls.</li> </ul>"},{"location":"devices/ayn/loki-max/#dolphin-sa-gamecube","title":"Dolphin-SA (Gamecube)","text":"Button Combo Action SELECT+START Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+A(SOUTH) Screenshot SELECT+X(WEST) Change Internal Resolution SELECT+B(EAST) Change Aspect Ratio SELECT+Y(NORTH) Show FPS SELECT+D-Pad Up Increase current state slot SELECT+D-Pad Down Decrease current state slot SELECT+R2 Fast-Forward"},{"location":"devices/ayn/loki-max/#mupen64plus-sa-nintendo-64","title":"Mupen64Plus-SA (Nintendo 64)","text":"Button Combo Action START Start B(EAST) A X(WEST) B Right Analog Up C Up Right Analog Down C Down Right Analog Left C Left Right Analog Right C Right L2 Z L1 L R1 R SELECT+START Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+X(WEST) Take Screenshot SELECT+A(SOUTH) Reset Game"},{"location":"devices/ayn/loki-max/#notes_2","title":"Notes:","text":"<ul> <li>Z and L button assignment can be changed directly in EmulationStation<ul> <li>Highlight the game and press Y(NORTH)</li> <li>Select <code>ADVANCED GAME OPTIONS</code></li> <li>Set <code>EMULATOR</code> to <code>MUPEN64PLUSSA</code></li> <li>Then change <code>INPUT ONFIGURATION</code><ul> <li>Default: L1 = L, L2 = Z</li> <li>Z &amp; L SWAP: L1 = Z, L2 = L</li> </ul> </li> </ul> </li> <li>You can also create your own custom controller configuration and add it to <code>/storage/.configs/game/configs/mupen64plussa</code>.  Then update <code>INPUT CONFIGURATION</code> to <code>CUSTOM</code> following the same steps as above.</li> </ul>"},{"location":"devices/ayn/loki-max/#ppsspp-sa-psp","title":"PPSSPP-SA (PSP)","text":"Button Combo Action START Start SELECT Select A(SOUTH) Circle B(EAST) Cross X(NORTH) Triangle Y(WEST) Square L1 L R1 R R2 Save State L2 Load State R3 Open Menu"},{"location":"devices/ayn/loki-max/#pcsx2-sa-ps2","title":"PCSX2-SA (PS2)","text":"Button Combo Action SELECT+START Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+Y(NORTH) Open Menu SELECT+B(EAST) Take Screenshot SELECT+R2 Fast-Forward"},{"location":"devices/ayn/loki-max/#hypseus-singe-daphne","title":"Hypseus-singe (Daphne)","text":"Button Combo Action SELECT+START Quit Game SELECT Coin START Start A(SOUTH) Button 1 B(EAST) Button 2 Y(NORTH) Button 3"},{"location":"devices/ayn/loki-max/#notes_3","title":"Notes:","text":"<ul> <li>To add/change mapping you can edit <code>/storage/.config/game/configs/hypseus/hypinput.ini</code> under <code>[KEYBOARD]</code> section by changing third number for a function from <code>0</code> (disabled) to a corresponding joystick value.  You can identify joystick values by running <code>jstest /dev/input/js0</code> over ssh.</li> <li> <p>For example the following would assign <code>quit</code> to L1 and <code>pause</code> to R1</p> <pre><code>[KEYBOARD]\nKEY_QUIT = SDLK_ESCAPE 0 5\nKEY_PAUSE = SDLK_p 0 6\n</code></pre> </li> </ul>"},{"location":"devices/ayn/loki-max/#global-hotkeys","title":"Global Hotkeys","text":"Button Combo Action SELECT+Vol + Brightness Up SELECT+Vol - Brightness Down START+Vol + Battery Status START+Vol - WIFI Toggle"},{"location":"devices/ayn/loki-max/#hdmi-output","title":"HDMI Output","text":"<p>These instruction only work for aarm64 devices.  This is not implemented for x86_64 devices.</p> <p>Press L1 + START + SELECT while in EmulationStation to swtich between Screen and HDMI output. </p> <p>While this should work; it doesn't always result in the correct resolution. The best way to get consistent results is to turn off the device, plug in an HDMI cable and reboot.  </p> <p>\"Why doesn't hot-plugging just work?\"... Hot-plug HDMI switching is a fairly complex action to accomplish and not something we have implemented on any device.  If you are a developer and interested in helping to build this functionality please start here: Contribute</p>"},{"location":"devices/ayn/loki-max/#notes_4","title":"Notes","text":""},{"location":"devices/ayn/loki-max/#installation","title":"Installation","text":"<p>Download the latest <code>AMD64</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/ayn/loki-max/#booting-from-an-sd-card","title":"Booting from an SD Card","text":"<p>In order to launch JELOS from an SD card or a USB drive you will need to first change the boot order in the BIOS.  </p> <p>During boot you can enter the bios by either (1) holding the Home+LCC (Turbo) buttons that sit bellow the dpad and right analog stick OR (2) connecting an external keyboard and pressing the Del key.  </p> <p>In the bios; navigate to the <code>Boot</code> menu and then change the boot order to prioritize the SD card or USB Drive under <code>Boot Order Priorities</code>. Then go <code>Save &amp; Exit</code> and select the Save Changes and Exit option.  This change will persist through all reboots.  If you want to boot into Windows simply remove the SD Card or USB drive.</p>"},{"location":"devices/ayn/loki-max/#changing-the-rgb","title":"Changing the RGB","text":"<p>In EmulationStation press the Start button to open the Main Menu.  Then select <code>System Settings</code> and scroll until you see <code>Device LEDS</code>.  Under that setting you can choose to turn RGB Off or select from a set of pre-defined colors.  The value you set will persist through all future reboots but note your RGB setting will only take effect after JELOS boots.</p>"},{"location":"devices/ayn/loki-max/#development-notes","title":"Development Notes","text":""},{"location":"devices/ayn/loki-max/#dmi-info","title":"<code>DMI</code> Info","text":"DMI_SYS_VENDOR DMI_PRODUCT_NAME <code>ayn</code> <code>Loki Max</code>"},{"location":"devices/ayn/loki-max/#output-from-evtest","title":"Output from <code>evtest</code>","text":"Main Controls /dev/input/event4: Microsoft X-Box 360 pad<pre><code>Input driver version is 1.0.1\nInput device ID: bus 0x3 vendor 0x45e product 0x28e version 0x110\nInput device name: \"Microsoft X-Box 360 pad\"\nSupported events:\n  Event type 0 (EV_SYN)\n  Event type 1 (EV_KEY)\n    Event code 304 (BTN_SOUTH)\n    Event code 305 (BTN_EAST)\n    Event code 307 (BTN_NORTH)\n    Event code 308 (BTN_WEST)\n    Event code 310 (BTN_TL)\n    Event code 311 (BTN_TR)\n    Event code 314 (BTN_SELECT)\n    Event code 315 (BTN_START)\n    Event code 316 (BTN_MODE)\n    Event code 317 (BTN_THUMBL)\n    Event code 318 (BTN_THUMBR)\n  Event type 3 (EV_ABS)\n    Event code 0 (ABS_X)\n      Value      0\n      Min   -32768\n      Max    32767\n      Fuzz      16\n      Flat     128\n    Event code 1 (ABS_Y)\n      Value      0\n      Min   -32768\n      Max    32767\n      Fuzz      16\n      Flat     128\n    Event code 2 (ABS_Z)\n      Value      0\n      Min        0\n      Max      255\n    Event code 3 (ABS_RX)\n      Value      0\n      Min   -32768\n      Max    32767\n      Fuzz      16\n      Flat     128\n    Event code 4 (ABS_RY)\n      Value      0\n      Min   -32768\n      Max    32767\n      Fuzz      16\n      Flat     128\n    Event code 5 (ABS_RZ)\n      Value      0\n      Min        0\n      Max      255\n    Event code 16 (ABS_HAT0X)\n      Value      0\n      Min       -1\n      Max        1\n    Event code 17 (ABS_HAT0Y)\n      Value      0\n      Min       -1\n      Max        1\n  Event type 21 (EV_FF)\n    Event code 80 (FF_RUMBLE)\n    Event code 81 (FF_PERIODIC)\n    Event code 88 (FF_SQUARE)\n    Event code 89 (FF_TRIANGLE)\n    Event code 90 (FF_SINE)\n    Event code 96 (FF_GAIN)\n</code></pre> LCC (Turbo) Button /dev/input/event3: AT Translated Set 2 keyboard<pre><code>Event: time 1695144715.833103, type 4 (EV_MSC), code 4 (MSC_SCAN), value 1d\nEvent: time 1695144715.833103, type 1 (EV_KEY), code 29 (KEY_LEFTCTRL), value 1\nEvent: time 1695144715.835045, -------------- SYN_REPORT ------------\nEvent: time 1695144715.837953, type 4 (EV_MSC), code 4 (MSC_SCAN), value 38\nEvent: time 1695144715.837953, type 1 (EV_KEY), code 56 (KEY_LEFTALT), value 1\nEvent: time 1695144715.833103, -------------- SYN_REPORT ------------\nEvent: time 1695144715.835045, type 4 (EV_MSC), code 4 (MSC_SCAN), value 2a\nEvent: time 1695144715.835045, type 1 (EV_KEY), code 42 (KEY_LEFTSHIFT), value 1\nEvent: time 1695144715.837953, -------------- SYN_REPORT ------------\nEvent: time 1695144715.840035, type 4 (EV_MSC), code 4 (MSC_SCAN), value 14\nEvent: time 1695144715.840035, type 1 (EV_KEY), code 20 (KEY_T), value 1\n</code></pre>"},{"location":"devices/ayn/loki-max/#quirks","title":"Quirks","text":"<ul> <li>Device Quirks (shares the same quirks as the Loki Zero)</li> <li>Panel Rotation</li> </ul>"},{"location":"devices/ayn/loki-zero/","title":"Loki Zero","text":""},{"location":"devices/ayn/loki-zero/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface Loki Zero AMD Athlon Silver 3050e (x86_64) Mainline Linux Radeonsi Weston + Emulation Station"},{"location":"devices/ayn/loki-zero/#features","title":"Features","text":"Feature\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Notes  Storage JELOS can be run from an SD Card, USB Drive or installed directly to the internal NVME.  When installed directly to the NVME; an SD Card can be used for game storage.  Wifi Can be turned on in Emulation Station under Main Menu &gt; Network Settings  Bluetooth Supports bluetooth audio and controllers  Fan Can be set globally, per system or per game.  TPD Limit Can be set globally, per system or per game.  Rumble Enables the device rumble motor in emulators that support it.  RGB Supports selecting from a set of colors and brightness levels or turning the RGB off (choice persists through reboots)  Does not support other effects."},{"location":"devices/ayn/loki-zero/#controls","title":"Controls","text":""},{"location":"devices/ayn/loki-zero/#retroarch-hotkeys","title":"RetroArch Hotkeys","text":"Button Combo Action SELECT+START <sup>(x2)</sup> Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+Y(NORTH) Open RA Menu SELECT+X(WEST) Show FPS SELECT+R2 Fast-Forward"},{"location":"devices/ayn/loki-zero/#notes","title":"Notes:","text":"<ul> <li>By default JELOS will detect your controller and configure RetroArch hotkeys automatically. This is controlled by the \"AUTOCONFIGURE RETROARCH HOTKEYS\" option in the <code>Settings &gt; Controller &amp; Bluetooth</code> menu. While the option is enabled, RetroArch hotkeys will be overwritten by the above defaults each time RetroArch is launched. If this behavior is not desired that option can be disabled and your user-defined RetroArch hotkeys will be used instead.</li> </ul>"},{"location":"devices/ayn/loki-zero/#mednafen-hotkeys","title":"Mednafen Hotkeys","text":"Button Combo Action SELECT+START <sup>(hold for 2sec)</sup> Quit Game SELECT+R1 Save State SELECT+L1 <sup>(hold for 2sec)</sup> Load State SELECT+X(WEST) Show FPS SELECT+R2 Fast-Forward THUMBR+L1 Select disc THUMBR+R1 Eject/Insert disc THUMBR+D-Pad Left Decrease save slot by 1 THUMBR+D-Pad Right Increase save slot by 1 THUMBR+L2 Configure buttons on virtual port 1"},{"location":"devices/ayn/loki-zero/#notes_1","title":"Notes:","text":"<ul> <li>By default JELOS will expand the configuration file according to the first controller mednafen finds. This only happens when the config file doesn't exist (meaning the first time or if you manually delete it). After the initial expansion you are free to customize the controls.</li> </ul>"},{"location":"devices/ayn/loki-zero/#dolphin-sa-gamecube","title":"Dolphin-SA (Gamecube)","text":"Button Combo Action SELECT+START Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+A(SOUTH) Screenshot SELECT+X(WEST) Change Internal Resolution SELECT+B(EAST) Change Aspect Ratio SELECT+Y(NORTH) Show FPS SELECT+D-Pad Up Increase current state slot SELECT+D-Pad Down Decrease current state slot SELECT+R2 Fast-Forward"},{"location":"devices/ayn/loki-zero/#mupen64plus-sa-nintendo-64","title":"Mupen64Plus-SA (Nintendo 64)","text":"Button Combo Action START Start B(EAST) A X(WEST) B Right Analog Up C Up Right Analog Down C Down Right Analog Left C Left Right Analog Right C Right L2 Z L1 L R1 R SELECT+START Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+X(WEST) Take Screenshot SELECT+A(SOUTH) Reset Game"},{"location":"devices/ayn/loki-zero/#notes_2","title":"Notes:","text":"<ul> <li>Z and L button assignment can be changed directly in EmulationStation<ul> <li>Highlight the game and press Y(NORTH)</li> <li>Select <code>ADVANCED GAME OPTIONS</code></li> <li>Set <code>EMULATOR</code> to <code>MUPEN64PLUSSA</code></li> <li>Then change <code>INPUT ONFIGURATION</code><ul> <li>Default: L1 = L, L2 = Z</li> <li>Z &amp; L SWAP: L1 = Z, L2 = L</li> </ul> </li> </ul> </li> <li>You can also create your own custom controller configuration and add it to <code>/storage/.configs/game/configs/mupen64plussa</code>.  Then update <code>INPUT CONFIGURATION</code> to <code>CUSTOM</code> following the same steps as above.</li> </ul>"},{"location":"devices/ayn/loki-zero/#ppsspp-sa-psp","title":"PPSSPP-SA (PSP)","text":"Button Combo Action START Start SELECT Select A(SOUTH) Circle B(EAST) Cross X(NORTH) Triangle Y(WEST) Square L1 L R1 R R2 Save State L2 Load State R3 Open Menu"},{"location":"devices/ayn/loki-zero/#pcsx2-sa-ps2","title":"PCSX2-SA (PS2)","text":"Button Combo Action SELECT+START Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+Y(NORTH) Open Menu SELECT+B(EAST) Take Screenshot SELECT+R2 Fast-Forward"},{"location":"devices/ayn/loki-zero/#hypseus-singe-daphne","title":"Hypseus-singe (Daphne)","text":"Button Combo Action SELECT+START Quit Game SELECT Coin START Start A(SOUTH) Button 1 B(EAST) Button 2 Y(NORTH) Button 3"},{"location":"devices/ayn/loki-zero/#notes_3","title":"Notes:","text":"<ul> <li>To add/change mapping you can edit <code>/storage/.config/game/configs/hypseus/hypinput.ini</code> under <code>[KEYBOARD]</code> section by changing third number for a function from <code>0</code> (disabled) to a corresponding joystick value.  You can identify joystick values by running <code>jstest /dev/input/js0</code> over ssh.</li> <li> <p>For example the following would assign <code>quit</code> to L1 and <code>pause</code> to R1</p> <pre><code>[KEYBOARD]\nKEY_QUIT = SDLK_ESCAPE 0 5\nKEY_PAUSE = SDLK_p 0 6\n</code></pre> </li> </ul>"},{"location":"devices/ayn/loki-zero/#global-hotkeys","title":"Global Hotkeys","text":"Button Combo Action SELECT+Vol + Brightness Up SELECT+Vol - Brightness Down START+Vol + Battery Status START+Vol - WIFI Toggle"},{"location":"devices/ayn/loki-zero/#hdmi-output","title":"HDMI Output","text":"<p>These instruction only work for aarm64 devices.  This is not implemented for x86_64 devices.</p> <p>Press L1 + START + SELECT while in EmulationStation to swtich between Screen and HDMI output. </p> <p>While this should work; it doesn't always result in the correct resolution. The best way to get consistent results is to turn off the device, plug in an HDMI cable and reboot.  </p> <p>\"Why doesn't hot-plugging just work?\"... Hot-plug HDMI switching is a fairly complex action to accomplish and not something we have implemented on any device.  If you are a developer and interested in helping to build this functionality please start here: Contribute</p>"},{"location":"devices/ayn/loki-zero/#notes_4","title":"Notes","text":""},{"location":"devices/ayn/loki-zero/#installation","title":"Installation","text":"<p>Download the latest <code>AMD64</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/ayn/loki-zero/#booting-from-an-sd-card","title":"Booting from an SD Card","text":"<p>In order to launch JELOS from an SD card or a USB drive you will need to first change the boot order in the BIOS.  </p> <p>During boot you can enter the bios by either (1) holding the Home+LCC (Turbo) buttons that sit bellow the dpad and right analog stick OR (2) connecting an external keyboard and pressing the Del key.  </p> <p>In the bios; navigate to the <code>Boot</code> menu and then change the boot order to prioritize the SD card or USB Drive under <code>Boot Order Priorities</code>. Then go <code>Save &amp; Exit</code> and select the Save Changes and Exit option.  This change will persist through all reboots.  If you want to boot into Windows simply remove the SD Card or USB drive.</p>"},{"location":"devices/ayn/loki-zero/#video-walkthrough","title":"Video Walkthrough","text":""},{"location":"devices/ayn/loki-zero/#changing-the-rgb","title":"Changing the RGB","text":"<p>In EmulationStation press the Start button to open the Main Menu.  Then select <code>System Settings</code> and scroll until you see <code>Device LEDS</code>.  Under that setting you can choose to turn RGB Off or select from a set of pre-defined colors.  The value you set will persist through all future reboots but note your RGB setting will only take effect after JELOS boots.</p>"},{"location":"devices/ayn/loki-zero/#community-videos","title":"Community Videos","text":""},{"location":"devices/ayn/loki-zero/#development-notes","title":"Development Notes","text":""},{"location":"devices/ayn/loki-zero/#dmi-info","title":"<code>DMI</code> Info","text":"DMI_SYS_VENDOR DMI_PRODUCT_NAME <code>ayn</code> <code>Loki Zero</code>"},{"location":"devices/ayn/loki-zero/#output-from-evtest","title":"Output from <code>evtest</code>","text":"Main Controls /dev/input/event5: Microsoft X-Box 360 pad<pre><code>Input driver version is 1.0.1\nInput device ID: bus 0x3 vendor 0x45e product 0x28e version 0x110\nInput device name: \"Microsoft X-Box 360 pad\"\nSupported events:\n  Event type 0 (EV_SYN)\n  Event type 1 (EV_KEY)\n    Event code 304 (BTN_SOUTH)\n    Event code 305 (BTN_EAST)\n    Event code 307 (BTN_NORTH)\n    Event code 308 (BTN_WEST)\n    Event code 310 (BTN_TL)\n    Event code 311 (BTN_TR)\n    Event code 314 (BTN_SELECT)\n    Event code 315 (BTN_START)\n    Event code 316 (BTN_MODE)\n    Event code 317 (BTN_THUMBL)\n    Event code 318 (BTN_THUMBR)\n  Event type 3 (EV_ABS)\n    Event code 0 (ABS_X)\n      Value      0\n      Min   -32768\n      Max    32767\n      Fuzz      16\n      Flat     128\n    Event code 1 (ABS_Y)\n      Value     -1\n      Min   -32768\n      Max    32767\n      Fuzz      16\n      Flat     128\n    Event code 2 (ABS_Z)\n      Value      0\n      Min        0\n      Max      255\n    Event code 3 (ABS_RX)\n      Value      0\n      Min   -32768\n      Max    32767\n      Fuzz      16\n      Flat     128\n    Event code 4 (ABS_RY)\n      Value     -1\n      Min   -32768\n      Max    32767\n      Fuzz      16\n      Flat     128\n    Event code 5 (ABS_RZ)\n      Value      0\n      Min        0\n      Max      255\n    Event code 16 (ABS_HAT0X)\n      Value      0\n      Min       -1\n      Max        1\n    Event code 17 (ABS_HAT0Y)\n      Value      0\n      Min       -1\n      Max        1\n  Event type 21 (EV_FF)\n    Event code 80 (FF_RUMBLE)\n    Event code 81 (FF_PERIODIC)\n    Event code 88 (FF_SQUARE)\n    Event code 89 (FF_TRIANGLE)\n    Event code 90 (FF_SINE)\n    Event code 96 (FF_GAIN)\n</code></pre> LCC (Turbo) Button /dev/input/event3: AT Translated Set 2 keyboard<pre><code>Event: time 1695132759.592781, type 4 (EV_MSC), code 4 (MSC_SCAN), value 1d\nEvent: time 1695132759.592781, type 1 (EV_KEY), code 29 (KEY_LEFTCTRL), value 1\nEvent: time 1695132759.592781, -------------- SYN_REPORT ------------\nEvent: time 1695132759.594824, type 4 (EV_MSC), code 4 (MSC_SCAN), value 38\nEvent: time 1695132759.594824, type 1 (EV_KEY), code 56 (KEY_LEFTALT), value 1\nEvent: time 1695132759.594824, -------------- SYN_REPORT ------------\nEvent: time 1695132759.597498, type 4 (EV_MSC), code 4 (MSC_SCAN), value 2a\nEvent: time 1695132759.597498, type 1 (EV_KEY), code 42 (KEY_LEFTSHIFT), value 1\nEvent: time 1695132759.597498, -------------- SYN_REPORT ------------\nEvent: time 1695132759.599549, type 4 (EV_MSC), code 4 (MSC_SCAN), value 14\nEvent: time 1695132759.599549, type 1 (EV_KEY), code 20 (KEY_T), value 1\n</code></pre>"},{"location":"devices/ayn/loki-zero/#quirks","title":"Quirks","text":"<ul> <li>Device Quirks</li> <li>Panel Rotation</li> </ul>"},{"location":"devices/gpd/win-max-2/","title":"GPDWin Max 2","text":""},{"location":"devices/gpd/win-max-2/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface Win Max 2 Amd Ryzen 7 6800U / (x86_64) Mainline Linux Radeonsi Weston + Emulation Station"},{"location":"devices/gpd/win-max-2/#notes","title":"Notes","text":"DMI_SYS_VENDOR DMI_PRODUCT_NAME <code>GPD</code> <code>GPD G1619-04</code>"},{"location":"devices/gpd/win-max-2/#installation","title":"Installation","text":"<p>Download the latest <code>AMD64</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/gpd/win-max-2/#additional-references","title":"Additional References","text":"<ul> <li>Platform Documentation (AMD64)</li> <li>Device Quirks</li> <li>Panel Rotation</li> </ul>"},{"location":"devices/gpd/win4/","title":"GPDWin 4","text":""},{"location":"devices/gpd/win4/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface Win 4 Amd Ryzen 7 6800U / (x86_64) Mainline Linux Radeonsi Weston + Emulation Station"},{"location":"devices/gpd/win4/#features","title":"Features","text":"Feature\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Notes  Storage JELOS can be run from an SD Card, USB Drive or installed directly to the internal NVME.  When installed directly to the NVME; an SD Card can be used for game storage.  Wifi Can be turned on in Emulation Station under Main Menu &gt; Network  Bluetooth Supports bluetooth audio and controllers  Fan Can be set globally, per system or per game.  TPD Limit Can be set globally, per system or per game.  Rumble Enables the device rumble motor in emulators that support it."},{"location":"devices/gpd/win4/#notes","title":"Notes","text":""},{"location":"devices/gpd/win4/#installation","title":"Installation","text":"<p>Download the latest <code>AMD64</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/gpd/win4/#booting-from-an-sd-card","title":"Booting from an SD Card","text":"<p>In order to launch JELOS from an SD card or a USB drive you will need to first change the boot order in the BIOS.  </p> <p>During boot you can enter the bios by either pressing the <code>del</code> key on the built-in keyboard.  </p> <p>In the bios; navigate to the <code>Boot</code> menu and then change the boot order to prioritize the SD card under <code>Boot Order Priorities</code>. Then go <code>Save &amp; Exit</code> and select the Save Changes and Exit option.  This change will persist through all reboots.  If you want to boot into Windows simply remove the SD Card or USB drive.</p>"},{"location":"devices/gpd/win4/#additional-references","title":"Additional References","text":"<ul> <li>Platform Documentation (AMD64)</li> <li>Panel Rotation</li> </ul>"},{"location":"devices/hardkernel/odroid-go-advance/","title":"Odroid Go Advance","text":""},{"location":"devices/hardkernel/odroid-go-advance/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface Odroid Go Advance Rockchip RK3326 (ARM) Mainline Linux Panfrost Weston + Emulation Station"},{"location":"devices/hardkernel/odroid-go-advance/#notes","title":"Notes","text":""},{"location":"devices/hardkernel/odroid-go-advance/#installation","title":"Installation","text":"<p>Download the latest <code>RK3326</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/hardkernel/odroid-go-advance/#analogue-stick","title":"Analogue Stick","text":"<p>There are several parameters available for the analogue stick in the odroidgo2_joypad driver. These can be used to work around stick drift, or a disconnected stick, perhaps due to a broken connector on the mainboard (which causes stick input to the right to permanently register).</p> Parameter Notes joystick_fuzz 0 - 1800, used to filter noise from the event stream joystick_flat 0 - 1800 joystick_y_range 0 - 1800 joystick_x_range 0 - 1800 joystick_scale joystick_deadzone 0 - 1800 <p>To override a parameter value, modify bootargs in boot.ini. For example to disable the analogue stick input, modify boot.ini to use the following values as per this Odroid forum post: <pre><code>setenv joystick_fuzz \"1800\"\nsetenv joystick_flat \"1800\"\nsetenv joystick_y_range \"1800\"\nsetenv joystick_x_range \"1800\"\nsetenv joystick_scale \"2\"\nsetenv joystick_deadzone \"1800\"\nsetenv joystick_config \"button-adc-x-range=${joystick_x_range} button-adc-y-range=${joystick_y_range} button-adc-fuzz=${joystick_fuzz} button-adc-flat=${joystick_flat} button-adc-scale=${joystick_scale} button-adc-deadzone=${joystick_deadzone}\"\n\nsetenv bootargs \"&lt;snip - existing bootargs&gt; ${joystick_config}\"\n</code></pre></p>"},{"location":"devices/hardkernel/odroid-go-advance/#additional-references","title":"Additional References","text":"<ul> <li>Platform Documentation (RK3326)</li> </ul>"},{"location":"devices/hardkernel/odroid-go-super/","title":"Odroid Go Super","text":""},{"location":"devices/hardkernel/odroid-go-super/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface Odroid Go Super Rockchip RK3326 (ARM) Mainline Linux Panfrost Weston + Emulation Station"},{"location":"devices/hardkernel/odroid-go-super/#notes","title":"Notes","text":""},{"location":"devices/hardkernel/odroid-go-super/#installation","title":"Installation","text":"<p>Download the latest <code>RK3326</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/hardkernel/odroid-go-super/#additional-references","title":"Additional References","text":"<ul> <li>Platform Documentation (RK3326)</li> </ul>"},{"location":"devices/hardkernel/odroid-go-ultra/","title":"Odroid Go Ultra","text":""},{"location":"devices/hardkernel/odroid-go-ultra/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface Odroid Go Ultra Amlogic S922X / Mali G52 M6 (ARMv8-A) Mainline Linux Mali Weston + Emulation Station"},{"location":"devices/hardkernel/odroid-go-ultra/#features","title":"Features","text":"Feature\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Notes  Storage We recommend installing JELOS directly to the internal EMMC for faster boot and snappier performance.  When installed directly to the EMMC a microSD Card can be used for game storage.  Alternatively JELOS may also be installed to a microSD card, which will then also be used for game storage."},{"location":"devices/hardkernel/odroid-go-ultra/#controls","title":"Controls","text":""},{"location":"devices/hardkernel/odroid-go-ultra/#retroarch-hotkeys","title":"RetroArch Hotkeys","text":"Button Combo Action SELECT+START <sup>(x2)</sup> Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+X(NORTH) Open RA Menu SELECT+Y(WEST) Show FPS SELECT+R2 Fast-Forward"},{"location":"devices/hardkernel/odroid-go-ultra/#notes","title":"Notes:","text":"<ul> <li>By default JELOS will detect your controller and configure RetroArch hotkeys automatically. This is controlled by the \"AUTOCONFIGURE RETROARCH HOTKEYS\" option in the <code>Settings &gt; Controller &amp; Bluetooth</code> menu. While the option is enabled, RetroArch hotkeys will be overwritten by the above defaults each time RetroArch is launched. If this behavior is not desired that option can be disabled and your user-defined RetroArch hotkeys will be used instead.</li> </ul>"},{"location":"devices/hardkernel/odroid-go-ultra/#aethersx2-ps2","title":"AetherSX2 (PS2)","text":"Button Combo Action F1+B(SOUTH) Quit Game F1+R1 Save State F1+L1 Load State F1+X(NORTH) Open Menu F1+Y(WEST) Cycle Aspect Ratio F1+A(EAST) Screenshot"},{"location":"devices/hardkernel/odroid-go-ultra/#citra-nintendo-3ds","title":"Citra (Nintendo 3DS)","text":"Button Combo Action F1+START Quit Game"},{"location":"devices/hardkernel/odroid-go-ultra/#drastic-nintendo-ds","title":"Drastic (Nintendo DS)","text":"Button Combo Action R2 Save State L2 Load State F1 Open Menu F2 Switch One Screen and Dual Screen Layout L3 Change Screen Layout/Swap Screens"},{"location":"devices/hardkernel/odroid-go-ultra/#dolphin-sa-gamecube","title":"Dolphin-SA (Gamecube)","text":"Button Combo Action F1+START Quit Game F1+R1 Save State F1+L1 Load State F1+B(SOUTH) Screenshot F1+Y(WEST) Change Internal Resolution F1+A(EAST) Change Aspect Ratio F1+X(NORTH) Show FPS F1+D-Pad Up Increase current state slot F1+D-Pad Down Decrease current state slot F1+R2 Fast-Forward"},{"location":"devices/hardkernel/odroid-go-ultra/#mupen64plus-sa-nintendo-64","title":"Mupen64Plus-SA (Nintendo 64)","text":"Button Combo Action START Start A(EAST) A Y(WEST) B Right Analog Up C Up Right Analog Down C Down Right Analog Left C Left Right Analog Right C Right L2 Z L1 L R1 R SELECT+START Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+Y(WEST) Take Screenshot SELECT+B(SOUTH) Reset Game"},{"location":"devices/hardkernel/odroid-go-ultra/#notes_1","title":"Notes:","text":"<ul> <li>Z and L button assignment can be changed directly in EmulationStation<ul> <li>Highlight the game and press X(NORTH)</li> <li>Select <code>ADVANCED GAME OPTIONS</code></li> <li>Set <code>EMULATOR</code> to <code>MUPEN64PLUSSA</code></li> <li>Then change <code>INPUT ONFIGURATION</code><ul> <li>Default: L1 = L, L2 = Z</li> <li>Z &amp; L SWAP: L1 = Z, L2 = L</li> </ul> </li> </ul> </li> <li>You can also create your own custom controller configuration and add it to <code>/storage/.configs/game/configs/mupen64plussa</code>.  Then update <code>INPUT CONFIGURATION</code> to <code>CUSTOM</code> following the same steps as above.</li> </ul>"},{"location":"devices/hardkernel/odroid-go-ultra/#ppsspp-sa-psp","title":"PPSSPP-SA (PSP)","text":"Button Combo Action START Start SELECT Select A(SOUTH) Circle B(EAST) Cross X(NORTH) Triangle Y(WEST) Square L1 L R1 R R2 Save State L2 Load State F1 Open Menu"},{"location":"devices/hardkernel/odroid-go-ultra/#yabasanshiro-sega-saturn","title":"Yabasanshiro (Sega Saturn)","text":"Button Combo Action START Start SELECT Open Menu Y(WEST) A A(EAST) B B(SOUTH) C X(NORTH) X L1 Y R1 Z L2 L R2 R START+SELECT+R1 Quit Game"},{"location":"devices/hardkernel/odroid-go-ultra/#hypseus-singe-daphne","title":"Hypseus-singe (Daphne)","text":"Button Combo Action SELECT+START Quit Game SELECT Coin START Start B(SOUTH) Button 1 A(EAST) Button 2 X(NORTH) Button 3"},{"location":"devices/hardkernel/odroid-go-ultra/#notes_2","title":"Notes:","text":"<ul> <li>To add/change mapping you can edit <code>/storage/.config/game/configs/hypseus/hypinput.ini</code> under <code>[KEYBOARD]</code> section by changing third number for a function from <code>0</code> (disabled) to a corresponding joystick value.  You can identify joystick values by running <code>jstest /dev/input/js0</code> over ssh.</li> <li> <p>For example the following would assign <code>quit</code> to L1 and <code>pause</code> to R1</p> <pre><code>[KEYBOARD]\nKEY_QUIT = SDLK_ESCAPE 0 5\nKEY_PAUSE = SDLK_p 0 6\n</code></pre> </li> </ul>"},{"location":"devices/hardkernel/odroid-go-ultra/#open-beats-of-rage-openbor","title":"Open Beats of Rage (OpenBOR)","text":"Button Combo Action START Confirm SELECT Cancel B(SOUTH) Attack 1 A(EAST) Jump X(NORTH) Attack 2 Y(WEST) Special <p>note: pressing A on title screen will exit</p>"},{"location":"devices/hardkernel/odroid-go-ultra/#vice-commodore-64","title":"Vice (Commodore 64)","text":"Button Combo Action START Open Menu SELECT Display Keyboard B(SOUTH) Back A(EAST) Fire / Confirm L1 Back L2 Assign Hotkey L3 Fire (Joy 2) R1 Confirm R2 Swap Joystick Port"},{"location":"devices/hardkernel/odroid-go-ultra/#additional-notes","title":"Additional Notes:","text":"<p>Games will require keyboard key presses to progress through messages and to launch  (e.g. SPACE, RSTR [run/start], F3, F7). </p> <p>SELECT to show onscreen keyboard, left analog/d-pad to move cursor, B to confirm </p> <p>C= on keyboard resets the machine</p> <p>L2 to assign highlighted key or menu function to gamepad button (save config to retain)</p> <p>To cancel onscreen keyboard, move cursor to blank area and A/L1 to close keyboard or click on X in top left corner of keyboard</p> <p>Joystick can be assigned to port 1 or 2. R2 to switch ports. port 1: [left analog] + [B = fire] port 2: [right analog] + [L3 = fire].</p> <p>To quit emulator, START, highlight Exit Emulator, B to confirm</p>"},{"location":"devices/hardkernel/odroid-go-ultra/#global-hotkeys","title":"Global Hotkeys","text":"Button Combo Action F1+Vol + Brightness Up F1+Vol - Brightness Down F2+Vol + Battery Status F2+Vol - WIFI Toggle"},{"location":"devices/hardkernel/odroid-go-ultra/#hdmi-output","title":"HDMI Output","text":"<p>These instruction only work for aarm64 devices.  This is not implemented for x86_64 devices.</p> <p>Press L1 + START + SELECT while in EmulationStation to swtich between Screen and HDMI output. </p> <p>While this should work; it doesn't always result in the correct resolution. The best way to get consistent results is to turn off the device, plug in an HDMI cable and reboot.  </p> <p>\"Why doesn't hot-plugging just work?\"... Hot-plug HDMI switching is a fairly complex action to accomplish and not something we have implemented on any device.  If you are a developer and interested in helping to build this functionality please start here: Contribute</p>"},{"location":"devices/hardkernel/odroid-go-ultra/#notes_3","title":"Notes","text":""},{"location":"devices/hardkernel/odroid-go-ultra/#installation","title":"Installation","text":"<p>First download the latest <code>S922X-Odroid_GOU</code> version of JELOS from the button below.</p> <p> </p> <p>There are 2 options for installing JELOS on the Odroid Go Ultra.</p>"},{"location":"devices/hardkernel/odroid-go-ultra/#option-1-install-jelos-to-emmc-recommended","title":"Option 1 - Install JELOS to EMMC - RECOMMENDED","text":"<p>This is the recomended option as it boots faster, has snappier performance, makes the most of available storage and allows separation of the operating system (on EMMC) and game storage (on microSD).</p> <p>Installation process:</p> <ol> <li>Boot the Odroid Go Ultra into recovery mode following the steps on the Odroid wiki.</li> <li>Once booted into recovery mode and connected to a PC via USB-C, the JELOS image may be flashed to the EMMC using Balena Etcher, win32diskimager, dd or similar.</li> <li>Restart the device and JELOS will go through its first boot process (running from EMMC).</li> </ol>"},{"location":"devices/hardkernel/odroid-go-ultra/#option-2-zero-fill-emmc-and-install-jelos-to-microsd","title":"Option 2 - Zero-fill EMMC and install JELOS to microSD","text":"<p>This option has some compromises, but can come in handy if you would like to run different versions of JELOS installed to different microSD cards.</p> <p>Installation process:</p> <ol> <li>Boot the Odroid Go Ultra into recovery mode following the steps on the Odroid wiki.</li> <li>Once booted into recovery mode and connected to a PC via USB-C, zero-fill the EMMC. For example using dd, <code>dd if=/dev/zero of=/dev/&lt;emmc_device_node&gt; bs=1M</code>.</li> <li>Attach the microSD card to your PC using a card reader, and write the JELOS image to a microSD card using dd or similar.</li> <li>Power off the device, insert the JELOS microSD card, power on the device and JELOS will go through its first boot process (running from microSD).</li> </ol>"},{"location":"devices/hardkernel/odroid-go-ultra/#troubleshooting","title":"Troubleshooting","text":"<p>You cannot brick this device. If you cannot get into recovery mode, do the following:</p> <ul> <li>Download this recovery image.</li> <li>Follow the recovery steps on the Odroid wiki</li> </ul> <p>The device should now be in recovery mode, ready to flash JELOS (or other firmware) to the device.</p>"},{"location":"devices/hardkernel/odroid-go-ultra/#additional-references","title":"Additional References","text":"<ul> <li>Platform Documentation (S922X)</li> <li>Odroid Go Ultra wiki</li> </ul>"},{"location":"devices/hardkernel/odroid-n2/","title":"Odroid N2/N2+/N2L","text":""},{"location":"devices/hardkernel/odroid-n2/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface N2 Amlogic S922X / Mali G52 M6 (ARMv8-A) Mainline Linux Mali Weston + Emulation Station N2+ Amlogic S922X / Mali G52 M6 (ARMv8-A) Mainline Linux Mali Weston + Emulation Station N2L Amlogic S922X / Mali G52 M6 (ARMv8-A) Mainline Linux Mali Weston + Emulation Station"},{"location":"devices/hardkernel/odroid-n2/#notes","title":"Notes","text":""},{"location":"devices/hardkernel/odroid-n2/#installation","title":"Installation","text":"<p>Download the latest <code>S922X-Odroid_N2</code> version of JELOS for N2/N2+ or <code>S922X-Odroid_N2L</code> for N2L from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/hardkernel/odroid-n2/#additional-references","title":"Additional References","text":"<ul> <li>Platform Documentation (S922X)</li> </ul>"},{"location":"devices/indiedroid/nova/","title":"Indiedroid Nova","text":""},{"location":"devices/indiedroid/nova/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface Nova Rockchip RK3588S / Mali G610 (ARMv8-A) Rockchip 5.10 BSP Linux Panfrost Weston + Emulation Station"},{"location":"devices/indiedroid/nova/#notes","title":"Notes","text":""},{"location":"devices/indiedroid/nova/#installation","title":"Installation","text":"<p>Download the latest <code>RK3588</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/indiedroid/nova/#additional-references","title":"Additional References","text":"<ul> <li>Platform Documentation (RK3588)</li> </ul>"},{"location":"devices/orange-pi/orange-pi-5/","title":"Orange Pi 5","text":""},{"location":"devices/orange-pi/orange-pi-5/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface Orange Pi 5 Rockchip RK3588S / Mali G610 (ARMv8-A) Rockchip 5.10 BSP Linux Panfrost Weston + Emulation Station"},{"location":"devices/orange-pi/orange-pi-5/#notes","title":"Notes","text":""},{"location":"devices/orange-pi/orange-pi-5/#installation","title":"Installation","text":"<p>Download the latest <code>RK3588</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/orange-pi/orange-pi-5/#additional-references","title":"Additional References","text":"<ul> <li>Platform Documentation (RK3588)</li> </ul>"},{"location":"devices/orange-pi/orange-pi-5/#community-videos","title":"Community Videos","text":""},{"location":"devices/powkiddy/rgb10-max-3-pro/","title":"Powkiddy RGB10 Max 3 Pro","text":""},{"location":"devices/powkiddy/rgb10-max-3-pro/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface RGB10 Max 3 Pro Amlogic A311D / Mali G52 M4 (ARMv8-A) Mainline Linux Mali Weston + Emulation Station"},{"location":"devices/powkiddy/rgb10-max-3-pro/#features","title":"Features","text":"Feature\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Notes  Storage JELOS should be installed directly to the internal EMMC.  When installed directly to the EMMC; an SD Card can be used for game storage.  Wifi Can be turned on in Emulation Station under Main Menu &gt; Network Settings  Bluetooth Supports bluetooth audio and controllers"},{"location":"devices/powkiddy/rgb10-max-3-pro/#controls","title":"Controls","text":""},{"location":"devices/powkiddy/rgb10-max-3-pro/#retroarch-hotkeys","title":"RetroArch Hotkeys","text":"Button Combo Action SELECT+START <sup>(x2)</sup> Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+X(NORTH) Open RA Menu SELECT+Y(WEST) Show FPS SELECT+R2 Fast-Forward"},{"location":"devices/powkiddy/rgb10-max-3-pro/#notes","title":"Notes:","text":"<ul> <li>By default JELOS will detect your controller and configure RetroArch hotkeys automatically. This is controlled by the \"AUTOCONFIGURE RETROARCH HOTKEYS\" option in the <code>Settings &gt; Controller &amp; Bluetooth</code> menu. While the option is enabled, RetroArch hotkeys will be overwritten by the above defaults each time RetroArch is launched. If this behavior is not desired that option can be disabled and your user-defined RetroArch hotkeys will be used instead.</li> </ul>"},{"location":"devices/powkiddy/rgb10-max-3-pro/#aethersx2-ps2","title":"AetherSX2 (PS2)","text":"Button Combo Action F1+B(SOUTH) Quit Game F1+R1 Save State F1+L1 Load State F1+X(NORTH) Open Menu F1+Y(WEST) Cycle Aspect Ratio F1+A(EAST) Screenshot"},{"location":"devices/powkiddy/rgb10-max-3-pro/#citra-nintendo-3ds","title":"Citra (Nintendo 3DS)","text":"Button Combo Action F1+START Quit Game"},{"location":"devices/powkiddy/rgb10-max-3-pro/#drastic-nintendo-ds","title":"Drastic (Nintendo DS)","text":"Button Combo Action R2 Save State L2 Load State F1 Open Menu F2 Switch One Screen and Dual Screen Layout L3 Change Screen Layout/Swap Screens"},{"location":"devices/powkiddy/rgb10-max-3-pro/#dolphin-sa-gamecube","title":"Dolphin-SA (Gamecube)","text":"Button Combo Action F1+START Quit Game F1+R1 Save State F1+L1 Load State F1+B(SOUTH) Screenshot F1+Y(WEST) Change Internal Resolution F1+A(EAST) Change Aspect Ratio F1+X(NORTH) Show FPS F1+D-Pad Up Increase current state slot F1+D-Pad Down Decrease current state slot F1+R2 Fast-Forward"},{"location":"devices/powkiddy/rgb10-max-3-pro/#mupen64plus-sa-nintendo-64","title":"Mupen64Plus-SA (Nintendo 64)","text":"Button Combo Action START Start A(EAST) A Y(WEST) B Right Analog Up C Up Right Analog Down C Down Right Analog Left C Left Right Analog Right C Right L2 Z L1 L R1 R SELECT+START Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+Y(WEST) Take Screenshot SELECT+B(SOUTH) Reset Game"},{"location":"devices/powkiddy/rgb10-max-3-pro/#notes_1","title":"Notes:","text":"<ul> <li>Z and L button assignment can be changed directly in EmulationStation<ul> <li>Highlight the game and press X(NORTH)</li> <li>Select <code>ADVANCED GAME OPTIONS</code></li> <li>Set <code>EMULATOR</code> to <code>MUPEN64PLUSSA</code></li> <li>Then change <code>INPUT ONFIGURATION</code><ul> <li>Default: L1 = L, L2 = Z</li> <li>Z &amp; L SWAP: L1 = Z, L2 = L</li> </ul> </li> </ul> </li> <li>You can also create your own custom controller configuration and add it to <code>/storage/.configs/game/configs/mupen64plussa</code>.  Then update <code>INPUT CONFIGURATION</code> to <code>CUSTOM</code> following the same steps as above.</li> </ul>"},{"location":"devices/powkiddy/rgb10-max-3-pro/#ppsspp-sa-psp","title":"PPSSPP-SA (PSP)","text":"Button Combo Action START Start SELECT Select A(SOUTH) Circle B(EAST) Cross X(NORTH) Triangle Y(WEST) Square L1 L R1 R R2 Save State L2 Load State F1 Open Menu"},{"location":"devices/powkiddy/rgb10-max-3-pro/#yabasanshiro-sega-saturn","title":"Yabasanshiro (Sega Saturn)","text":"Button Combo Action START Start SELECT Open Menu Y(WEST) A A(EAST) B B(SOUTH) C X(NORTH) X L1 Y R1 Z L2 L R2 R START+SELECT+R1 Quit Game"},{"location":"devices/powkiddy/rgb10-max-3-pro/#hypseus-singe-daphne","title":"Hypseus-singe (Daphne)","text":"Button Combo Action SELECT+START Quit Game SELECT Coin START Start B(SOUTH) Button 1 A(EAST) Button 2 X(NORTH) Button 3"},{"location":"devices/powkiddy/rgb10-max-3-pro/#notes_2","title":"Notes:","text":"<ul> <li>To add/change mapping you can edit <code>/storage/.config/game/configs/hypseus/hypinput.ini</code> under <code>[KEYBOARD]</code> section by changing third number for a function from <code>0</code> (disabled) to a corresponding joystick value.  You can identify joystick values by running <code>jstest /dev/input/js0</code> over ssh.</li> <li> <p>For example the following would assign <code>quit</code> to L1 and <code>pause</code> to R1</p> <pre><code>[KEYBOARD]\nKEY_QUIT = SDLK_ESCAPE 0 5\nKEY_PAUSE = SDLK_p 0 6\n</code></pre> </li> </ul>"},{"location":"devices/powkiddy/rgb10-max-3-pro/#open-beats-of-rage-openbor","title":"Open Beats of Rage (OpenBOR)","text":"Button Combo Action START Confirm SELECT Cancel B(SOUTH) Attack 1 A(EAST) Jump X(NORTH) Attack 2 Y(WEST) Special <p>note: pressing A on title screen will exit</p>"},{"location":"devices/powkiddy/rgb10-max-3-pro/#vice-commodore-64","title":"Vice (Commodore 64)","text":"Button Combo Action START Open Menu SELECT Display Keyboard B(SOUTH) Back A(EAST) Fire / Confirm L1 Back L2 Assign Hotkey L3 Fire (Joy 2) R1 Confirm R2 Swap Joystick Port"},{"location":"devices/powkiddy/rgb10-max-3-pro/#additional-notes","title":"Additional Notes:","text":"<p>Games will require keyboard key presses to progress through messages and to launch  (e.g. SPACE, RSTR [run/start], F3, F7). </p> <p>SELECT to show onscreen keyboard, left analog/d-pad to move cursor, B to confirm </p> <p>C= on keyboard resets the machine</p> <p>L2 to assign highlighted key or menu function to gamepad button (save config to retain)</p> <p>To cancel onscreen keyboard, move cursor to blank area and A/L1 to close keyboard or click on X in top left corner of keyboard</p> <p>Joystick can be assigned to port 1 or 2. R2 to switch ports. port 1: [left analog] + [B = fire] port 2: [right analog] + [L3 = fire].</p> <p>To quit emulator, START, highlight Exit Emulator, B to confirm</p>"},{"location":"devices/powkiddy/rgb10-max-3-pro/#global-hotkeys","title":"Global Hotkeys","text":"Button Combo Action F1+Vol + Brightness Up F1+Vol - Brightness Down F2+Vol + Battery Status F2+Vol - WIFI Toggle"},{"location":"devices/powkiddy/rgb10-max-3-pro/#hdmi-output","title":"HDMI Output","text":"<p>These instruction only work for aarm64 devices.  This is not implemented for x86_64 devices.</p> <p>Press L1 + START + SELECT while in EmulationStation to swtich between Screen and HDMI output. </p> <p>While this should work; it doesn't always result in the correct resolution. The best way to get consistent results is to turn off the device, plug in an HDMI cable and reboot.  </p> <p>\"Why doesn't hot-plugging just work?\"... Hot-plug HDMI switching is a fairly complex action to accomplish and not something we have implemented on any device.  If you are a developer and interested in helping to build this functionality please start here: Contribute</p>"},{"location":"devices/powkiddy/rgb10-max-3-pro/#emulators","title":"Emulators","text":"<ul> <li>Platform Documentation (S922X)</li> </ul>"},{"location":"devices/powkiddy/rgb10-max-3-pro/#notes_3","title":"Notes","text":""},{"location":"devices/powkiddy/rgb10-max-3-pro/#installation","title":"Installation","text":"<p>Download the latest <code>S922X-Odroid_GOU</code> version of JELOS from the button below.</p> <p>JELOS must be flashed directly onto the RGB10 Max 3 Pro rather than an SD card.  This is done by putting the device into recovery mode, per the manual by holding down R2, L2, and power. A video demonstation is shown here.</p> <p> </p>"},{"location":"devices/powkiddy/rgb10-max-3-pro/#troubleshooting","title":"Troubleshooting","text":"<p>You cannot brick this device. If you cannot get into recovery mode, do the following:</p> <ul> <li>Download this recovery image.</li> <li>Flash the image to a spare microSD card using Balena Etcher or similar.</li> <li>Remove the back cover of the device (four screws).</li> <li>Locate a small button on the back of the board (the side that's visible), near the right thumbstick.</li> <li>While holding down the small button, power on the device.</li> </ul> <p>The device should now be in recovery mode, ready to flash JELOS (or other firmware) to the device.</p> <p>If you find yourself doing this often, consider drilling a pinhole in the back cover so that the button can be accessed with a paperclip.</p> <p></p>"},{"location":"devices/powkiddy/rgb10-max-3-pro/#community-videos","title":"Community Videos","text":""},{"location":"devices/powkiddy/rgb10-max-3/","title":"Powkiddy RGB10 Max 3","text":""},{"location":"devices/powkiddy/rgb10-max-3/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface RGB10 Max 3 Rockchip RK3566 (ARM) Rockchip BSP 4.19 Mali KMS/DRM + Emulation Station"},{"location":"devices/powkiddy/rgb10-max-3/#features","title":"Features","text":"Feature\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Notes  Storage JELOS can be run from an SD Card and an second SD card can be used to store games  Wifi Can be turned on in Emulation Station under Main Menu &gt; Network Settings  Bluetooth Supports bluetooth audio and controllers  LED Supports selecting from a set of colors or turning the power LED off (choice persists through reboots)  Does not support other effects."},{"location":"devices/powkiddy/rgb10-max-3/#controls","title":"Controls","text":""},{"location":"devices/powkiddy/rgb10-max-3/#retroarch-hotkeys","title":"RetroArch Hotkeys","text":"Button Combo Action SELECT+START <sup>(x2)</sup> Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+Y(NORTH) Open RA Menu SELECT+X(WEST) Show FPS SELECT+R2 Fast-Forward"},{"location":"devices/powkiddy/rgb10-max-3/#notes","title":"Notes:","text":"<ul> <li>By default JELOS will detect your controller and configure RetroArch hotkeys automatically. This is controlled by the \"AUTOCONFIGURE RETROARCH HOTKEYS\" option in the <code>Settings &gt; Controller &amp; Bluetooth</code> menu. While the option is enabled, RetroArch hotkeys will be overwritten by the above defaults each time RetroArch is launched. If this behavior is not desired that option can be disabled and your user-defined RetroArch hotkeys will be used instead.</li> </ul>"},{"location":"devices/powkiddy/rgb10-max-3/#mednafen-hotkeys","title":"Mednafen Hotkeys","text":"Button Combo Action SELECT+START <sup>(hold for 2sec)</sup> Quit Game SELECT+R1 Save State SELECT+L1 <sup>(hold for 2sec)</sup> Load State SELECT+X(WEST) Show FPS SELECT+R2 Fast-Forward THUMBR+L1 Select disc THUMBR+R1 Eject/Insert disc THUMBR+D-Pad Left Decrease save slot by 1 THUMBR+D-Pad Right Increase save slot by 1 THUMBR+L2 Configure buttons on virtual port 1"},{"location":"devices/powkiddy/rgb10-max-3/#notes_1","title":"Notes:","text":"<ul> <li>By default JELOS will expand the configuration file according to the first controller mednafen finds. This only happens when the config file doesn't exist (meaning the first time or if you manually delete it). After the initial expansion you are free to customize the controls.</li> </ul>"},{"location":"devices/powkiddy/rgb10-max-3/#mupen64plus-sa-nintendo-64","title":"Mupen64Plus-SA (Nintendo 64)","text":"Button Combo Action START Start B(EAST) A X(WEST) B Right Analog Up C Up Right Analog Down C Down Right Analog Left C Left Right Analog Right C Right L2 Z L1 L R1 R SELECT+START Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+X(WEST) Take Screenshot SELECT+A(SOUTH) Reset Game"},{"location":"devices/powkiddy/rgb10-max-3/#notes_2","title":"Notes:","text":"<ul> <li>Z and L button assignment can be changed directly in EmulationStation<ul> <li>Highlight the game and press Y(NORTH)</li> <li>Select <code>ADVANCED GAME OPTIONS</code></li> <li>Set <code>EMULATOR</code> to <code>MUPEN64PLUSSA</code></li> <li>Then change <code>INPUT ONFIGURATION</code><ul> <li>Default: L1 = L, L2 = Z</li> <li>Z &amp; L SWAP: L1 = Z, L2 = L</li> </ul> </li> </ul> </li> <li>You can also create your own custom controller configuration and add it to <code>/storage/.configs/game/configs/mupen64plussa</code>.  Then update <code>INPUT CONFIGURATION</code> to <code>CUSTOM</code> following the same steps as above.</li> </ul>"},{"location":"devices/powkiddy/rgb10-max-3/#ppsspp-sa-psp","title":"PPSSPP-SA (PSP)","text":"Button Combo Action START Start SELECT Select A(SOUTH) Circle B(EAST) Cross X(NORTH) Triangle Y(WEST) Square L1 L R1 R R2 Save State L2 Load State R3 Open Menu"},{"location":"devices/powkiddy/rgb10-max-3/#hypseus-singe-daphne","title":"Hypseus-singe (Daphne)","text":"Button Combo Action SELECT+START Quit Game SELECT Coin START Start A(SOUTH) Button 1 B(EAST) Button 2 Y(NORTH) Button 3"},{"location":"devices/powkiddy/rgb10-max-3/#notes_3","title":"Notes:","text":"<ul> <li>To add/change mapping you can edit <code>/storage/.config/game/configs/hypseus/hypinput.ini</code> under <code>[KEYBOARD]</code> section by changing third number for a function from <code>0</code> (disabled) to a corresponding joystick value.  You can identify joystick values by running <code>jstest /dev/input/js0</code> over ssh.</li> <li> <p>For example the following would assign <code>quit</code> to L1 and <code>pause</code> to R1</p> <pre><code>[KEYBOARD]\nKEY_QUIT = SDLK_ESCAPE 0 5\nKEY_PAUSE = SDLK_p 0 6\n</code></pre> </li> </ul>"},{"location":"devices/powkiddy/rgb10-max-3/#global-hotkeys","title":"Global Hotkeys","text":"Button Combo Action SELECT+Vol + Brightness Up SELECT+Vol - Brightness Down START+Vol + Battery Status START+Vol - WIFI Toggle"},{"location":"devices/powkiddy/rgb10-max-3/#hdmi-output","title":"HDMI Output","text":"<p>These instruction only work for aarm64 devices.  This is not implemented for x86_64 devices.</p> <p>Press L1 + START + SELECT while in EmulationStation to swtich between Screen and HDMI output. </p> <p>While this should work; it doesn't always result in the correct resolution. The best way to get consistent results is to turn off the device, plug in an HDMI cable and reboot.  </p> <p>\"Why doesn't hot-plugging just work?\"... Hot-plug HDMI switching is a fairly complex action to accomplish and not something we have implemented on any device.  If you are a developer and interested in helping to build this functionality please start here: Contribute</p>"},{"location":"devices/powkiddy/rgb10-max-3/#emulators","title":"Emulators","text":"<ul> <li>Platform Documentation (RK3566)</li> </ul>"},{"location":"devices/powkiddy/rgb10-max-3/#notes_4","title":"Notes","text":""},{"location":"devices/powkiddy/rgb10-max-3/#installation","title":"Installation","text":"<p>Download the latest <code>RK3566</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/powkiddy/rgb10/","title":"Powkiddy RGB10","text":""},{"location":"devices/powkiddy/rgb10/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface RGB10 Rockchip RK3326 (ARM) Mainline Linux Panfrost Weston + Emulation Station"},{"location":"devices/powkiddy/rgb10/#emulators","title":"Emulators","text":"<ul> <li>Platform Documentation (RK3326)</li> </ul>"},{"location":"devices/powkiddy/rgb10/#notes","title":"Notes","text":""},{"location":"devices/powkiddy/rgb10/#installation","title":"Installation","text":"<p>Download the latest <code>RK3326</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/powkiddy/rgb30/","title":"Powkiddy RGB30","text":""},{"location":"devices/powkiddy/rgb30/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface RGB30 Rockchip RK3566 (ARM) Rockchip BSP 4.19 Mali KMS/DRM + Emulation Station"},{"location":"devices/powkiddy/rgb30/#features","title":"Features","text":"Feature\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Notes  Storage JELOS can be run from an SD Card and an second SD card can be used to store games  Wifi Can be turned on in Emulation Station under Main Menu &gt; Network Settings  Bluetooth Supports bluetooth audio and controllers  LED Supports selecting from a set of colors or turning the power LED off (choice persists through reboots)  Does not support other effects."},{"location":"devices/powkiddy/rgb30/#controls","title":"Controls","text":""},{"location":"devices/powkiddy/rgb30/#retroarch-hotkeys","title":"RetroArch Hotkeys","text":"Button Combo Action SELECT+START <sup>(x2)</sup> Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+Y(NORTH) Open RA Menu SELECT+X(WEST) Show FPS SELECT+R2 Fast-Forward"},{"location":"devices/powkiddy/rgb30/#notes","title":"Notes:","text":"<ul> <li>By default JELOS will detect your controller and configure RetroArch hotkeys automatically. This is controlled by the \"AUTOCONFIGURE RETROARCH HOTKEYS\" option in the <code>Settings &gt; Controller &amp; Bluetooth</code> menu. While the option is enabled, RetroArch hotkeys will be overwritten by the above defaults each time RetroArch is launched. If this behavior is not desired that option can be disabled and your user-defined RetroArch hotkeys will be used instead.</li> </ul>"},{"location":"devices/powkiddy/rgb30/#mednafen-hotkeys","title":"Mednafen Hotkeys","text":"Button Combo Action SELECT+START <sup>(hold for 2sec)</sup> Quit Game SELECT+R1 Save State SELECT+L1 <sup>(hold for 2sec)</sup> Load State SELECT+X(WEST) Show FPS SELECT+R2 Fast-Forward THUMBR+L1 Select disc THUMBR+R1 Eject/Insert disc THUMBR+D-Pad Left Decrease save slot by 1 THUMBR+D-Pad Right Increase save slot by 1 THUMBR+L2 Configure buttons on virtual port 1"},{"location":"devices/powkiddy/rgb30/#notes_1","title":"Notes:","text":"<ul> <li>By default JELOS will expand the configuration file according to the first controller mednafen finds. This only happens when the config file doesn't exist (meaning the first time or if you manually delete it). After the initial expansion you are free to customize the controls.</li> </ul>"},{"location":"devices/powkiddy/rgb30/#mupen64plus-sa-nintendo-64","title":"Mupen64Plus-SA (Nintendo 64)","text":"Button Combo Action START Start B(EAST) A X(WEST) B Right Analog Up C Up Right Analog Down C Down Right Analog Left C Left Right Analog Right C Right L2 Z L1 L R1 R SELECT+START Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+X(WEST) Take Screenshot SELECT+A(SOUTH) Reset Game"},{"location":"devices/powkiddy/rgb30/#notes_2","title":"Notes:","text":"<ul> <li>Z and L button assignment can be changed directly in EmulationStation<ul> <li>Highlight the game and press Y(NORTH)</li> <li>Select <code>ADVANCED GAME OPTIONS</code></li> <li>Set <code>EMULATOR</code> to <code>MUPEN64PLUSSA</code></li> <li>Then change <code>INPUT ONFIGURATION</code><ul> <li>Default: L1 = L, L2 = Z</li> <li>Z &amp; L SWAP: L1 = Z, L2 = L</li> </ul> </li> </ul> </li> <li>You can also create your own custom controller configuration and add it to <code>/storage/.configs/game/configs/mupen64plussa</code>.  Then update <code>INPUT CONFIGURATION</code> to <code>CUSTOM</code> following the same steps as above.</li> </ul>"},{"location":"devices/powkiddy/rgb30/#ppsspp-sa-psp","title":"PPSSPP-SA (PSP)","text":"Button Combo Action START Start SELECT Select A(SOUTH) Circle B(EAST) Cross X(NORTH) Triangle Y(WEST) Square L1 L R1 R R2 Save State L2 Load State R3 Open Menu"},{"location":"devices/powkiddy/rgb30/#hypseus-singe-daphne","title":"Hypseus-singe (Daphne)","text":"Button Combo Action SELECT+START Quit Game SELECT Coin START Start A(SOUTH) Button 1 B(EAST) Button 2 Y(NORTH) Button 3"},{"location":"devices/powkiddy/rgb30/#notes_3","title":"Notes:","text":"<ul> <li>To add/change mapping you can edit <code>/storage/.config/game/configs/hypseus/hypinput.ini</code> under <code>[KEYBOARD]</code> section by changing third number for a function from <code>0</code> (disabled) to a corresponding joystick value.  You can identify joystick values by running <code>jstest /dev/input/js0</code> over ssh.</li> <li> <p>For example the following would assign <code>quit</code> to L1 and <code>pause</code> to R1</p> <pre><code>[KEYBOARD]\nKEY_QUIT = SDLK_ESCAPE 0 5\nKEY_PAUSE = SDLK_p 0 6\n</code></pre> </li> </ul>"},{"location":"devices/powkiddy/rgb30/#global-hotkeys","title":"Global Hotkeys","text":"Button Combo Action SELECT+Vol + Brightness Up SELECT+Vol - Brightness Down START+Vol + Battery Status START+Vol - WIFI Toggle"},{"location":"devices/powkiddy/rgb30/#hdmi-output","title":"HDMI Output","text":"<p>These instruction only work for aarm64 devices.  This is not implemented for x86_64 devices.</p> <p>Press L1 + START + SELECT while in EmulationStation to swtich between Screen and HDMI output. </p> <p>While this should work; it doesn't always result in the correct resolution. The best way to get consistent results is to turn off the device, plug in an HDMI cable and reboot.  </p> <p>\"Why doesn't hot-plugging just work?\"... Hot-plug HDMI switching is a fairly complex action to accomplish and not something we have implemented on any device.  If you are a developer and interested in helping to build this functionality please start here: Contribute</p>"},{"location":"devices/powkiddy/rgb30/#emulators","title":"Emulators","text":"<ul> <li>Platform Documentation (RK3566)</li> </ul>"},{"location":"devices/powkiddy/rgb30/#notes_4","title":"Notes","text":""},{"location":"devices/powkiddy/rgb30/#installation","title":"Installation","text":""},{"location":"devices/powkiddy/rgb30/#video-guide","title":"Video Guide","text":"<p>Courtesy of @RetroGameCorps</p> <p>Download the latest <code>RK3566</code> version of JELOS from the button below and follow the instructions listed on the Install page.  Insert the SD card into the TF-OS slot of the device and power it on.</p> <p> </p>"},{"location":"devices/powkiddy/rgb30/#community-videos","title":"Community Videos","text":""},{"location":"devices/powkiddy/rk2023/","title":"Powkiddy RK2023","text":""},{"location":"devices/powkiddy/rk2023/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface RK2023 Rockchip RK3566 (ARM) Rockchip BSP 4.19 Mali KMS/DRM + Emulation Station"},{"location":"devices/powkiddy/rk2023/#features","title":"Features","text":"Feature\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Notes  Storage JELOS can be run from an SD Card and an second SD card can be used to store games  Wifi Can be turned on in Emulation Station under Main Menu &gt; Network Settings  Bluetooth Supports bluetooth audio and controllers  LED Supports selecting from a set of colors or turning the power LED off (choice persists through reboots)  Does not support other effects."},{"location":"devices/powkiddy/rk2023/#controls","title":"Controls","text":""},{"location":"devices/powkiddy/rk2023/#retroarch-hotkeys","title":"RetroArch Hotkeys","text":"Button Combo Action SELECT+START <sup>(x2)</sup> Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+Y(NORTH) Open RA Menu SELECT+X(WEST) Show FPS SELECT+R2 Fast-Forward"},{"location":"devices/powkiddy/rk2023/#notes","title":"Notes:","text":"<ul> <li>By default JELOS will detect your controller and configure RetroArch hotkeys automatically. This is controlled by the \"AUTOCONFIGURE RETROARCH HOTKEYS\" option in the <code>Settings &gt; Controller &amp; Bluetooth</code> menu. While the option is enabled, RetroArch hotkeys will be overwritten by the above defaults each time RetroArch is launched. If this behavior is not desired that option can be disabled and your user-defined RetroArch hotkeys will be used instead.</li> </ul>"},{"location":"devices/powkiddy/rk2023/#mednafen-hotkeys","title":"Mednafen Hotkeys","text":"Button Combo Action SELECT+START <sup>(hold for 2sec)</sup> Quit Game SELECT+R1 Save State SELECT+L1 <sup>(hold for 2sec)</sup> Load State SELECT+X(WEST) Show FPS SELECT+R2 Fast-Forward THUMBR+L1 Select disc THUMBR+R1 Eject/Insert disc THUMBR+D-Pad Left Decrease save slot by 1 THUMBR+D-Pad Right Increase save slot by 1 THUMBR+L2 Configure buttons on virtual port 1"},{"location":"devices/powkiddy/rk2023/#notes_1","title":"Notes:","text":"<ul> <li>By default JELOS will expand the configuration file according to the first controller mednafen finds. This only happens when the config file doesn't exist (meaning the first time or if you manually delete it). After the initial expansion you are free to customize the controls.</li> </ul>"},{"location":"devices/powkiddy/rk2023/#mupen64plus-sa-nintendo-64","title":"Mupen64Plus-SA (Nintendo 64)","text":"Button Combo Action START Start B(EAST) A X(WEST) B Right Analog Up C Up Right Analog Down C Down Right Analog Left C Left Right Analog Right C Right L2 Z L1 L R1 R SELECT+START Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+X(WEST) Take Screenshot SELECT+A(SOUTH) Reset Game"},{"location":"devices/powkiddy/rk2023/#notes_2","title":"Notes:","text":"<ul> <li>Z and L button assignment can be changed directly in EmulationStation<ul> <li>Highlight the game and press Y(NORTH)</li> <li>Select <code>ADVANCED GAME OPTIONS</code></li> <li>Set <code>EMULATOR</code> to <code>MUPEN64PLUSSA</code></li> <li>Then change <code>INPUT ONFIGURATION</code><ul> <li>Default: L1 = L, L2 = Z</li> <li>Z &amp; L SWAP: L1 = Z, L2 = L</li> </ul> </li> </ul> </li> <li>You can also create your own custom controller configuration and add it to <code>/storage/.configs/game/configs/mupen64plussa</code>.  Then update <code>INPUT CONFIGURATION</code> to <code>CUSTOM</code> following the same steps as above.</li> </ul>"},{"location":"devices/powkiddy/rk2023/#ppsspp-sa-psp","title":"PPSSPP-SA (PSP)","text":"Button Combo Action START Start SELECT Select A(SOUTH) Circle B(EAST) Cross X(NORTH) Triangle Y(WEST) Square L1 L R1 R R2 Save State L2 Load State R3 Open Menu"},{"location":"devices/powkiddy/rk2023/#hypseus-singe-daphne","title":"Hypseus-singe (Daphne)","text":"Button Combo Action SELECT+START Quit Game SELECT Coin START Start A(SOUTH) Button 1 B(EAST) Button 2 Y(NORTH) Button 3"},{"location":"devices/powkiddy/rk2023/#notes_3","title":"Notes:","text":"<ul> <li>To add/change mapping you can edit <code>/storage/.config/game/configs/hypseus/hypinput.ini</code> under <code>[KEYBOARD]</code> section by changing third number for a function from <code>0</code> (disabled) to a corresponding joystick value.  You can identify joystick values by running <code>jstest /dev/input/js0</code> over ssh.</li> <li> <p>For example the following would assign <code>quit</code> to L1 and <code>pause</code> to R1</p> <pre><code>[KEYBOARD]\nKEY_QUIT = SDLK_ESCAPE 0 5\nKEY_PAUSE = SDLK_p 0 6\n</code></pre> </li> </ul>"},{"location":"devices/powkiddy/rk2023/#global-hotkeys","title":"Global Hotkeys","text":"Button Combo Action SELECT+Vol + Brightness Up SELECT+Vol - Brightness Down START+Vol + Battery Status START+Vol - WIFI Toggle"},{"location":"devices/powkiddy/rk2023/#hdmi-output","title":"HDMI Output","text":"<p>These instruction only work for aarm64 devices.  This is not implemented for x86_64 devices.</p> <p>Press L1 + START + SELECT while in EmulationStation to swtich between Screen and HDMI output. </p> <p>While this should work; it doesn't always result in the correct resolution. The best way to get consistent results is to turn off the device, plug in an HDMI cable and reboot.  </p> <p>\"Why doesn't hot-plugging just work?\"... Hot-plug HDMI switching is a fairly complex action to accomplish and not something we have implemented on any device.  If you are a developer and interested in helping to build this functionality please start here: Contribute</p>"},{"location":"devices/powkiddy/rk2023/#emulators","title":"Emulators","text":"<ul> <li>Platform Documentation (RK3566)</li> </ul>"},{"location":"devices/powkiddy/rk2023/#notes_4","title":"Notes","text":""},{"location":"devices/powkiddy/rk2023/#installation","title":"Installation","text":"<p>Download the latest <code>RK3566</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/powkiddy/rk2023/#community-videos","title":"Community Videos","text":""},{"location":"devices/powkiddy/x55/","title":"Powkiddy x55","text":""},{"location":"devices/powkiddy/x55/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface x55 Rockchip RK3566 (ARM) Rockchip BSP 4.19 Mali KMS/DRM + Emulation Station"},{"location":"devices/powkiddy/x55/#features","title":"Features","text":"Feature\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Notes  Storage JELOS can be installed to the emmc or run from an SD Card, and an second SD card can be used to store games  Wifi Can be turned on in Emulation Station under Main Menu &gt; Network Settings  Bluetooth Supports bluetooth audio and controllers"},{"location":"devices/powkiddy/x55/#controls","title":"Controls","text":""},{"location":"devices/powkiddy/x55/#retroarch-hotkeys","title":"RetroArch Hotkeys","text":"Button Combo Action SELECT+START <sup>(x2)</sup> Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+Y(NORTH) Open RA Menu SELECT+X(WEST) Show FPS SELECT+R2 Fast-Forward"},{"location":"devices/powkiddy/x55/#notes","title":"Notes:","text":"<ul> <li>By default JELOS will detect your controller and configure RetroArch hotkeys automatically. This is controlled by the \"AUTOCONFIGURE RETROARCH HOTKEYS\" option in the <code>Settings &gt; Controller &amp; Bluetooth</code> menu. While the option is enabled, RetroArch hotkeys will be overwritten by the above defaults each time RetroArch is launched. If this behavior is not desired that option can be disabled and your user-defined RetroArch hotkeys will be used instead.</li> </ul>"},{"location":"devices/powkiddy/x55/#mednafen-hotkeys","title":"Mednafen Hotkeys","text":"Button Combo Action SELECT+START <sup>(hold for 2sec)</sup> Quit Game SELECT+R1 Save State SELECT+L1 <sup>(hold for 2sec)</sup> Load State SELECT+X(WEST) Show FPS SELECT+R2 Fast-Forward THUMBR+L1 Select disc THUMBR+R1 Eject/Insert disc THUMBR+D-Pad Left Decrease save slot by 1 THUMBR+D-Pad Right Increase save slot by 1 THUMBR+L2 Configure buttons on virtual port 1"},{"location":"devices/powkiddy/x55/#notes_1","title":"Notes:","text":"<ul> <li>By default JELOS will expand the configuration file according to the first controller mednafen finds. This only happens when the config file doesn't exist (meaning the first time or if you manually delete it). After the initial expansion you are free to customize the controls.</li> </ul>"},{"location":"devices/powkiddy/x55/#mupen64plus-sa-nintendo-64","title":"Mupen64Plus-SA (Nintendo 64)","text":"Button Combo Action START Start B(EAST) A X(WEST) B Right Analog Up C Up Right Analog Down C Down Right Analog Left C Left Right Analog Right C Right L2 Z L1 L R1 R SELECT+START Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+X(WEST) Take Screenshot SELECT+A(SOUTH) Reset Game"},{"location":"devices/powkiddy/x55/#notes_2","title":"Notes:","text":"<ul> <li>Z and L button assignment can be changed directly in EmulationStation<ul> <li>Highlight the game and press Y(NORTH)</li> <li>Select <code>ADVANCED GAME OPTIONS</code></li> <li>Set <code>EMULATOR</code> to <code>MUPEN64PLUSSA</code></li> <li>Then change <code>INPUT ONFIGURATION</code><ul> <li>Default: L1 = L, L2 = Z</li> <li>Z &amp; L SWAP: L1 = Z, L2 = L</li> </ul> </li> </ul> </li> <li>You can also create your own custom controller configuration and add it to <code>/storage/.configs/game/configs/mupen64plussa</code>.  Then update <code>INPUT CONFIGURATION</code> to <code>CUSTOM</code> following the same steps as above.</li> </ul>"},{"location":"devices/powkiddy/x55/#ppsspp-sa-psp","title":"PPSSPP-SA (PSP)","text":"Button Combo Action START Start SELECT Select A(SOUTH) Circle B(EAST) Cross X(NORTH) Triangle Y(WEST) Square L1 L R1 R R2 Save State L2 Load State R3 Open Menu"},{"location":"devices/powkiddy/x55/#hypseus-singe-daphne","title":"Hypseus-singe (Daphne)","text":"Button Combo Action SELECT+START Quit Game SELECT Coin START Start A(SOUTH) Button 1 B(EAST) Button 2 Y(NORTH) Button 3"},{"location":"devices/powkiddy/x55/#notes_3","title":"Notes:","text":"<ul> <li>To add/change mapping you can edit <code>/storage/.config/game/configs/hypseus/hypinput.ini</code> under <code>[KEYBOARD]</code> section by changing third number for a function from <code>0</code> (disabled) to a corresponding joystick value.  You can identify joystick values by running <code>jstest /dev/input/js0</code> over ssh.</li> <li> <p>For example the following would assign <code>quit</code> to L1 and <code>pause</code> to R1</p> <pre><code>[KEYBOARD]\nKEY_QUIT = SDLK_ESCAPE 0 5\nKEY_PAUSE = SDLK_p 0 6\n</code></pre> </li> </ul>"},{"location":"devices/powkiddy/x55/#global-hotkeys","title":"Global Hotkeys","text":"Button Combo Action SELECT+Vol + Brightness Up SELECT+Vol - Brightness Down START+Vol + Battery Status START+Vol - WIFI Toggle"},{"location":"devices/powkiddy/x55/#hdmi-output","title":"HDMI Output","text":"<p>These instruction only work for aarm64 devices.  This is not implemented for x86_64 devices.</p> <p>Press L1 + START + SELECT while in EmulationStation to swtich between Screen and HDMI output. </p> <p>While this should work; it doesn't always result in the correct resolution. The best way to get consistent results is to turn off the device, plug in an HDMI cable and reboot.  </p> <p>\"Why doesn't hot-plugging just work?\"... Hot-plug HDMI switching is a fairly complex action to accomplish and not something we have implemented on any device.  If you are a developer and interested in helping to build this functionality please start here: Contribute</p>"},{"location":"devices/powkiddy/x55/#emulators","title":"Emulators","text":"<ul> <li>Platform Documentation (RK3566)</li> </ul>"},{"location":"devices/powkiddy/x55/#notes_4","title":"Notes","text":""},{"location":"devices/powkiddy/x55/#installation","title":"Installation","text":"<p>Download the latest <code>RK3566-X55</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/powkiddy/x55/#community-videos","title":"Community Videos","text":""},{"location":"devices/powkiddy/xu10/","title":"Powkiddy XU10","text":""},{"location":"devices/powkiddy/xu10/#overview","title":"Overview","text":"CPU / Architecture Kernel GL driver Interface Rockchip RK3326 (ARM) Mainline Linux Panfrost Weston + Emulation Station"},{"location":"devices/powkiddy/xu10/#features","title":"Features","text":"Feature\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Notes  Wifi Can be turned on in Emulation Station under Main Menu &gt; Network Settings"},{"location":"devices/powkiddy/xu10/#emulators","title":"Emulators","text":"<ul> <li>Platform Documentation (RK3326)</li> </ul>"},{"location":"devices/powkiddy/xu10/#notes","title":"Notes","text":""},{"location":"devices/powkiddy/xu10/#installation","title":"Installation","text":"<p>Download the latest <code>RK3326</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/unbranded/game-console-r33s/","title":"Game Console R33S","text":""},{"location":"devices/unbranded/game-console-r33s/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface R33S Rockchip RK3326 (ARM) Mainline Linux Panfrost Weston + Emulation Station"},{"location":"devices/unbranded/game-console-r33s/#controls","title":"Controls","text":""},{"location":"devices/unbranded/game-console-r33s/#retroarch-hotkeys","title":"RetroArch Hotkeys","text":"Button Combo Action SELECT+START <sup>(x2)</sup> Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+Y(NORTH) Open RA Menu SELECT+X(WEST) Show FPS SELECT+R2 Fast-Forward"},{"location":"devices/unbranded/game-console-r33s/#notes","title":"Notes:","text":"<ul> <li>By default JELOS will detect your controller and configure RetroArch hotkeys automatically. This is controlled by the \"AUTOCONFIGURE RETROARCH HOTKEYS\" option in the <code>Settings &gt; Controller &amp; Bluetooth</code> menu. While the option is enabled, RetroArch hotkeys will be overwritten by the above defaults each time RetroArch is launched. If this behavior is not desired that option can be disabled and your user-defined RetroArch hotkeys will be used instead.</li> </ul>"},{"location":"devices/unbranded/game-console-r33s/#mednafen-hotkeys","title":"Mednafen Hotkeys","text":"Button Combo Action SELECT+START <sup>(hold for 2sec)</sup> Quit Game SELECT+R1 Save State SELECT+L1 <sup>(hold for 2sec)</sup> Load State SELECT+X(WEST) Show FPS SELECT+R2 Fast-Forward THUMBR+L1 Select disc THUMBR+R1 Eject/Insert disc THUMBR+D-Pad Left Decrease save slot by 1 THUMBR+D-Pad Right Increase save slot by 1 THUMBR+L2 Configure buttons on virtual port 1"},{"location":"devices/unbranded/game-console-r33s/#notes_1","title":"Notes:","text":"<ul> <li>By default JELOS will expand the configuration file according to the first controller mednafen finds. This only happens when the config file doesn't exist (meaning the first time or if you manually delete it). After the initial expansion you are free to customize the controls.</li> </ul>"},{"location":"devices/unbranded/game-console-r33s/#global-hotkeys","title":"Global Hotkeys","text":"Button Combo Action SELECT+Vol + Brightness Up SELECT+Vol - Brightness Down START+Vol + Battery Status START+Vol - WIFI Toggle"},{"location":"devices/unbranded/game-console-r33s/#hdmi-output","title":"HDMI Output","text":"<p>These instruction only work for aarm64 devices.  This is not implemented for x86_64 devices.</p> <p>Press L1 + START + SELECT while in EmulationStation to swtich between Screen and HDMI output. </p> <p>While this should work; it doesn't always result in the correct resolution. The best way to get consistent results is to turn off the device, plug in an HDMI cable and reboot.  </p> <p>\"Why doesn't hot-plugging just work?\"... Hot-plug HDMI switching is a fairly complex action to accomplish and not something we have implemented on any device.  If you are a developer and interested in helping to build this functionality please start here: Contribute</p>"},{"location":"devices/unbranded/game-console-r33s/#emulators","title":"Emulators","text":"<ul> <li>Platform Documentation (RK3326)</li> </ul>"},{"location":"devices/unbranded/game-console-r33s/#notes_2","title":"Notes","text":""},{"location":"devices/unbranded/game-console-r33s/#installation","title":"Installation","text":"<p>Download the latest <code>RK3326</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"devices/unbranded/game-console-r35s-r36s/","title":"Game Console R35S/R36S","text":""},{"location":"devices/unbranded/game-console-r35s-r36s/#overview","title":"Overview","text":"Device CPU / Architecture Kernel GL driver Interface R35S Rockchip RK3326 (ARM) Mainline Linux Panfrost Weston + Emulation Station R36S Rockchip RK3326 (ARM) Mainline Linux Panfrost Weston + Emulation Station"},{"location":"devices/unbranded/game-console-r35s-r36s/#controls","title":"Controls","text":""},{"location":"devices/unbranded/game-console-r35s-r36s/#retroarch-hotkeys","title":"RetroArch Hotkeys","text":"Button Combo Action SELECT+START <sup>(x2)</sup> Quit Game SELECT+R1 Save State SELECT+L1 Load State SELECT+Y(NORTH) Open RA Menu SELECT+X(WEST) Show FPS SELECT+R2 Fast-Forward"},{"location":"devices/unbranded/game-console-r35s-r36s/#notes","title":"Notes:","text":"<ul> <li>By default JELOS will detect your controller and configure RetroArch hotkeys automatically. This is controlled by the \"AUTOCONFIGURE RETROARCH HOTKEYS\" option in the <code>Settings &gt; Controller &amp; Bluetooth</code> menu. While the option is enabled, RetroArch hotkeys will be overwritten by the above defaults each time RetroArch is launched. If this behavior is not desired that option can be disabled and your user-defined RetroArch hotkeys will be used instead.</li> </ul>"},{"location":"devices/unbranded/game-console-r35s-r36s/#mednafen-hotkeys","title":"Mednafen Hotkeys","text":"Button Combo Action SELECT+START <sup>(hold for 2sec)</sup> Quit Game SELECT+R1 Save State SELECT+L1 <sup>(hold for 2sec)</sup> Load State SELECT+X(WEST) Show FPS SELECT+R2 Fast-Forward THUMBR+L1 Select disc THUMBR+R1 Eject/Insert disc THUMBR+D-Pad Left Decrease save slot by 1 THUMBR+D-Pad Right Increase save slot by 1 THUMBR+L2 Configure buttons on virtual port 1"},{"location":"devices/unbranded/game-console-r35s-r36s/#notes_1","title":"Notes:","text":"<ul> <li>By default JELOS will expand the configuration file according to the first controller mednafen finds. This only happens when the config file doesn't exist (meaning the first time or if you manually delete it). After the initial expansion you are free to customize the controls.</li> </ul>"},{"location":"devices/unbranded/game-console-r35s-r36s/#global-hotkeys","title":"Global Hotkeys","text":"Button Combo Action SELECT+Vol + Brightness Up SELECT+Vol - Brightness Down START+Vol + Battery Status START+Vol - WIFI Toggle"},{"location":"devices/unbranded/game-console-r35s-r36s/#hdmi-output","title":"HDMI Output","text":"<p>These instruction only work for aarm64 devices.  This is not implemented for x86_64 devices.</p> <p>Press L1 + START + SELECT while in EmulationStation to swtich between Screen and HDMI output. </p> <p>While this should work; it doesn't always result in the correct resolution. The best way to get consistent results is to turn off the device, plug in an HDMI cable and reboot.  </p> <p>\"Why doesn't hot-plugging just work?\"... Hot-plug HDMI switching is a fairly complex action to accomplish and not something we have implemented on any device.  If you are a developer and interested in helping to build this functionality please start here: Contribute</p>"},{"location":"devices/unbranded/game-console-r35s-r36s/#emulators","title":"Emulators","text":"<ul> <li>Platform Documentation (RK3326)</li> </ul>"},{"location":"devices/unbranded/game-console-r35s-r36s/#notes_2","title":"Notes","text":""},{"location":"devices/unbranded/game-console-r35s-r36s/#installation","title":"Installation","text":"<p>Download the latest <code>RK3326</code> version of JELOS from the button below and follow the instructions listed on the Install page.</p> <p> </p>"},{"location":"play/add-games/","title":"Adding Games to JELOS","text":"<p>JELOS has a few options for adding games and the option you choose will depend on the device you have and its available functionality (For example, some devices do not have networking capabilites so those devices will not be able to use the network transfer option).  To create the default set of game directories on your device, choose the 'CREATE GAME DIRECTORIES' option in the System Settings menu.</p> <p>This page will aim to document all possible options and indicate when you might use a given one over another.</p> <p>For details on which specific files each system requires please see the corresponding pages in the systems section of this wiki.</p>"},{"location":"play/add-games/#storage-modes","title":"Storage Modes","text":"<p>JELOS has support for using internal and external storage (microsd) for games.  To make games available in the OS we provide different features based on the capability of the filesystem that you are using.  To support our storage modes JELOS nests games into a directory on your games card called \"roms\".  All games found in this path will be available in the OS.</p>"},{"location":"play/add-games/#merged-storage","title":"Merged Storage","text":"<p>When using a microsd that is formatted as Ext4 (Linux), JELOS will present users with the ability to merge both the internal and external storage together allowing users to use both devices to store games.  This mode has two preferences, external (default), and internal.</p> <ul> <li>Preference External</li> <li>This mode will save anything written to <code>/storage/roms</code> to your external microsd (<code>/storage/games-external/roms</code>).</li> <li>Preference Internal</li> <li>This mode will save anything written to <code>/storage/roms</code> to your internal storage (<code>/storage/games-internal/roms</code>). </li> </ul> <p>Note: Merged Storage is disabled by default.</p>"},{"location":"play/add-games/#simple-storage","title":"Simple Storage","text":"<p>When Merged Storage is disabled, or when you are using ExFAT or FAT32, JELOS will mount your external card to <code>/storage/games-external</code> and make the content of <code>/storage/games-external/roms</code> available at /storage/roms.</p>"},{"location":"play/add-games/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>It is possible to create a conflict which will prevent games from being displayed in EmulationStation.  This can usually be resolved by executing <code>/usr/bin/cleanup_overlay</code>.  Note: This will reboot your device.</li> <li>If no game folders appear in /storage/roms after running <code>CREATE GAME DIRECTORIES</code>, make sure you have a <code>roms</code> directory on your microsd.</li> </ul>"},{"location":"play/add-games/#option-1-network-transfer","title":"Option 1: Network Transfer","text":"<p>Network transfer can be used on any device that can connect to the internet (this includes devices with native networking capabilites and ones where networking can be added through an external dongle).</p> <p>This option first requires you to set up networking on your device.  Please see Networking for details.  Once you have completed those steps make note of your IP Address in the Network Settings menu.</p> <p>In addition to your IP you will also need your root password.  This can be found in the Main Menu by pressing START in EmulationStation and navigating to <code>System Settings</code>.  You will see your root password under the <code>Authentication</code> header.</p> <p>By default the root password is set up to rotate to a unique string of characters after every reboot. You can leave it like this and make note of the current password, or you can turn it off and set it to something that will persist.</p>"},{"location":"play/add-games/#http","title":"HTTP","text":"<p>Enabling Simple HTTP Server in Network settings lets you upload and download files by entering your device's IP address in any browser on the local network (or on VPN IP, see VPN section for details). The username is <code>root</code> and the password can be found in <code>Root Password</code> in the main menu.</p>"},{"location":"play/add-games/#smb","title":"SMB","text":"<ul> <li>Windows:<ul> <li>open a Windows Explorer window, and type in <code>\\\\[YOUR IP ADDRESS]</code>; replace <code>[YOUR IP ADDRESS]</code> with the IP Address seen in the Network Settings menu.</li> <li>You will be prompted for a username and password. </li> <li>The username is <code>root</code> and your password will be the value from <code>Root Password</code> in the System Settings menu.</li> </ul> </li> <li>MacOS: <ul> <li>open Finder and select <code>Go &gt; Connect to Server</code> from the top menu.</li> <li>In the address bar that appears, type <code>smb://[YOUR IP ADDRESS]</code>; replace <code>[YOUR IP ADDRESS]</code> with the IP Address seen in the Network Settings menu.</li> <li>You will be prompted for a username and password.</li> <li>For name enter <code>root</code> and your password will be the value from <code>Root Password</code> in the System Settings menu.</li> </ul> </li> </ul>"},{"location":"play/add-games/#ftp","title":"FTP","text":"<p>Using your FTP program of choice; set up an SFTP connection to the IP Address seen in the Network Settings menu.  Make sure the Port is set to <code>22</code>.  The username is <code>root</code> and your password will be the value from <code>Root Password</code> in the System Settings menu. </p>"},{"location":"play/add-games/#after-connecting","title":"After connecting","text":"<ul> <li>You will see a list of folders after you have connected via network.  </li> <li>Open the <code>roms</code> folder and you will see a list of folders where games and bios files can be placed. (Please see the systems section of the wiki for details on where each system's files should be placed)</li> <li>After you have added your games you can get them to display in EmulationStation by pressing START to open the Main Menu, then open <code>Game Settings</code> then select <code>Update Gamelists</code> under the Tools header.</li> </ul>"},{"location":"play/add-games/#option-2-sd-card","title":"Option 2: SD Card","text":"<p>Games can also be added via an SD card.  There are 2 primary methods for this depending on your device.</p>"},{"location":"play/add-games/#if-your-device-has-2-sd-card-slots","title":"If your device has 2 SD card slots","text":"<ul> <li>With your device turned off; insert a FAT32/ExFAT/ext4 formated SD card into slot 2 of your device.</li> <li>Turn your device on.</li> <li>When JELOS completes its boot process, create your game directories by selecting the <code>Create Game Directories</code> option in <code>System Settings</code>.</li> <li>Now you can turn off your device, remove your SD card from slot 2 and open it on your PC.</li> <li>You PC will display a list of folders, open the <code>roms</code> directory and you will see a list of folders for each system where you can place your games and bios files.</li> <li>Add your games and place your SD card back into slot 2 and boot up JELOS.</li> </ul> <p>If your device does not see your SD card (or write the needed folders to it) please open <code>System Settings</code> and make sure <code>Autodetect Games Card</code> is turned on (located under the Hardware/Storage header) then reboot your device.</p>"},{"location":"play/add-games/#if-your-device-has-1-sd-card-slot","title":"If your device has 1 SD card slot","text":"<p>This option is only for devices where you have installed JELOS to the internal drive of the device. In this scenario an SD card can be used directly for storage</p> <ul> <li>With JELOS installed to your internal drive press START to open the Main Menu, then open <code>System Settings</code> and turn on <code>Autodetect Games Card</code> under the Hardware/Storage header.</li> <li>Turn your device off</li> <li>Insert a FAT32/ExFAT/ext4 formated SD card into your device.</li> <li>Turn your device on</li> <li>When JELOS completes its boot process, create your game directories by selecting the <code>Create Game Directories</code> option in <code>System Settings</code>.</li> <li>Now you can turn off your device, remove your SD card and open it on your PC.</li> <li>You PC will display a list of folders, open the <code>roms</code> directory and you will see a list of folders for each system where you can place your games and bios files.</li> <li>Add your games and place your SD card back into your device and boot up JELOS.</li> </ul>"},{"location":"play/add-games/#option-3-external-usb-drive","title":"Option 3: External USB Drive","text":"<p>JELOS has a built in File Manager and you can use it to access connected USB drives and transfer files. </p> <ol> <li>Connect your USB Drive to your device</li> <li>Open the Tools system and select File Manager</li> <li>Navigate up to <code>/</code> and then select <code>media</code> - you should see your drive listed after opening media</li> <li>Open your drive and you should see its contents</li> <li>From here you can navigate to the file(s) you would like to copy and then navigate back to the <code>storage/roms</code> directory and paste your copied files in the approrpiate folder.</li> </ol>"},{"location":"play/add-games/#option-4-linux-os","title":"Option 4: Linux OS","text":"<p>JELOS' storage drive is formated as ext4 which can be read natively by linux operating systems.  Plugging in your SD card into an linux OS will enable you to browse the directories and add files directly.</p>"},{"location":"play/controls/","title":"Controls","text":"<p>Controls documentation is being moved to device pages.  This work is not fully complete so there is chance you will not find controls documentation for your device just yet.  We're working on it  and will update this page when things are complete.</p>"},{"location":"play/install/","title":"Installing JELOS","text":"<p>JELOS is installed by downloading an image for your device, flashing it to an SD Card (or your device's internal storage) and then booting the device to start the install process.</p>"},{"location":"play/install/#step-1-download","title":"Step 1: Download","text":"<ul> <li>Download the latest version of JELOS for your device from the releases page.<ul> <li>You'll find download links for each device/platform we support under the \"<code>Installation Package Downloads</code>\" header.</li> <li>Make sure to download the correct image for your device.  For example; if you are installing JELOS on a Loki Zero you would download the <code>JELOS-AMD64</code> image.</li> <li>If you have any questions you can check the Device Support section to confirm which image you should download for your specific device.</li> </ul> </li> </ul>"},{"location":"play/install/#step-2-flash","title":"Step 2: Flash","text":"<ul> <li>First decompress the image.</li> <li>Then write the image to an SD Card using an imaging tool.<ul> <li>Common imaging tools include Rufus, Raspberry Pi Imager, and Win32 Disk Imager.  If you're skilled with the command line, <code>dd</code> can also be used.</li> </ul> </li> </ul>"},{"location":"play/install/#step-3-boot-your-device","title":"Step 3: Boot your device","text":"<ul> <li>Insert your SD Card into your device while its off and then turn it on</li> <li>Note: Some devices may require you to set the boot order so your SD Card is loaded first.  Please see documentation for your specific device to see if this applies to you.</li> <li>JELOS will run through its install process and then reboot your device after its complete.</li> <li>When your device reboots it will load directly into EmulationStation; at this point you are good to go!</li> </ul>"},{"location":"play/install/#additional-notes","title":"Additional Notes","text":"<ul> <li>JELOS operating system is stored on an Ext4 partition that can be read by LINUX but is not natively readable on Windows. Currently it is not possible to access the primary JELOS Ext4 partition on Windows to add games.</li> <li>On devices that support a second sd card, the sd card can be formatted as Ext4, FAT32, or exFAT. JELOS will automatically detect the second SD card on boot and make it available as game storage.</li> <li>On x86 devices JELOS includes an installation tool.  The installation tool can be found in the tools menu, which is one of the systems listed within ES.</li> </ul>"},{"location":"play/install/#next-steps","title":"Next Steps","text":"<ul> <li>Add Games</li> <li>Set up Networking</li> <li>Themes</li> </ul>"},{"location":"play/netplay/","title":"Network Play","text":"<p>RetroArch network play for up to 4 players is available across all WIFI enabled devices supported by JELOS.  Before continuing, please make sure that all devices are updated to the same version of the operating system.</p>"},{"location":"play/netplay/#video-guide","title":"Video Guide","text":"<p>Courtesy of @RetroGameCorps</p>"},{"location":"play/netplay/#enabling-network-play","title":"Enabling Network Play","text":"<p>Before netplay is available, it must be enabled on each participating device.</p> <ul> <li>Select Games Settings -&gt; Netplay Settings</li> <li>NetPlay -&gt; Enabled</li> <li>Index Games</li> </ul>"},{"location":"play/netplay/#option-1-lan-based-network-play","title":"Option 1: LAN based Network Play","text":"<p>Using this feature is simple.  For LAN based play, connect your devices to your WIFI network.  A minimum of one host and one client are required for play.</p>"},{"location":"play/netplay/#local-lan-play-host","title":"Local LAN Play (HOST)","text":"<ul> <li>Select Network Settings.</li> <li>Disable Local Play Mode.</li> <li>Select 1 (Host).</li> <li>Choose a game and press Y.</li> <li>Select Netplay Options.<ul> <li>Select Host a Netplay Session.</li> </ul> </li> </ul>"},{"location":"play/netplay/#local-lan-play-clients","title":"Local LAN Play (CLIENTS)","text":"<ul> <li>Select Network Settings.</li> <li>Disable Local Play Mode.</li> <li>Select 2-4 (Clients).</li> <li>Choose a game and press Y.</li> <li>Select Netplay Options.<ul> <li>Select Connect to a Netplay Session.</li> </ul> </li> </ul>"},{"location":"play/netplay/#option-2-device-to-device-network-play","title":"Option 2: Device to Device Network Play","text":"<p>Device to device connections will automatically generate and connect to a local WIFI network.  As with LAN based play, one host and one client are required for play.  Using the same version of JELOS on each device is REQUIRED or devices will not connect.  Device to device connections are intended for local play only, retroAchievements, scraping, and system updates will not be available in this mode.</p>"},{"location":"play/netplay/#device-to-device-play-host","title":"Device to Device Play (HOST)","text":"<ul> <li>Select Network Settings.</li> <li>Enable Local Play Mode.</li> <li>Select 1 (Host).</li> <li>Choose a game and press Y.</li> <li>Select Netplay Options.<ul> <li>Select Host a Netplay Session.</li> </ul> </li> </ul>"},{"location":"play/netplay/#device-to-device-play-clients","title":"Device to Device Play (CLIENTS)","text":"<ul> <li>Select Network Settings.</li> <li>Enable Local Play Mode.</li> <li>Select 2-4 (Clients).</li> <li>Choose a game and press Y.</li> <li>Select Netplay Options.<ul> <li>Select Connect to a Netplay Session.</li> </ul> </li> </ul>"},{"location":"play/netplay/#option-3-gameboy-gamelink","title":"Option 3: GameBoy GameLink","text":"<p>JELOS supports GameLink play for GameBoy and GameBoy Color.  To use, on each device select the appropriate core for the game being started in advanced settings for the game, or for the system.</p> Core Features TGBDual  <code>Recommended</code> Support for multiplayer GameLink play, including battle/trading. Gambatte Support for multiplayer GameLink play."},{"location":"play/retro-achievements/","title":"Retro Achievements","text":"<p>JELOS has a native integration with RetroAchievements which allows you to earn achievements as you play games across numerous emulators. In order to use RetroAchievements your device must be connected to the internet.</p>"},{"location":"play/retro-achievements/#setup","title":"Setup","text":"<ol> <li>Create an account at RetroAchievements.org.</li> <li>Follow the steps on the Networking page to connect your device to the internet.</li> <li>While in EmulationStation press START on your controller to open the Main Menu.</li> <li>Select <code>Game Settings</code> and then choose <code>RetroAchievement Settings</code>.</li> <li>Turn On RetroAchievements (first toggle).</li> <li>Then enter your username and password for RetroAchievements.org in the username and password fields.</li> </ol>"},{"location":"play/retro-achievements/#additional-notes","title":"Additional Notes","text":"<ul> <li>There are additional settings that can be changed in the above menu to tailor your experience.  Please see the documentation @ docs.retroachievements.org for details on each option<ul> <li>Recommended Settings:</li> <li>Unlock Sound (On): this plays the classic unlock sound each time an achievement is earned.</li> <li>Automatic Screenshot (On): this takes a screenshot each time an achievement is earned and stores it in the screenshots directory.  These can be viewed in the screenshots system in EmulationStation.</li> </ul> </li> <li>Not all emulators and games support RetroAchievements; please see the list of emulators that support achievements here and check if your game has achievements available by searching for it on RetroAchievements.org</li> <li>There is a change needed on the RetroAchievements API in order to be able to display to display your history of earned achievements in EmulationStation.  Once the needed change is made by RetroAchievements; we can look at renabling this functionality in EmulationStation.</li> </ul>"},{"location":"play/update/","title":"Updating JELOS","text":"<p>JELOS can be updated \"Over the Air\" (OTA) or by manually downloading an update .tar file, adding to your device storage and rebooting.</p>"},{"location":"play/update/#option-1-ota-update","title":"Option 1: OTA Update","text":"<p>If your device has access to the internet you can update JELOS directly from EmulationStation.</p> <ol> <li>In EmulationStation open the main menu by pressing the Start button on your controller.</li> <li>Select <code>System Settings</code></li> <li>Scroll to the <code>System Update</code> header and select <code>Start Update</code></li> </ol> <p>You can also view the change log for the latest release by selecting the <code>Change Log</code> before you update.</p>"},{"location":"play/update/#option-2-manual-update","title":"Option 2: Manual Update","text":"<p>If you device does not have access to the internet you can still update manually</p> <ol> <li>Download the latest update (.tar) of JELOS for your device from the releases page.<ul> <li>You'll find download links for each device/platform we support under the \"<code>Update Package Downloads</code>\" header.</li> <li>Make sure to download the correct .tar file for your device.  For example; if you are installing JELOS on a Loki Zero you would download the <code>JELOS-AMD64</code> file.</li> <li>If you have any questions you can check the Device Support section to confirm which .tar you should download for your specific device.</li> </ul> </li> <li>Copy the update to your device's update share.</li> <li>Reboot the device, and the update will begin automatically.</li> </ol>"},{"location":"systems/","title":"Index","text":""},{"location":"systems/#supported-systems","title":"Supported Systems","text":""},{"location":"systems/3do/","title":"Panasonic 3DO","text":""},{"location":"systems/3do/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/3do</code> .iso .bin .chd .cue"},{"location":"systems/3do/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Opera \u00a0 <code>default</code> docs.libretro.com/library/opera"},{"location":"systems/3do/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files Opera https://docs.libretro.com/library/opera/#bios"},{"location":"systems/3ds/","title":"Nintendo 3DS","text":""},{"location":"systems/3ds/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/3ds</code> .3ds .3dsx .elf .axf .cci .cxi .app"},{"location":"systems/3ds/#emulatorcore","title":"Emulator/Core","text":"Name Platform Documentation Citra AMD64 docs.libretro.com/library/citra Citra (SA) AMD64, S922X citra-emu.org"},{"location":"systems/3ds/#aes-keys","title":"AES Keys","text":"<p>You need crypto keys to play encrypted roms, for details see https://citra-emu.org/wiki/aes-keys/.</p> Emulator Required Files Path Citra (SA) <code>aes_keys.txt</code> <code>/storage/.config/citra-emu/sysdata</code>"},{"location":"systems/amiga/","title":"Commodore Amiga","text":""},{"location":"systems/amiga/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/amiga</code> .zip .adf .uae .ipf .dms .adz .lha .m3u .hdf .hdz"},{"location":"systems/amiga/#emulatorcore","title":"Emulator/Core","text":"Name Documentation puae docs.libretro.com/library/puae puae2021 docs.libretro.com/library/puae uae4arm github.com/libretro/uae4arm-libretro"},{"location":"systems/amiga/#bios","title":"Bios","text":"Path Files <code>roms/bios</code> Add the files listed here: docs.libretro.com/library/puae/#bios"},{"location":"systems/amigacd32/","title":"Commodore Amiga CD32","text":""},{"location":"systems/amigacd32/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/amigacd32</code> .iso .cue .lha .chd"},{"location":"systems/amigacd32/#emulatorcore","title":"Emulator/Core","text":"Name Documentation puae docs.libretro.com/library/puae puae2021 docs.libretro.com/library/puae uae4arm github.com/libretro/uae4arm-libretro"},{"location":"systems/amigacd32/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files All docs.libretro.com/library/puae/#bios"},{"location":"systems/amstradcpc/","title":"Amstrad CPC","text":""},{"location":"systems/arduboy/","title":"Arduboy","text":""},{"location":"systems/arduboy/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/arduboy</code> .hex"},{"location":"systems/arduboy/#emulatorcore","title":"Emulator/Core","text":"Name Documentation arduous github.com/libretro/arduous"},{"location":"systems/atari2600/","title":"Atari 2600","text":""},{"location":"systems/atari2600/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/atari2600</code> .a26 .bin .zip .7z"},{"location":"systems/atari2600/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Stella docs.libretro.com/library/stella"},{"location":"systems/atari5200/","title":"Atari 5200","text":""},{"location":"systems/atari5200/#overview","title":"Overview","text":"Game\u00a0Path\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Supported Extensions <code>roms/atari5200</code> .rom .xfd .atr .atx .cdm .cas .car .bin .a52 .xex .zip .7z"},{"location":"systems/atari5200/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Atari800 docs.libretro.com/library/atari800 a5200 github.com/libretro/a5200"},{"location":"systems/atari5200/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files All docs.libretro.com/library/atari800/#bios"},{"location":"systems/atari7800/","title":"Atari 7800","text":""},{"location":"systems/atari7800/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/atari7800</code> .a78 .bin .zip .7z"},{"location":"systems/atari7800/#emulatorcore","title":"Emulator/Core","text":"Name Documentation ProSystem docs.libretro.com/library/prosystem"},{"location":"systems/atari7800/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files ProSystem See: docs.libretro.com/library/prosystem/#bios"},{"location":"systems/atari800/","title":"Atari 800","text":""},{"location":"systems/atari800/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/atari800</code> .rom .xfd .atr .atx .cdm .cas .car .bin .a52 .xex .zip .7z"},{"location":"systems/atari800/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Atari800 docs.libretro.com/library/atari800 a5200 github.com/libretro/a5200"},{"location":"systems/atari800/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files All docs.libretro.com/library/atari800/#bios"},{"location":"systems/atarijaguar/","title":"Atari Jaguar","text":""},{"location":"systems/atarijaguar/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/atarijaguar</code> .j64 .jag .rom .abs .cof .bin .prg"},{"location":"systems/atarijaguar/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Virtual Jaguar docs.libretro.com/library/virtual_jaguar"},{"location":"systems/atarilynx/","title":"Atari Lynx","text":""},{"location":"systems/atarilynx/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/atarilynx</code> .lnx .zip .7z"},{"location":"systems/atarilynx/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Handy docs.libretro.com/library/handy Beetle Lynx github.com/libretro/beetle_lynx Lynx (Mednafen) mednafen.github.io/documentation/lynx.html"},{"location":"systems/atarilynx/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files Handy docs.libretro.com/library/handy/#bios Beetle Lynx docs.libretro.com/library/beetle_lynx/#bios"},{"location":"systems/atarist/","title":"Atari ST","text":""},{"location":"systems/atomiswave/","title":"Sammy Atomiswave","text":""},{"location":"systems/atomiswave/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/atomiswave</code> .lst .bin .dat .zip .7z"},{"location":"systems/atomiswave/#emulatorcore","title":"Emulator/Core","text":"Name\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Platform(s) Documentation Flycast AMD64, RK3326, RK3399, S922X, RK3566 docs.libretro.com/library/flycast Flycast 2021 RK3326, S922X, RK3566 docs.libretro.com/library/flycast Flycast 32 RK3326 docs.libretro.com/library/flycast Flycast (Stand Alone) AMD64, RK3326, RK3399, S922X, RK3566 github.com/flyinghead/flycast"},{"location":"systems/atomiswave/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files All docs.libretro.com/library/flycast/#bios"},{"location":"systems/atomiswave/#additional-references","title":"Additional References","text":"<p>Getting started with arcade emulation (Libretro)</p>"},{"location":"systems/build-engine/","title":"Build Engine","text":""},{"location":"systems/build-engine/#build-files","title":".build files","text":"<p>These files must be created for each build engine game that will be launched with raze. The file contains a <code>PATH</code> variable and an optional <code>GRP</code> variable. The <code>PATH</code> variable points to the subfolder containing the game's GRP file. The optional <code>GRP</code> variable is used to identify the specific GRP file to load for games with multiple GRP files.</p> <p>Example: <code>/roms/build/shadow warrior.build</code> contains <pre><code>PATH=sw\nGRP=SW.GRP\n-- end --\n</code></pre> where the Shadow Warrior games files are stored in subfolder <code>sw</code>, i.e. <code>/roms/build/sw/</code></p> <p>Note: don't leave any space between <code>GRP</code> or <code>PATH</code> and <code>=</code> and enclose filenames containing spaces with \"quotes\"</p> <p>Note: add <code>-- end --</code> to the end of the file if it contains multiple lines</p>"},{"location":"systems/c128/","title":"Commodore 128","text":""},{"location":"systems/c16/","title":"Commodore 16","text":""},{"location":"systems/c64/","title":"Commodore 64","text":""},{"location":"systems/channelf/","title":"Fairchild Channel F","text":""},{"location":"systems/channelf/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/channelf</code> .bin .chf .zip .7z"},{"location":"systems/channelf/#emulatorcore","title":"Emulator/Core","text":"Name Documentation FreeChaF github.com/libretro/FreeChaF"},{"location":"systems/channelf/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files FreeChaF see: github.com/libretro/FreeChaF#bios"},{"location":"systems/colecovision/","title":"ColecoVision","text":""},{"location":"systems/colecovision/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/coleco</code> .bin .col .rom .zip .7z"},{"location":"systems/colecovision/#emulatorcore","title":"Emulator/Core","text":"Name Documentation blueMSX \u00a0 <code>default</code> docs.libretro.com/library/bluemsx GearColeco docs.libretro.com/library/gearcoleco"},{"location":"systems/colecovision/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files blueMSX see: docs.libretro.com/library/bluemsx/#bios GearColeco see: docs.libretro.com/library/gearcoleco/#bios"},{"location":"systems/cps1/","title":"Capcom CPS-1","text":""},{"location":"systems/cps1/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/cps1</code> .zip .7z"},{"location":"systems/cps1/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Final Burn Neo \u00a0 <code>default</code> docs.libretro.com/library/fbneo"},{"location":"systems/cps1/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files Final Burn Neo docs.libretro.com/library/fbneo/#bios"},{"location":"systems/cps1/#additional-references","title":"Additional References","text":"<p>Getting started with arcade emulation (Libretro)</p>"},{"location":"systems/cps2/","title":"Capcom CPS-2","text":""},{"location":"systems/cps2/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/cps2</code> .zip .7z"},{"location":"systems/cps2/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Final Burn Neo \u00a0 <code>default</code> docs.libretro.com/library/fbneo"},{"location":"systems/cps2/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files Final Burn Neo docs.libretro.com/library/fbneo/#bios"},{"location":"systems/cps2/#additional-references","title":"Additional References","text":"<p>Getting started with arcade emulation (Libretro)</p>"},{"location":"systems/cps3/","title":"Capcom CPS-3","text":""},{"location":"systems/cps3/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/cps3</code> .zip .7z"},{"location":"systems/cps3/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Final Burn Neo \u00a0 <code>default</code> docs.libretro.com/library/fbneo"},{"location":"systems/cps3/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files Final Burn Neo docs.libretro.com/library/fbneo/#bios"},{"location":"systems/cps3/#additional-references","title":"Additional References","text":"<p>Getting started with arcade emulation (Libretro)</p>"},{"location":"systems/daphne/","title":"Daphne","text":""},{"location":"systems/daphne/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/daphne</code> .daphne .singe"},{"location":"systems/daphne/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Hypseus Singe \u00a0 <code>default</code> github.com/DirtBagXon/hypseus-singe"},{"location":"systems/daphne/#instructions","title":"Instructions","text":""},{"location":"systems/daphne/#background","title":"Background","text":"<p>Hypseus-Singe supports two different game formats (Daphne and Singe). One thing to keep in mind (which will help when working with files) is that Daphne is emulation so it requires a rom dump of the arcade machine to function and Singe is simulation so it combines video files with LUA code to simulate the machines.</p> <p>The Daphne format requires a rom file that goes in the <code>daphne/roms</code> directory and a folder per game that contains resources (video files, sounds, etc...) for each game.  The Singe format is self-contained and its folders contain all the resources that a game requires to run.</p>"},{"location":"systems/doom/","title":"Doom","text":""},{"location":"systems/doom/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/doom</code> .doom"},{"location":"systems/doom/#emulatorcore","title":"Emulator/Core","text":"Name Documentation GZDoom github.com/ZDoom/gzdoom <p>GZDoom will detect the analog stick automatically, this makes menus navigatable. JELOS does not provide any controls mapping for gzdoom, as there is no obvious default mapping as with console emulators. Users have to map their own preferred controls.</p>"},{"location":"systems/doom/#creating-doom-files","title":"Creating <code>.doom</code> files","text":"<p>These files must be created for each WAD that you want to load with gzdoom. The file should contain at least one <code>IWAD</code> variable and optional <code>MOD</code> variables. Multiple <code>IWAD</code> and <code>MOD</code> variables can be used in the same file to load multiple wads, mods and packages. Therefore, multiple .doom files can be created for the same WAD for each configuration of the game. </p> <p>It is recommended to store WAD files in a <code>\\iwads</code> subfolder and MODs in a <code>\\mods</code> subfolder. You would then include the path to each file in the .doom file (see examples below)</p> Example Folder Structure<pre><code>/roms/doom/\n    \u251c\u2500 doom2.doom\n    \u251c\u2500 heretic-mod.doom\n    \u251c\u2500 iwads/\n    \u2502   \u251c\u2500 doom2.wad\n    \u2502   \u251c\u2500 heretic.wad\n    \u2502   \u2514\u2500 IWMPP_Heretic.wad\n    \u2514\u2500 mods/\n        \u251c\u2500 precise-crosshair-v1.4.1.pk3\n        \u2514\u2500 target-spy-v2.0.1.pk3\n</code></pre>"},{"location":"systems/doom/#example-doom-2-no-mods","title":"Example: Doom 2 (no mods)","text":"<p><code>/roms/doom/doom2.doom</code> would contain <pre><code>IWAD=iwads/doom2.wad\n-- end --\n</code></pre> to load vanilla Doom 2</p> <p>don't leave any space between <code>GRP</code> or <code>PATH</code> and <code>=</code> and enclose filenames containing spaces with \"quotes\"</p>"},{"location":"systems/doom/#example-heretic-with-mods","title":"Example: Heretic (with mods)","text":"<p>Example: <code>/roms/doom/heretic-mod.doom</code> would contain <pre><code>IWAD=iwads/heretic.wad\nIWAD=iwads/IWMPP_Heretic.wad\nMOD=mods/precise-crosshair-v1.4.1.pk3\nMOD=mods/target-spy-v2.0.1.pk3\n-- end --\n</code></pre> to load Heretic with additional patches and mods.</p> <p>make sure to add <code>-- end --</code> to the end of the file</p>"},{"location":"systems/dreamcast/","title":"Sega Dreamcast","text":""},{"location":"systems/dreamcast/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/dreamcast</code> .lst .bin .dat .zip .7z"},{"location":"systems/dreamcast/#emulatorcore","title":"Emulator/Core","text":"Name\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Platform(s) Documentation Flycast AMD64, RK3326, RK3399, S922X, RK3566 docs.libretro.com/library/flycast Flycast 2021 RK3326, S922X, RK3566 docs.libretro.com/library/flycast Flycast 32 RK3326 docs.libretro.com/library/flycast Flycast (Stand Alone) AMD64, RK3326, RK3399, S922X, RK3566 github.com/flyinghead/flycast"},{"location":"systems/dreamcast/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files All docs.libretro.com/library/flycast/#bios"},{"location":"systems/easyrpg/","title":"EasyRPG","text":""},{"location":"systems/fbn/","title":"Final Burn Neo","text":""},{"location":"systems/fbn/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/fbneo</code> .zip .7z"},{"location":"systems/fbn/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Final Burn Neo \u00a0 <code>default</code> docs.libretro.com/library/fbneo"},{"location":"systems/fbn/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files Final Burn Neo docs.libretro.com/library/fbneo/#bios"},{"location":"systems/fbn/#additional-references","title":"Additional References","text":"<p>Getting started with arcade emulation (Libretro)</p>"},{"location":"systems/fds/","title":"Famicom Disk System (FDS)","text":""},{"location":"systems/fds/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/fds</code> .fds .zip .7z"},{"location":"systems/fds/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Nestopia \u00a0 <code>default</code> docs.libretro.com/library/nestopia_ue FCEUmm docs.libretro.com/library/fceumm QuickNES docs.libretro.com/library/quicknes"},{"location":"systems/fds/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files All disksys.rom (<code>ca30b50f880eb660a320674ed365ef7a</code>)"},{"location":"systems/gameandwatch/","title":"Nintendo Game &amp; Watch","text":""},{"location":"systems/gameandwatch/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/gameandwatch</code> .mgw .zip .7z"},{"location":"systems/gameandwatch/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Handheld Electronic (GW) docs.libretro.com/library/gw"},{"location":"systems/gamecube/","title":"Nintendo Gamecube","text":""},{"location":"systems/gamecube/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/gamecube</code> .gcm .iso .gcz .ciso .wbfs .rvz .dol"},{"location":"systems/gamecube/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Dolphin (SA) \u00a0 <code>default</code> dolphin-emu.org/docs/guides Dolphin docs.libretro.com/library/dolphin"},{"location":"systems/gamegear/","title":"Sega Game Gear","text":""},{"location":"systems/gamegear/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/gamegear</code> .gg .bin .zip .7z"},{"location":"systems/gamegear/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Gearsystem docs.libretro.com/library/gearsystem Genesis Plus GX docs.libretro.com/library/genesis_plus_gx PicoDrive docs.libretro.com/library/picodrive SMS Plus GX docs.libretro.com/library/smsplus GG (Mednafen) mednafen.github.io/documentation/gg.html"},{"location":"systems/gamegear/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files All see: docs.libretro.com/library/gearsystem/#bios"},{"location":"systems/gb/","title":"Nintendo Gameboy","text":""},{"location":"systems/gb/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/gb</code> .gb .zip .7z"},{"location":"systems/gb/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Gambatte \u00a0 <code>default</code> docs.libretro.com/library/gambatte SameBoy docs.libretro.com/library/sameboy Gearboy docs.libretro.com/library/gearboy TGB Dual docs.libretro.com/library/tgb_dual mGBA docs.libretro.com/library/mgba VBA-M docs.libretro.com/library/vba_m"},{"location":"systems/gb/#bios","title":"Bios","text":"Filename MD5 Path gb_bios.bin 32fbbd84168d3482956eb3c5051637f5 <code>roms/bios</code>"},{"location":"systems/gba/","title":"Nintendo Gameboy Advance","text":""},{"location":"systems/gba/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/gba</code> .gba .zip .7z"},{"location":"systems/gba/#emulatorcore","title":"Emulator/Core","text":"Name Platform Documentation mGBA \u00a0 <code>default</code> All docs.libretro.com/library/mgba gpSP All docs.libretro.com/library/gpsp VBA-M All docs.libretro.com/library/vba_m VBA Next All docs.libretro.com/library/vba_next Beetle GBA All docs.libretro.com/library/beetle_gba NanoBoyAdvance (SA) AMD64, RK3588 github.com/nba-emu/NanoBoyAdvance"},{"location":"systems/gba/#bios","title":"Bios","text":"Filename MD5 Path gba_bios.bin a860e8c0b6d573d191e4ec7db1b1e4f6 <code>roms/bios</code>"},{"location":"systems/gbc/","title":"Nintendo Gameboy Color","text":""},{"location":"systems/gbc/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/gbc</code> .gbc .zip .7z"},{"location":"systems/gbc/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Gambatte \u00a0 <code>default</code> docs.libretro.com/library/gambatte SameBoy docs.libretro.com/library/sameboy Gearboy docs.libretro.com/library/gearboy TGB Dual docs.libretro.com/library/tgb_dual mGBA docs.libretro.com/library/mgba VBA-M docs.libretro.com/library/vba_m"},{"location":"systems/gbc/#bios","title":"Bios","text":"Filename MD5 Path gbc_bios.bin dbfce9db9deaa2567f6a84fde55f9680 <code>roms/bios</code>"},{"location":"systems/genesis/","title":"Sega Genesis / Megadrive","text":""},{"location":"systems/genesis/#overview","title":"Overview","text":"System Game Path Supported Extensions Sega Genesis <code>roms/genesis</code> .md .gen .bin .sg .smd .zip .7z Megadrive <code>roms/megadrive</code> .md .gen .bin .sg .smd .zip .7z"},{"location":"systems/genesis/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Genesis Plus GX docs.libretro.com/library/genesis_plus_gx Genesis Plus GX Wide github.com/libretro/Genesis-Plus-GX-Wide PicoDrive docs.libretro.com/library/picodrive"},{"location":"systems/genesis/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files Genesis Plus GX docs.libretro.com/library/genesis_plus_gx/#bios PicoDrive docs.libretro.com/library/picodrive/#bios"},{"location":"systems/intellivision/","title":"Intellivision","text":""},{"location":"systems/intellivision/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/intellivision</code> .int .bin .rom .zip .7z"},{"location":"systems/intellivision/#emulatorcore","title":"Emulator/Core","text":"Name Documentation FreeIntv docs.libretro.com/library/freeintv"},{"location":"systems/intellivision/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files FreeIntv see: docs.libretro.com/library/freeintv/#bios"},{"location":"systems/j2me/","title":"Sun Microsystems J2ME","text":""},{"location":"systems/macintosh/","title":"Macintosh","text":""},{"location":"systems/macintosh/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/mac</code> .dsk .img .hfv .cmd .zip"},{"location":"systems/macintosh/#emulatorcore","title":"Emulator/Core","text":"Name Documentation minivmac docs.libretro.com/library/minivmac"},{"location":"systems/macintosh/#bios","title":"Bios","text":"Filename MD5 Path MacII.rom 66223BE1497460F1E60885EEB35E03CC <code>roms/bios</code>"},{"location":"systems/mame/","title":"MAME","text":""},{"location":"systems/mame/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/mame</code> .zip .7z Name Documentation MAME 2003-Plus \u00a0 <code>default</code> docs.libretro.com/library/mame2003_plus MAME 2010 docs.libretro.com/library/mame_2010 MAME 2015 docs.libretro.com/guides/arcade-getting-started MAME (Current) docs.libretro.com/guides/arcade-getting-started"},{"location":"systems/mame/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files All docs.libretro.com/library/mame2003_plus/#bios"},{"location":"systems/mame/#additional-references","title":"Additional References","text":"<p>Getting started with arcade emulation (Libretro)</p>"},{"location":"systems/mastersystem/","title":"Sega Master System","text":""},{"location":"systems/mastersystem/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/mastersystem</code> .sms .bin .zip .7z"},{"location":"systems/mastersystem/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Gearsystem docs.libretro.com/library/gearsystem Genesis Plus GX docs.libretro.com/library/genesis_plus_gx PicoDrive docs.libretro.com/library/picodrive SMS Plus GX docs.libretro.com/library/smsplus SMS (Mednafen) mednafen.github.io/documentation/sms.html"},{"location":"systems/mastersystem/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files All see: docs.libretro.com/library/gearsystem/#bios"},{"location":"systems/megaduck/","title":"Mega Duck","text":""},{"location":"systems/megaduck/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/megaduck</code> .bin .zips .7z"},{"location":"systems/megaduck/#emulatorcore","title":"Emulator/Core","text":"Name Documentation SameDuck docs.libretro.com/library/sameduck"},{"location":"systems/moonlight/","title":"Moonlight","text":"<p>JELOS now supports Moonlight Game Streaming, which allows to connect to your local computer running Moonlight and stream AAA games.</p>"},{"location":"systems/moonlight/#step-1-setup-moonlight-on-your-pc","title":"Step 1: Setup Moonlight on your PC","text":"<p>Please follow standard guide to setup Moonlight on your home PC, link.</p>"},{"location":"systems/moonlight/#step-2-configure-moonlight-in-jelos","title":"Step 2: Configure Moonlight in JELOS","text":"<p>The setup requires pairing with your local PC running Moonlight and then populating Moonlight Streaming tab with all your games. After those are completed, you can select an individual game to start streaming.</p>"},{"location":"systems/moonlight/#pair-with-your-local-pc","title":"Pair with your local PC","text":"<ul> <li>While in EmulationStation press START to open the Main Menu</li> <li>Select \"MOONLIGHT GAME STREAMING\" submenu</li> <li>Please note the \"PAIRING PIN\" at the bottom of the window</li> <li>You can also specify \"SERVER IP\" address, but it should be detected automatically</li> <li>Select \"PAIR WITH SERVER\" option</li> <li>Now, go to the local PC and enter PIN to continue the pairing process</li> <li>You should see a confirmation message on your device</li> <li>The paring process should complete</li> </ul> <p>After pairing was successful, select \"UPDATE MOONLIGHT GAMES\" option. This should query the server for the list of all games and populate Moonlight Streaming system in Emulation Station.</p>"},{"location":"systems/moonlight/#step-3-play","title":"Step 3: Play","text":"<p>Browse to the Moonlight system in Emulation Station. Select the game you want to play. The game should start and you should be able to interact with it.</p>"},{"location":"systems/moonlight/#remote-playing-over-internet","title":"Remote Playing over internet","text":"<ul> <li>The easiest option is to add your device to your Tailscale network with your local PC.</li> <li>Moonlight allows to open several ports to connect to the local PC to stream over the internet. Setup might be somewhat complicated.</li> <li>Another option is to use WireGuard to setup the connection with the device. This approach requires only a single open port, but it requires WireGuard server to be running on your local network.</li> </ul>"},{"location":"systems/mplayer/","title":"Media Player","text":""},{"location":"systems/mplayer/#overview","title":"Overview","text":"Game\u00a0Path\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Supported Extensions <code>roms/mplayer</code> .mp4 .mkv .avi .mov .wmv .m3u .mpg .ytb .twi .sh .mp3 .aac .mka .dts .flac .ogg .m4a .ac3 .opus .wav .wv .eac33 .thd"},{"location":"systems/mplayer/#emulatorcore","title":"Emulator/Core","text":"Name Documentation mpv mpv.io/manual/master/"},{"location":"systems/mplayer/#controls","title":"Controls","text":"Button Action A(SOUTH) Play/Pause B(EAST) Change Audio Track Y(WEST) Change Subtitle Track X(NORTH) View OSD D-Pad Left Skip Backward 5 Seconds D-Pad Right Skip Forward 5 Seconds D-Pad Up Skip Forward 60 Seconds D-Pad Down Skip Backward 60 Seconds SELECT+START Quit (Saves Playback Position)"},{"location":"systems/msx/","title":"Microsoft MSX 1 &amp; 2","text":"<p>msx msx2</p>"},{"location":"systems/music/","title":"Music Player","text":""},{"location":"systems/n64/","title":"Nintendo 64","text":""},{"location":"systems/n64/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/n64</code> .z64 .n64 .v64 .zip .7z"},{"location":"systems/n64/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Mupen64Plus-Next \u00a0 <code>default</code> docs.libretro.com/library/mupen64plus Mupen64Plus docs.libretro.com/library/mupen64plus Parallel N64 github.com/libretro/parallel-n64 Mupen64Plus (SA) mupen64plus.org/docs"},{"location":"systems/naomi/","title":"Sega Naomi","text":""},{"location":"systems/naomi/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/naomi</code> .lst .bin .dat .zip .7z"},{"location":"systems/naomi/#emulatorcore","title":"Emulator/Core","text":"Name\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Platform(s) Documentation Flycast AMD64, RK3326, RK3399, S922X, RK3566 docs.libretro.com/library/flycast Flycast 2021 RK3326, S922X, RK3566 docs.libretro.com/library/flycast Flycast 32 RK3326 docs.libretro.com/library/flycast Flycast (Stand Alone) AMD64, RK3326, RK3399, S922X, RK3566 github.com/flyinghead/flycast"},{"location":"systems/naomi/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files All docs.libretro.com/library/flycast/#bios"},{"location":"systems/naomi/#additional-references","title":"Additional References","text":"<p>Getting started with arcade emulation (Libretro)</p>"},{"location":"systems/nds/","title":"Nintendo DS","text":""},{"location":"systems/nds/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/nds</code> .nds .zip .7z"},{"location":"systems/nds/#emulatorcore","title":"Emulator/Core","text":"Name Platform Documentation melonDS \u00a0 <code>default</code> All docs.libretro.com/library/melonds DeSmuME All docs.libretro.com/library/desmume melonDS (SA) All melonds.kuribo64.net Drastic (SA) All --"},{"location":"systems/nds/#bios","title":"Bios","text":"Filename MD5 Path bios7.bin df692a80a5b1bc90728bc3dfc76cd948 <code>roms/bios</code> bios9.bin a392174eb3e572fed6447e956bde4b25 <code>roms/bios</code> firmware.bin <code>roms/bios</code> dsi_bios7.bin <code>roms/bios</code> dsi_bios9.bin <code>roms/bios</code> dsi_firmware.bin <code>roms/bios</code> dsi_nand.bin <code>roms/bios</code> dsi_sd_card.bin <code>roms/bios</code>"},{"location":"systems/neogeo/","title":"SNK Neo Geo","text":""},{"location":"systems/neogeo/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/neogeo</code> .zip .7z"},{"location":"systems/neogeo/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Final Burn Neo \u00a0 <code>default</code> docs.libretro.com/library/fbneo MAME 2003-Plus docs.libretro.com/library/mame2003_plus MAME 2010 docs.libretro.com/library/mame_2010 MAME 2015 docs.libretro.com/guides/arcade-getting-started MAME (Current) docs.libretro.com/guides/arcade-getting-started"},{"location":"systems/neogeo/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files Final Burn Neo docs.libretro.com/library/fbneo/#bios MAME docs.libretro.com/library/mame2003_plus/#bios"},{"location":"systems/neogeo/#additional-references","title":"Additional References","text":"<p>Getting started with arcade emulation (Libretro)</p>"},{"location":"systems/neogeocd/","title":"SNK Neo Geo CD","text":""},{"location":"systems/neogeocd/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/neocd</code> .cue .iso .chd"},{"location":"systems/neogeocd/#emulatorcore","title":"Emulator/Core","text":"Name Documentation NeoCD \u00a0 <code>default</code> github.com/libretro/neocd_libretro"},{"location":"systems/neogeocd/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files NeoCD github.com/libretro/neocd_libretro#bios"},{"location":"systems/nes/","title":"NES / Famicom","text":""},{"location":"systems/nes/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/nes</code> .nes .unif .unf .zip .7z <code>roms/famicom</code> .nes .unif .unf .zip .7z"},{"location":"systems/nes/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Nestopia \u00a0 <code>default</code> docs.libretro.com/library/nestopia_ue FCEUmm docs.libretro.com/library/fceumm QuickNES docs.libretro.com/library/quicknes Mesen docs.libretro.com/library/mesen"},{"location":"systems/ngp/","title":"Neo Geo Pocket / Pocket Color","text":""},{"location":"systems/ngp/#overview","title":"Overview","text":"System Game Path Supported Extensions Neo Geo Pocket <code>roms/ngp</code> .ngp .zips .7z Neo Geo Pocket Color <code>roms/npgc</code> .ngc .zips .7z"},{"location":"systems/ngp/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Beetle NeoPop docs.libretro.com/library/beetle_neopop RACE docs.libretro.com/library/race ngp (Mednafen) mednafen.github.io/documentation/ngp.html"},{"location":"systems/odyssey2/","title":"Magnavox Odyssey","text":""},{"location":"systems/odyssey2/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/odyssey</code> .bin .zip .7z"},{"location":"systems/odyssey2/#emulatorcore","title":"Emulator/Core","text":"Name Documentation O2EM docs.libretro.com/library/o2em"},{"location":"systems/odyssey2/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files O2EM see: docs.libretro.com/library/o2em/#bios"},{"location":"systems/openbor/","title":"Open Beats of Rage","text":""},{"location":"systems/pc/","title":"MS-DOS","text":""},{"location":"systems/pc88/","title":"NEC PC-88","text":""},{"location":"systems/pc98/","title":"NEC PC-98","text":""},{"location":"systems/pcengine/","title":"NEC PC-Engine / TurboGrafx-16","text":""},{"location":"systems/pcengine/#overview","title":"Overview","text":"System Game Path Supported Extensions PC-Engine <code>roms/pcengine</code> .pce .bin .zip .7z PC-Engine CD <code>roms/pcenginecd</code> .cue .ccd .chd .toc .m3u TurboGrafx-16 <code>roms/tg16</code> .pce .bin .zip .7z TurboGrafx-CD <code>roms/tg16cd</code> .cue .ccd .chd .toc .m3u"},{"location":"systems/pcengine/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Beetle PCE FAST <code>default</code> docs.libretro.com/library/beetle_pce_fast Beetle PCE docs.libretro.com/library/beetle_pce_fast Beetle SuperGrafx docs.libretro.com/library/beetle_sgx PCE (Mednafen) mednafen.github.io/documentation/pce.html PCE FAST (Mednafen) mednafen.github.io/documentation/pce_fast.html"},{"location":"systems/pcengine/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files All see: docs.libretro.com/library/beetle_pce_fast/#bios"},{"location":"systems/pcfx/","title":"NEC PC-FX","text":""},{"location":"systems/pcfx/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/pcfx</code> .chd .cue .ccd .toc"},{"location":"systems/pcfx/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Beetle PCFX <code>default</code> docs.libretro.com/library/beetle_pc_fx PCFX (Mednafen) mednafen.github.io/documentation/pcfx.html"},{"location":"systems/pcfx/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files All see: docs.libretro.com/library/beetle_pc_fx/#bios"},{"location":"systems/pet/","title":"Commodore PET","text":""},{"location":"systems/pico-8/","title":"Pico-8","text":""},{"location":"systems/pico-8/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/pico-8</code> .png .p8"},{"location":"systems/pico-8/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Pico-8 \u00a0 <code>default</code> https://www.lexaloffle.com/pico-8.php Fake-08 https://github.com/jtothebell/fake-08"},{"location":"systems/pico-8/#instructions","title":"Instructions","text":""},{"location":"systems/pico-8/#option-1-running-pico-8-through-the-native-engine","title":"Option 1: Running Pico-8 through the native engine","text":"<p>Pico-8 games are best played with the default emulator as it supports all native features without any limitations.  You need to purchase it from Lexaloffle and we do recommend that you buy a copy if you can. Its an awesome piece of software and it also comes with the tools to make your own games.</p>"},{"location":"systems/pico-8/#setup","title":"Setup","text":"<p>Once you have purchased a license; the files you need will depend on the device you are using. These instructions will walk through how to set things up to work on all of our supported devices.</p> <ul> <li>Go to Lexaloffle's download page</li> <li>From that page download the <code>Linux 64-bit</code> zip file and the <code>Raspberry Pi</code> zip file</li> <li>From the Linux 64-bit zip file...<ul> <li>Create a directory in <code>roms/pico-8</code> called <code>x86_64</code></li> <li>Upload the <code>pico8_dyn</code> and <code>pico8.dat</code> from the Linux 64-bit zip to this directory (you do not need any other files)</li> </ul> </li> <li>From the Raspberry Pi zip file...<ul> <li>Create a directory in <code>roms/pico-8</code> called <code>aarch64</code></li> <li>Upload the <code>pico8_64</code> and <code>pico8.dat</code> from the Raspberry Pi zip to this directory (you do not need any other files)</li> </ul> </li> </ul> Folder Structure<pre><code>/roms/pico-8/\n    \u251c\u2500 x86_64/\n    \u2502   \u251c\u2500 pico8_dyn\n    \u2502   \u251c\u2500 pico8.dat\n    \u251c\u2500 aarch64/\n    \u2502   \u251c\u2500 pico8_64\n    \u2502   \u251c\u2500 pico8.dat\n    \u2514\u2500 Splore.png\n</code></pre>"},{"location":"systems/pico-8/#playing-a-game","title":"Playing a game","text":"<p>Once the above is set up is you have 2 options for playing games through Pico-8's native engine:</p> <ol> <li>Using Splore<ul> <li>Splore is awesome as it allows you to browse and play the entire library of user created games with an internet connection.  </li> <li>To use this method simply launch <code>Splore</code> from the gamelist.</li> <li>Note that you will need an internet connection to browse the pico-8 BBS (If you don't have an internet connection you can still use it to launch games you have downloaded previously)</li> <li>To exit a game and return to EmulationStation you can either (1) press the START button while highlighting a game in Splore then selecting <code>Options &gt; Shutdown</code> or (2) Press L1 + SELECT + START</li> </ul> </li> <li>Through .png or .p8 files added directly <code>roms/pico-8</code> or <code>roms/pico-8/carts</code><ul> <li>Browse the list of games (aka. \"Carts\") on Lexaloffle's website</li> <li>Download the .png or .p8 file for any game you are interested in playing and upload it to either <code>roms/pico-8</code> or <code>roms/pico-8/carts</code><ul> <li><code>roms/pico-8</code> is recommended if you want to have your games show up directly when you open the Pico-8 system in ES</li> <li><code>roms/pico-8/carts</code> is recommended if you plan to use Splore directly and also want to see your downloaded carts in the Splore interface.</li> </ul> </li> <li>Refresh EmulationStation by pressing START to open the Main Menu then select <code>Game Settings &gt; Update Gamelists</code>.</li> <li>You should now be able to launch the game by selecting it from the gamelist.</li> <li>To exit a game and return to EmulationStation you can either (1) press the START button then selecting <code>Options &gt; Shutdown</code> or (2) Press L1 + SELECT + START</li> </ul> </li> </ol>"},{"location":"systems/pico-8/#option-2-running-through-retroarch-fake-08","title":"Option 2: Running through RetroArch Fake-08","text":"<p>Fake-08 does not support all the native features of Pico-8 so its not guaranteed that every game will work with it.</p> <ul> <li>Set the default emulator for Pico-8 to Fake-08</li> <li>Browse the list of games (aka. \"Carts\") on Lexaloffle's website</li> <li>Download the .png file for any game you are interested in playing and upload it to <code>roms/pico-8</code></li> <li>Refresh EmulationStation by pressing START to open the Main Menu then select <code>Game Settings &gt; Update Gamelists</code>.</li> <li>You should now be able to launch the game by selecting it from the gamelist.</li> </ul>"},{"location":"systems/pico-8/#controls","title":"Controls","text":""},{"location":"systems/pico-8/#emulatorcore-pico-8","title":"Emulator/Core: Pico-8","text":"Button Action A(SOUTH) X/V B(EAST) O/Z/C START Menu"},{"location":"systems/pokemini/","title":"Nintendo Pok\u00e9mon Mini","text":""},{"location":"systems/pokemini/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/pokemini</code> .min .zip .7z"},{"location":"systems/pokemini/#emulatorcore","title":"Emulator/Core","text":"Name Documentation PokeMini \u00a0 <code>default</code> docs.libretro.com/library/pokemini"},{"location":"systems/pokemini/#bios","title":"Bios","text":"Filename MD5 Path bios.min 1e4fb124a3a886865acb574f388c803d <code>roms/bios</code>"},{"location":"systems/ports/","title":"Ports","text":""},{"location":"systems/ports/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/ports</code> .sh"},{"location":"systems/ports/#using-portmaster","title":"Using PortMaster","text":"<p>PortMaster provides a easy way to set up and play ports of many homebrew and classic games.  You can browse the games available on their website here: https://portmaster.games/</p>"},{"location":"systems/ports/#setup","title":"Setup","text":"<p>PortMaster is only known to work on ARM devices at this time.</p> <p>Follow PortMaster's install instructions for JELOS listed on their wiki here. You can use either the script or zip method described on that page.  </p> <p>For any questions regarding PortMaster please check out their Discord</p>"},{"location":"systems/ps2/","title":"Sony PlayStation 2","text":""},{"location":"systems/ps2/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/ps2</code> .chd .iso .mdf .cso .gz"},{"location":"systems/ps2/#emulatorcore","title":"Emulator/Core","text":"Name Platform Documentation PCSX2 (Stand Alone) AMD64 pcsx2.net LRPS2 AMD64 docs.libretro.com/library/pcsx2 AetherSX2 RK3588, S922X, RK3399 www.aethersx2.com/archive"},{"location":"systems/ps2/#bios","title":"Bios","text":"<p>You need at least one of the files from the following table.</p> Emulator Required Files Path PCSX2 SCPH-70012.bin <code>roms/bios/pcsx2/bios</code> LRPS2 see details <code>roms/bios/pcsx2/bios</code> AetherSX2 SCPH-70012.bin <code>/roms/bios/aethersx2/bios</code>"},{"location":"systems/ps3/","title":"Sony PlayStation 3","text":""},{"location":"systems/ps3/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/ps3</code> .ps3 .psn"},{"location":"systems/ps3/#emulatorcore","title":"Emulator/Core","text":"Name Documentation RPCS3 rpcs3.net/quickstart"},{"location":"systems/ps3/#instructions","title":"Instructions","text":""},{"location":"systems/ps3/#1-firmware-setup","title":"1. Firmware Setup","text":"<p>RPCS3 requires official PS3 firmware to be installed through RPCS3's GUI before you can run games. Its recommended to have a mouse/keyboard plugged in for these steps to make it easier to navigate RPCS3's GUI.</p> <ol> <li>Download the latest official PS3 firmware from Sony's PS3 System Software page. (The downloaded file will be named <code>PS3UPDAT.PUP</code>)</li> <li>Transfer the <code>PS3UPDAT.PUP</code> file to <code>/roms/temp</code>.  If the <code>temp</code> folder does not exist then please create it (you will delete this file after you have installed it).</li> <li>Navigate to the Tools system and then select Start RPCS3. This will open the RPCS3 GUI where you will install the firmware you downloaded above.</li> <li>Select <code>File &gt; Install Firmware.</code></li> <li>Navigate to <code>~/roms/temp</code>, select <code>PS3UPDAT.PUP</code> and press <code>Open</code></li> </ol> <p>The firmware will be installed and then a window will open to process the needed files; please let this process complete.  Once complete you can close out RPCS3 and return to EmulationStation. You can also delete <code>PS3UPDAT.PUP</code> from <code>/roms/temp</code> to free up space.</p>"},{"location":"systems/ps3/#2-game-setup","title":"2. Game Setup","text":"<p>PS3 games are available in two formats: Disc-Based Games and Digital PSN Packages. The steps for setting up a given game differ depending on its source format.</p>"},{"location":"systems/ps3/#disc-based-games","title":"Disc-Based Games","text":"<p>RPCS3 works with decrypted ISO files stored in a folder format so you will need to convert your discs to this format before they can be read by the emulator.</p>"},{"location":"systems/ps3/#steps","title":"Steps:","text":"<ol> <li>Follow these instructions from RPCS3's wiki to dump and decrypt your PS3 disc (recommended: follow the instructions for using ps3-disc-dumper).</li> <li>Add a <code>.ps3</code> extension to the end of the folder name that was generated by ps3-disc-dumper.</li> <li>Upload that folder (with the .ps3 extension) to <code>roms/ps3</code> Example Folder Structure<pre><code>/roms/ps3/\n    \u2514\u2500 Game name.ps3/\n        \u251c\u2500 PS3_GAME/\n        \u2502  \u251c\u2500 LICDIR/\n        \u2502  \u251c\u2500 TROPDIR/ (trophy data)\n        \u2502  \u251c\u2500 USRDIR/ (the main game data)\n        \u2502  \u251c\u2500 ICON0.PNG\n        \u2502  \u251c\u2500 PARAM.SFO\n        \u2502  \u251c\u2500 PIC0.PNG\n        \u2502  \u251c\u2500 PS3LOGO.DAT\n        \u2502  \u2514\u2500 (various other metadata files)\n        \u251c\u2500 PS3_UPDATE/ (built-in firmware update, if applicable)\n        \u2514\u2500 PS3_DISC.SFB\n</code></pre></li> <li>Refresh EmulationStation by pressing START to open the Main Menu then select <code>Game Settings &gt; Update Gamelists</code>.  </li> </ol> <p>Once complete you should now see your game in the PS3 gamelist.</p>"},{"location":"systems/ps3/#digital-psn-packages","title":"Digital PSN Packages","text":"<p>Digital PSN Packages will only work in dev at this time. Please do not try them if you are running a main release.</p> <p>RPCS3 requires Digial PSN Packages to be installed through the emulator GUI before they can be played.  If you have questions regarding which files are necessary to install PSN games, please check out the RPCS3 wiki.  The following notes will focus only on the steps needed once you have the needed files.</p>"},{"location":"systems/ps3/#rpcs3-steps","title":"RPCS3 Steps:","text":"<ol> <li>Upload the needed files for you PSN game to <code>~/roms/temp</code> (you will delete these files after installation)</li> <li>Navigate to the Tools system and then select Start RPCS3. This will open the RPCS3 GUI where you will install your PSN game.</li> <li>Select <code>File &gt; Install Packages/Raps/Edats</code></li> <li>Navigate to <code>~/roms/temp</code>, select the files for your PSN game and press <code>Open</code></li> <li>After install please note down the value that is displayed in the <code>Serial</code> column in RPCS3's game list for the game you just installed  (you will use this in the next set of steps)</li> </ol> <p>Once complete you can close out RPCS3 and return to EmulationStation. You can also delete your PSN game files from <code>/roms/temp</code> to free up space.</p> <p>As a side note your installed games can be found in <code>~/roms/bios/RPCS3/dev_hdd0/games</code> (this may be useful if you ever run into storage limitaions and want to free up space)</p>"},{"location":"systems/ps3/#emulationstation-steps","title":"EmulationStation Steps:","text":"<p>In order for your newly installed game to show up in EmulationStation you need to create one more thing... a <code>.psn</code> file to represent your installed game.</p> <ol> <li>Create a file in <code>~/roms/ps3</code> called <code>[Game Name].psn</code> where [Game Name] is a readable name for your game (this will help with scraping)</li> <li>Edit that file and on the first line paste the Serial of the game that you noted down from the steps above Example File Setup<pre><code>/roms/ps3/\n    \u2514\u2500 Afterburner Climax (USA).psn\n        \u2514\u2500 NPUB30151\n</code></pre></li> <li>Save the file</li> <li>Refresh EmulationStation by pressing START to open the Main Menu then select <code>Game Settings &gt; Update Gamelists</code>.</li> </ol> <p>Once done you should be able to launch your PSN game directly from the EmulationStation gamelist.</p>"},{"location":"systems/ps3/#3-running-a-game","title":"3. Running a Game","text":"<p>On the first boot of a game, RPCS3 will compile its PPU modules. This can take a long time so please have patience as its required to run the game. Allowing RPCS3 to do this will also make all future launches of the game much quicker.</p> <p>To exit a game and return to EmulationStation you can either (1) press the GUIDE button on your controller to open up RPCS3's menu and select <code>Exit</code> or (2) Press L1 + SELECT + START</p>"},{"location":"systems/psp/","title":"Sony PlayStation Portable (PSP)","text":""},{"location":"systems/psp/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/psp</code> .iso .cso .pbp .chd"},{"location":"systems/psp/#emulatorcore","title":"Emulator/Core","text":"Name Documentation PPSSPP (Stand Alone) ppsspp.org/docs/intro PPSSPP docs.libretro.com/library/ppsspp"},{"location":"systems/psp/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files PPSSPP docs.libretro.com/library/ppsspp/#bios"},{"location":"systems/psvita/","title":"Sony PlayStation Vita","text":""},{"location":"systems/psvita/#overview","title":"Overview","text":"Game Path Supported Extensions see notes .sh"},{"location":"systems/psvita/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Vita3K vita3k.org/quickstart.html"},{"location":"systems/psvita/#notes","title":"Notes","text":"<p>Support for this system is a work in progress.</p>"},{"location":"systems/psx/","title":"Sony PlayStation","text":""},{"location":"systems/psx/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/psx</code> .bin .cue .img .mdf .pbp .toc .cbn .m3u .ccd .chd .iso"},{"location":"systems/psx/#emulatorcore","title":"Emulator/Core","text":"Name Platform Documentation Beetle PSX AMD64, S922X, RK3399, RK3588 docs.libretro.com/library/beetle_psx DuckStation (Stand Alone) AMD64, S922X, RK3399, RK3588, RK3566 github.com/stenzek/duckstation PSX (Mednafen) AMD64 mednafen.github.io/documentation/psx.html PCSX ReARMed S922X, RK3399, RK3588, RK3566, RK3326 docs.libretro.com/library/pcsx_rearmed PCSX ReARMed 32 RK3399, RK3588, RK3566, RK3326 docs.libretro.com/library/pcsx_rearmed DuckStation All github.com/stenzek/duckstation SwanStation All github.com/libretro/swanstation"},{"location":"systems/psx/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files Beetle PSX docs.libretro.com/library/beetle_psx/#bios PSX (Mednafen) mednafen.github.io/documentation/psx.html#Section_firmware_bios PCSX ReARMed docs.libretro.com/library/pcsx_rearmed/#bios"},{"location":"systems/saturn/","title":"Sega Saturn","text":""},{"location":"systems/saturn/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/saturn</code> .cue .chd .iso"},{"location":"systems/saturn/#emulatorcore","title":"Emulator/Core","text":"Name Documentation YabaSanshiro docs.libretro.com/library/yabause Beetle Saturn docs.libretro.com/library/beetle_saturn YabaSanshiro (Stand Alone) github.com/devmiyax/yabause Kronos (Stand Alone) github.com/FCare/Kronos"},{"location":"systems/saturn/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files All See: docs.libretro.com/library/beetle_saturn/#bios"},{"location":"systems/scummvm/","title":"SCUMMVM","text":""},{"location":"systems/scummvm/#scummvm-or-svm-files","title":".scummvm or .svm files","text":"<p>These files are created by <code>_Scan ScummVM Games.sh</code> script in <code>/storage/.config/scummvm</code> folder (which is also displayed in EmuStation). The script scans for game folders and generates the relevant <code>.scummvm</code> files to launch those games. The files are stored in <code>/storage/.config/scummvm/games</code>.  </p> <p><code>.scummvm</code> files are named using the common name of the game and the  Game Short Name in brackets (e.g. <code>Beneath a Steel Sky (sky).scummvm</code>). </p> <p><code>.scummvm</code> files contain a single line in the form:</p> <ul> <li><code>--path=</code> variable and the path to the folder containing the game, followed by</li> <li> Game Short Name</li> </ul> <p>Example: <code>/storage/.config/scummvm/games/Beneath a Steel Sky (sky).scummvm</code> contains <pre><code>--path=\"/roms/scummvm/Beneath a Steel Sky (CD VGA)\" sky\n</code></pre></p> <p>Note: enclose filenames containing spaces with \"quotes\"</p> <p>Note: <code>.scummvm</code> and <code>.svm</code> files are identical and interchangeable</p> <p>Note: the <code>.scummvm</code> files are NOT stored in <code>/roms/scummvm</code> and any <code>.scummvm</code> files stored there will not be displayed by EmuStation. EmuStation only displays <code>.scummvm</code> files that are in <code>/storage/.config/scummvm/games</code>.</p> <p>Note: to display metadata and media within EmuStation, put <code>gamelist.xml</code> in <code>/storage/.config/scummvm/games</code> and media into relevant subfolders (e.g. <code>/storage/.config/scummvm/games/media</code> folder with <code>boxart</code>, <code>images</code> and <code>videos</code> subfolders)</p>"},{"location":"systems/sega32x/","title":"Sega 32X","text":""},{"location":"systems/sega32x/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/sega32x</code> .32x .smd .bin .md .zip .7z"},{"location":"systems/sega32x/#emulatorcore","title":"Emulator/Core","text":"Name Documentation PicoDrive docs.libretro.com/library/picodrive"},{"location":"systems/sega32x/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files PicoDrive docs.libretro.com/library/picodrive/#bios"},{"location":"systems/segacd/","title":"Sega CD / Mega CD","text":""},{"location":"systems/segacd/#overview","title":"Overview","text":"System Game Path Supported Extensions Sega CD <code>roms/segacd</code> .chd .cue .iso .m3u Mega CD <code>roms/megacd</code> .chd .cue .iso .m3u"},{"location":"systems/segacd/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Genesis Plus GX docs.libretro.com/library/genesis_plus_gx PicoDrive docs.libretro.com/library/picodrive"},{"location":"systems/segacd/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files Genesis Plus GX docs.libretro.com/library/genesis_plus_gx/#bios PicoDrive docs.libretro.com/library/picodrive/#bios"},{"location":"systems/sg-1000/","title":"Sega SG-1000","text":""},{"location":"systems/sg-1000/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/sg-1000</code> .sg .bin .zip .7z"},{"location":"systems/sg-1000/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Gearsystem docs.libretro.com/library/gearsystem Genesis Plus GX docs.libretro.com/library/genesis_plus_gx PicoDrive docs.libretro.com/library/picodrive"},{"location":"systems/sg-1000/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files All see: docs.libretro.com/library/gearsystem/#bios"},{"location":"systems/snes/","title":"Super Nintendo / Super Famicom","text":""},{"location":"systems/snes/#overview","title":"Overview","text":"System Game Path Supported Extensions Super Nintendo <code>roms/snes</code> .smc .fig .sfc .swc .zip .7z Super Famicom <code>roms/sfc</code> .smc .fig .sfc .swc .zip .7z Satellaview <code>roms/satellaview</code> .smc .fig .bs .sfc .bsx .swc .zip .7z MSU-1 <code>roms/snesmsu1</code> .smc .fig .sfc .swc .zip .7z Sufami Turbo <code>roms/sufami</code> .st .zip .7z"},{"location":"systems/snes/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Snes9x \u00a0 <code>default</code> docs.libretro.com/library/snes9x Snes9x 2010 docs.libretro.com/library/snes9x_2010 Snes9x 2002 docs.libretro.com/library/snes9x_2002 Snes9x 2005 Plus docs.libretro.com/library/snes9x_2005_plus Beetle Supafaust github.com/libretro/supafaust BSNES docs.libretro.com/library/beetle_bsnes BSNES Mercury Performance docs.libretro.com/library/bsnes_mercury_performance BSNES HD (Beta) github.com/DerKoun/bsnes-hd"},{"location":"systems/snes/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files All STBIOS.bin (<code>d3a44ba7d42a74d3ac58cb9c14c6a5ca</code>)  BS-X.bin (<code>fed4d8242cfbed61343d53d48432aced</code>)"},{"location":"systems/supergrafx/","title":"NEC SuperGrafx","text":""},{"location":"systems/supergrafx/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/sgfx</code> .sgx .pce .zip .7z"},{"location":"systems/supergrafx/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Beetle SuperGrafx <code>default</code> docs.libretro.com/library/beetle_sgx Beetle PCE docs.libretro.com/library/beetle_pce_fast PCE (Mednafen) mednafen.github.io/documentation/pce.html"},{"location":"systems/supergrafx/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files All see: docs.libretro.com/library/beetle_sgx/#bios"},{"location":"systems/supervision/","title":"Supervision","text":""},{"location":"systems/supervision/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/supervision</code> .sv .zip .7z"},{"location":"systems/supervision/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Potator github.com/libretro/potator"},{"location":"systems/tic-80/","title":"TIC-80","text":""},{"location":"systems/uzebox/","title":"Uzebox","text":""},{"location":"systems/uzebox/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/uzebox</code> .uze"},{"location":"systems/uzebox/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Uzem docs.libretro.com/library/uzem"},{"location":"systems/vectrex/","title":"Vectrex","text":""},{"location":"systems/vectrex/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/vectrex</code> .vec .bin .zip .7z"},{"location":"systems/vectrex/#emulatorcore","title":"Emulator/Core","text":"Name Documentation vecx docs.libretro.com/library/vecx"},{"location":"systems/vic20/","title":"Commodore VIC-20","text":""},{"location":"systems/videopac/","title":"Philips Videopac","text":""},{"location":"systems/videopac/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/videopac</code> .bin .zip .7z"},{"location":"systems/videopac/#emulatorcore","title":"Emulator/Core","text":"Name Documentation O2EM docs.libretro.com/library/o2em"},{"location":"systems/videopac/#bios","title":"Bios","text":"<p>Path: <code>roms/bios</code></p> Emulator Required Files O2EM see: docs.libretro.com/library/o2em/#bios"},{"location":"systems/virtualboy/","title":"Nintendo Virtual Boy","text":""},{"location":"systems/virtualboy/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/virtualboy</code> .vb .zip .7z"},{"location":"systems/virtualboy/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Beetle VB docs.libretro.com/library/beetle_vb"},{"location":"systems/wii/","title":"Nintendo Wii","text":""},{"location":"systems/wii/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/wii</code> .gcm .iso .gcz .ciso .wbfs .rvz .dol .wad"},{"location":"systems/wii/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Dolphin (SA) \u00a0 <code>default</code> dolphin-emu.org/docs/guides Dolphin docs.libretro.com/library/dolphin"},{"location":"systems/wiiu/","title":"Nintendo Wii U","text":""},{"location":"systems/wiiu/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/wiiu</code> .wud .wux .wua"},{"location":"systems/wiiu/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Cemu (SA) \u00a0 <code>default</code> wiki.cemu.info/wiki/Main_Page"},{"location":"systems/wonderswan/","title":"Wonderswan / Wonderswan Color","text":""},{"location":"systems/wonderswan/#overview","title":"Overview","text":"System Game Path Supported Extensions Wonderswan <code>roms/wonderswan</code> .ws .zips .7z Wonderswan Color <code>roms/wonderswancolor</code> .wscs .zips .7z"},{"location":"systems/wonderswan/#emulatorcore","title":"Emulator/Core","text":"Name Documentation Beetle Cygne docs.libretro.com/library/beetle_cygne wswan (Mednafen) mednafen.github.io/documentation/wswan.html"},{"location":"systems/x1/","title":"Sharp X1","text":""},{"location":"systems/x68000/","title":"Sharp X68000","text":""},{"location":"systems/x68000/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/x68000</code> .dim .img .d88d .hdm .dup .2hd .xdf .hdf .cmd .m3u .zip .7z"},{"location":"systems/x68000/#emulatorcore","title":"Emulator/Core","text":"Name Documentation PX68k docs.libretro.com/library/px68k"},{"location":"systems/x68000/#bios","title":"Bios","text":"Path Files <code>roms/bios/keropi</code> Add the files listed here: docs.libretro.com/library/px68k/#bios"},{"location":"systems/xbox/","title":"Microsoft Xbox","text":""},{"location":"systems/xbox/#overview","title":"Overview","text":"Game Path Supported Extensions <code>roms/xbox</code> .iso <p>xemu requires game discs to be in the form of xiso images. These are generally saved with a .iso extension, but are not the same as typical ISO images and should be created following the instructions in Xemu's documentation (linked below).</p>"},{"location":"systems/xbox/#emulatorcore","title":"Emulator/Core","text":"Name Documentation xemu xemu.app/docs/disc-images"},{"location":"systems/xbox/#bios","title":"Bios","text":"<p>see: xemu.app/docs/required-files</p> Required Files Path mcpx_1.0.bin <code>/roms/bios/xemu/bios</code> Complex_4627v1.03.bin <code>/roms/bios/xemu/bios</code> eeprom.bin <code>/roms/bios/xemu/eeprom</code> xbox_hdd.qcow2 <code>/roms/bios/xemu/hdd</code>"},{"location":"systems/zmachine/","title":"Infocom Zmachine","text":""},{"location":"systems/zx81/","title":"Sinclair ZX81","text":""},{"location":"systems/zxspectrum/","title":"Sinclair ZX Spectrum","text":""}]}